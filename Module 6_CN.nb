(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3572733,      70222]
NotebookOptionsPosition[   3482185,      68518]
NotebookOutlinePosition[   3518788,      69296]
CellTagsIndexPosition[   3518706,      69291]
WindowTitle->Module 7
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"23bbb299-39e9-450e-961f-ac8f280393af"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
     "], {{0, 100}, {450, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{268.015625, Automatic},
   ImageSizeRaw->{450, 100},
   PlotRange->{{0, 450}, {0, 100}}], "Title"]], "Title",
 CellChangeTimes->{3.785141470231607*^9, 3.785141924332955*^9}],

Cell["Wolfram \:8bed\:8a00\:7f16\:7a0b\:ff1a\:6982\:5ff5\:5230\:5e94\:7528", \
"Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
   3.726941915180914*^9, 3.726941915962871*^9}, 3.72805557420755*^9, {
   3.730591596400971*^9, 3.7305915992067432`*^9}, {3.785144430726679*^9, 
   3.7851444313967543`*^9}, 3.7893874390714083`*^9, {3.811073898651424*^9, 
   3.811073909982416*^9}, {3.811074018112157*^9, 
   3.8110740225158*^9}},ExpressionUUID->"7afe06b9-69a1-44f3-a4c1-\
3852548aaa7e"],

Cell["\:5b9e\:4f53\:548c\:6570\:636e\:96c6", "Subtitle", "TentativeExample",
 CellChangeTimes->{{3.8110740316667843`*^9, 3.811074035564694*^9}, {
  3.8159313972832117`*^9, 
  3.815931401285103*^9}},ExpressionUUID->"87d29050-f4c8-4e18-9c32-\
a006c95685b8"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUHMd57zs7sznP5pxzALARC2CRAwEGAEQGkXPOOedMEIEAEUgQzAnM
USRNMUqUJVFWtCRfS5Z97SeHY+va9/paksP/VVdXdVdVV/f0LPmO7/MFzvnQ
PT2zk6d/3/9LVbl4w5TlwUAgsCWR/Ddl0Y6Rmzcv2jU1k1yYvn7LqhXrly2d
sH7rshXLNvcsDpGD62MCgd8TiyX7P/3pTx8ihtt2227bbbttt+22/Zez24y/
bbfttt2223bb/i+wzJLe23bbbtt/gmUUD/m/3v6zP4Pbdtv+K9ptzt+22/Z/
tv1ns/c2z2/bbfv/t93m/G27bbfttt222/Zf11TOxybXmJbCTL2cUm9aqrFf
bR5LZUb3a8nWsDq6H2dYmmF1ZL+OXW5EbFoT268nW2ZpwjatQTD1ciMzch/p
zMR9wzKaLYvPaCXWz7RMbv29LcxtgG1ZfL+N7KvWTqyDPEZ/+tziyfOk95PV
ya5TrUNjnbJl8/0ust+l7HchgWwT+Fa1nG5iPbblGjaIvB8DyPNrFY75s3if
t0skj2E8TqJoecZ2MNkOtvdFyxvsPEath92HcLu8IdFb/hD2vHTPV97aNkiz
HWS9Pn+meY/yXPaFx0oUHk9rOcwiPH6ieNscftn8Pkiv1+27kKNc5/g+Cfel
Xud2W+Gy4z3XPbevyHT36f7Zu91O/z1N0B1n3+mEPJ/fC+33IYK5fTZen4N1
eaDTcge635f6N9nd5jlG3CoWT47HG9vsgcy6LOPnLfEYPbcJlqBs1evk450R
THe+9bAwt3Z/xs/r1rE2DxvgtExubebjGvuEJZZl9pcvu1o/dvs26bjK+UBc
MbESBGLZVrJi0+LLEUioJNtScrnIvt64TI8Zl0sRE29bIL4MMQnl5mXytzGJ
NWRLjsUbxypMM44nsG2iYAlVZCtYUjXZVptby8j9JYtWSy1I/I1gss7qiTWQ
60VrZNaEYKppIcPSDGsm1sKslVownWyp9TONMNQ4HkNef0yokD5GKLPDPM6N
vP+hjDZ7S/fbqcUat2VG98P8cifZ7yLWyfY7EUsux4a7TcsaaFp4oL2f3cOO
8duw24XN5xObPZAdE22gp8Vl9VAz7181cl1EG+S0HM0xYsbziTOM3mawbbmD
5cuRruPHcocQ641gQ52Wp1i+5pj2enJ/+b3yNk+8HOG+xMfXPS9fFun1/h9i
/H1xXDfEtDxmxmeZN8Q+/lU8rnE/OaoN1hwb4ut7q96G/g6N73NOj7nPt47f
j8Yi/B6t37xo4m9e/O3TfX47frlLspBy2Wm6+2TXZfJtp2Ad9Hgo0zweYhYr
nOO4medJsp9hbkWLFY7HZrTbZpw3M5ilt5lG99vJubnNPpY+QNjnl20LMpOO
pwnbtP5kvz/dBtPIeZ6YuuX76mVzn7CCM8Pab7EsyC21md0HeUyyH0ohl1P4
tsUyfty8jh9vNtmVSu4/tb99mbAsRMyd8yXKfikzg+ec9dXmljM+rozynG9j
uCUwsy4TlifWMu6XM7ZX2Iy3OF8lbKsY7znja0xLrBEYX6tYncn5FM51Yimc
740aazLfF+P9Nt7nNNFsvlumct4wwu9gEnns2CLqT5icFjivMD7IWS9+b8n1
seF2i/k267udv2HJlN9llvL7NH6b2dwHUBnfjZDKeuFcIzFe4Xxkvrsw3tWM
2w9057kf5vu6ve4cL3JkiM2VPOW4l3EmRXM/bs9FfE7a677M6/fxHkb7Hvf1
vnI9bpMrHmeMzR1k7/t4jFhfz1FheA5ntT/f1I8Pa3A+ZHHeB++jZb0b/znn
rb/jrI6G88JtMgW2qz6AYZnkfGI8Ht12CpzvYLpG0DMi9zWsly/LnLd5zxne
rlibbPx8q3JdZ4S3Qc55i/Wc3Qbz+0tb7gfoWB8UGG9ai9Mod/rTx6T7BtNT
jeM244196xi9vcl9yv7UftRCCuODXpw3trFunC9lur7MZD3V9mXm9Qb3qdms
Dxg8TzB5bun6xDqT2wnlAt9VznM9L7A+UdTytcwY45NkzlPdnlJvM55yXtXu
Og2v8r3F5LnI9zQN46mmb6fvvaHpg+Q50O801fEK661tm+WTWn5u2DTb/zV8
4m5q5m9W9J+Zv+zif4eyBMaLlu1Dx2fbfJcZ78HzHGGbE6WWt87hmvN1NLxx
+9tcgZkqY1UeR2R7bx/+pg981zFdx8S++jy5mn31WF9Z/lX4CJ7PZZDGvsRj
q/5EH1nuehvLb+gRzJ3xIb6f42R+SPUBvDgv6nnrevG8EJnvDu2QqWp3bvy2
auyg2+EnmOctW+Nzbpssl32AUEaH5jY6Xc8sQ+F8Rpue+Tq+Zyi6XuC4zXKb
8UHl+pBW44tanpvJd4sxBrvT2kz/gjK81bwPqtFb6fU24819U8+3mo9h3IZx
3dKsbpyPLbbj87Ei43lsXozPMz8gvoJp+wqJ77aVCzyvMI9RztewmD3hd3yl
zfgEjZa3rMbW8kmChk9StTzT7gbTeXxeitUrnJfi880C61ts3e6l46n1N+M/
5HsSk1hB4wghFicPWlw3v4NBQaerMS36ewl32jpe8oU7Zc6rv0HLXPiuNfcY
vYPzkfR7jouW1zHdwfg+MNyXaXRxNCzWxYlprDlKzrtpcx3vdcz1YrGrCc9L
Z7rrPN+Dr5Db0foIuvfDlflRfJe8XhPX4VHFoxS/NUf/vXdwPkfDeA/WOzjv
qeXF3J1wPKvbwWLfZrFe0Pf8/ESvl89fsSzfSHOQTLdw7RJSH986FzL9b3Gd
636F9ZTrHSxmr9HzKueZ5gpaMX2B8Rka1qcPEDivct2d82r8XjSJ+5Z2bDfv
g3K8VWC8zXmZ9f3MGEBqixDnd7LeqefFfDzT8JzrCcJ+vJK7t+L4lTbnuY63
OM9ZX8bi9rUsL69yXtTu6rbam/MpIuMF1uvy8IZ+51uR8Q4tr8TstYw3OU+N
fC+DtDagkeXUzThV0PredyjG8/PtUkzLyXmR7x5x+q+S8dmc8T0+c/B9yM/3
RStGvM4l9v1l+d6Xv/eTH/BktQ9z43i+y75lg53mdX9u/kA0n5kbr718ADc+
R6Px/X6f3I5nD3Z+d/vCfyE/ZfymHEyPNpYf1lzW5u29+G/u+4ndO3LyussO
/dIpHaPMl+qQOpVzmxn7l41cl9HJzMl6Gtd3xO3b5Xi9lS+1WR4UuO+q9dMU
bZ+uxutFbc/Zzi4zPgTT5Ly+nONnzDf8FEHDc8ab+4qWN+6fxul5fp4bYzzL
Pxvm4Hy8EJsXLaGMWami63k+nsXsKbOrzXg9rbkz+c7j+Sbny03GJ9bLsfoE
Vb9XK6ZqeWYS4yNxXtbwwdRGO16vY7xUeydoe5HtGfy7wuJF5LtKYynGZ0F9
Vx5X0tffWWbk5MN6xtv1LPz35OZ/K7/dbP+M5zx3aPlsYftV8j3amrqI5/4I
LPUbU/dVExYF3720scVpD35rn6PK7t7Iml17P7rH9Lmfp/EHInH/qzS3mIfK
/NwI8fyovmvydzhW1O195H2sTtt/mby9jvOu5lJX56jx8eC8ehsxhi/yPSxz
3uJ/2I7RxzK9Y2v5Tvt8Z/Ge6H9iEv+N86PFeVm/B9XzrmWKfs9og1cOn+bN
0+VYvTZuny5vg5zz6QLX09W6vVZ2u3ZBv9tmc97Mw1Ofw9hy7gv5e8r61Gar
zkzPeSU2L3Fe3ZZZcfqAkXu3NLuRd6+2Y/SM7RbnqYavZpxX4vVaLV/t1O+i
STH7OrveLsWO04es2rsmRz6evydOPS/G7WWuO78zbQLL25l/1swYr9bY83o7
1VhMiubn5d9DSMjHS36vWEuTJRyLyPnIcXrO9lgvxue47LvF7r9y7T5E2Lqw
PSKXxfprtQbcJ9Nzhcf2FTsY7MPfcHktfvT1/ycmctXFT1HjApE0upem9stf
r/oCh8bvK9/F+9XE5qNluyNvZdaeRsV6He/5cU8dP5DFygXOi6yPNmcvaQwx
hm/H8u24vc13m/Mm661+IqlGr92O22eacfuQ5Ecw1huvh2yDzEJUF7H74udl
HdelGL3N+aAud69qeovzYl2++Df9Tb8g3WR90FPTt7J4cJvM+TSZ86FUI6bP
Gc+vk2P5Fs9Sbd5rOc9j9hbny5x8lxgv6vVyxvZKU7NbtXbl5rF4oa6ecr5K
w3iNnnfE6uuELbd6aqEUJ+cp25PVnHyjpefVunrT5xI+twzdtr9sGdwHELeK
ds9od+G8rOFtviucV+Njaow+QrzeUVNPGT/Qqd3FvLzvPHyPfP7zG5/vc853
iNP88JLrc5Xrar9VX02Xr/fS5a7Pc7A33/v0/MTYhFvPmea2vl+3hrci8yN9
7pG+C36ud61tUHgfjS/hZV8qds+fj/mbMvvuouS8wTgd79X6PC9dz2vwfffw
qDqex9pVLdLlqEGS4vhh+ZjuNrp6fLHe3uq9E86VsnULZj6fYAbP+6usF5hv
8F5bg98fao9eMF3Xn2cy3uSDnd8NauL2Zq6ec77FrsHj9XoGz1mNns12O7Zv
x/M541ssLa/lvCNmXwYpP58g6vtym/O0ll7Mw3ONz3rfpPp5kfM1crw+oUrR
9C75eEvLi4xvUOL1Qsw+ucHup2P9CEGpFsLul7DjLtx30+XieX29yHfVV1T0
u5bxvLbOWbNi73v40Lzmzku7a2vreYzeW8tHHa/X1h19ifO2F9tV7eyHf7pe
bemYHz/BjZ+90TPYwXmRUV+C65H8Cj/590iP6/s5qbznsfRBMmv7lKvxyfy+
XB/NY/mtxXfV/s7fklqb58l6Pz14Xvl667IH6yMx3q0u2IvzqrZ3NaHfnvfb
afrwYzPaneddSz91Cazvkp5PKEPcF2IA6VzPiTV5Qj6AsV7H+WC6qgUZM0TG
p9v5eet+qda0+W8yyPQvnDl7uUaPs95f3F7U8aWKjlc0PWV8uaXppXq7RHIs
sZzxuo5tK+w6+qR6dtwjJ6/2zin98bKWr2NavoFpd16LILw3Gj9K7HMw6xvs
+QWyvlfq7Qx/Tct4Z8+cpOV1Gj5sx6Ok/FWYz8jxiJX5qrezOR+R633OyfvU
7306h/dRv7ppVgfvI3DQwTYvHRwtG1Xd6YftCqe8bh+B47Hc8pmJxwibpcu5
OhMYbrHc5TlIz1/In+dGqNfw812JVPPnVf/XV99Td9tI2l3Le32szBfn3eL4
2RrGc/2vq8/3w3qR316Md+Ty7bp8Vb/HhiMwPqxwXum1Cwnc55eDFqvbyb7I
flV76eqhuqGLAUj5f5cZOw79L8TuRdZbfOcxfYM/GeZ8n2CayKk2amZtXosj
Z6+L3Yc0rNfW4Tk4LzJd3Lpp+XKWq69gXK9gDK+Ttb2hxQ2zuC/MtnPU04t1
d2r8voHl3Vm9oeXr9BNiGmIdAzfeS9ekqbkTzaWunvt5CuPF2TdBle0azkt1
qWF136eWl/S6O+cj8l13nS8dr+H8l6154nrdKy7vyjfd7DMfbNbq2Eiz1aLl
uxdzIt2HyFOX5yjV5LHL6kw+32beB+e85Bd4cD82Uk0hf370dQ+STeR+n+M9
Ppnv5/sZTX1B7mD3vJUn+91zYl9ZfZ5an+9ak6/jvMnykKoxtOzXG68jDkXi
egQ9L87OUY+pM3W8zDo3a7WZ4SsYbNfF/gX+09vY7A+KGlDJ63pdphynfsQA
xqD+JuON++V6X4rTy7o+JMXuWxz6Xs/5MiEnL8Tn1ePx5ZKe13Oex+v5fh0z
Nvs2qU5hvDAHxzHH1mR6TEoj2TaRbTOxFmpBaf6f2D8o5+MNptuc19XUa+bh
pNnxFisPr2W8OudOX28Xq2h5NUcl1qs6OJ8lbIV4fEjHeSVeH5et0fIq41Ud
71Vb5zYHJ9pzo9c5Oyr97jbb1Ef9vEO/fwVsZxZPH4ezRfB/tIz34XvoXpP0
/PvKdKX+0HFfQ4StJi6g433eYHfu88dwfO4q730w3y3+o2O+rnYgWs3u1/zk
5t1i9268FzR+nC6fr4vjq9reK1+v8j5LZr2rjvfJed2MHW3c3uEPiPF5Hmvv
cPUB9Ez3qJGS4q66Obm2DxCyfAAhD5DBzMj/8/o/K3Yv1NyrMWHOfMO3YDN4
gmntLFZv55StPDPTsCE2G0dlv26mjivnNRy3TdTxFVLMPsDi9TLjeY0dv1zL
WF9rMz+pyjQeqxeZntLErFmwJsb7RpZ7F2vv1Nm2vJ9Q7in01vCc8/0EPa/U
3aVrGJ/pVU+vct4tZyXU22W6/I4i9sSLGn5gZN3upt8dc+1c+B9pHplaEx1R
j2n0ux/d7pfPftnuYKq7Vo8XuB5vXRaYZr0Hymvkx3zlyXWaXcN4N/1uHDfm
6hew+fpeJnFfjRf0Ks95sG3sfdBpfNH85ce/TGxf8z57afu+fmcjPicful7V
9C6mMt085qL5/Wr7iNwXa/L1jA/5qc/34LxvTR+2OR/LY+kK50NaTS8c0+ZQ
5WOWX+CYn6uLzwv8p4zvoibVAzC/xMohpPN+u/5snZT+pp6ncfp21qsnMp71
3kmxamefvV2nL2t6B+cTSoXaOtUqNJdNi7H66ioE3lfKsXtrv9Ksv0syON3M
uF7PLjcxrd5EGW5ag5V/j0mpM/vkU+qEHroGhKheV/rjk5vM4z45L+XqHXH6
foKO99bysr/YoeG8reO9tLxjDoWub86zZ05gvF/zFZ9X/QCXXPyXOSe78d0t
P+7GI5HPfdXuHvX38TpT/ZGIs3H88F3V94OV3nk3pgtWEInvgh/gOKb4Dm4+
lJVb0L1fTtZL3Peca6PG9X3y1fHdipL1X5n5qbvvkc0X611i+9HG7z3r8ZX4
Pb2tD66r+sShX8h5LsvW7a61eGEX1rP6OXUdHN2MfK1xza1jvch5HpcXNb50
O3v2TtDK3fYXcrjtrF6g09b8PB5Bj7ex5zPQfDzXdXBYTRntqRM534/12fWz
e/HS5Di+U8+7afgK5TqZ8TFq7N7KybM5Nkl1Qsye1d8ZdXgp/QmvW022G5el
Xnh1DTqD8fWWSfNvDManOtekkfnuxnlVx0fIx+tmJPpiPJ9f78zH232kbnn4
SBpeU29H9bvPeno3xlvz6gc5zz9ejI+kfXIHQ46t+tHuQ9x5ro1l63Rvr8zG
KOLzbkynJuh5z/y62lvuynfBB1D9gHxx64PvrjbUg/06P0FzTH0/RZ2v+jqW
b2Nz2sH7HNZbHrH/TeG9ymktt5XvmhvvXWP5Q1zuNwrz7K1TY/iD3H1rge1a
HyArAvfdfAEt8znjNfreqgX2iN17af0sW+948l1lfabNejtX78wFBDUaP+jG
+bDKepdeKW38Xz+Hx+B90IrPizzhzGDsDw8i99HD/AXDr+hgWyGewHv01f56
zRz9kLBWjpbzEtcrJJ47WB9fJsy4q2Szb9icuySiwRMbzK1l9ez6Wru2PrmF
XVcrcF63/hzX8jbjQ27zbCW+mzNtg6w/3lwXSK6l955p68L4dIHv6vwbF87b
852c9XbSXGgt4yNwXumpi+O//69Cv1vnIOWyda7TxOzdctDqOddXjtsHj3Uz
brxy1j74rmU63e9VYvORTOGHjvG63LXI+HwPrktsd9PlgnG2FwwzLZ+ZtS/c
zro/Yd1drc8QISaRp8Y1OO81zGes1zJfp5PVHL4u/u7G+6g1vuZvIvm0kfR9
pBo90b/OETnf4+C8axxfx3T1uFcMX4gRus3QC6n1Q9FofmH9WpXtTp0vMJ5y
Xrhdhsp6levCZavW3j5H235BO+S4v3/OB636LKbtpXp8myVBa329/qaWN2L8
NIfP+uvSxTgAj/uLz6/NquGz5+fbbBPz+e6cl/vlrDXnqVUjQFgdIJo8QLV5
g2D19LjJ8hqhH15dS76a+QHNrO6+ivXC89h9fQTO17tzXlw7nq7py81eA1Cr
5b0Yn6HT8socPOmzj6zl7bXkhZx8Xxjv0PED/el4X5wXz7PqZZHzbudU3fnO
r373wXQ3/a7GtPNd/k7xD5yavde0PGZ0XxObdzx/F7arnHfcVtX/mteiy7c7
1rjXMX6Y3gpUzgu8L9BofF1tnnWdC+PzxfdCx1eZ1yrrJea76mmNvvdkrgvv
3T4v6z59st6N8/y4Oi/f1bzj+L7r9L9sHD9Lqc3zMyvXpQ5f2yfsO3dvr/Ul
6XwrZ6/M3YkYu++Qz9MZ/lgv1faxmTvBDJn3fA0zey4ei9EbzE7vYLzvZ9fx
8XVshDVwrfXxRN9ArTngzymd1f7RWj5b1zs5z+vrnTy3rYFtGc/prJtqYW1Z
ovsTxXk3utk3TONTnjcqvXL1dp5e5L0uXm/F7dU15IWZtmksVu/gvM/euQxd
zN5jDo5jnZoOLeet7ynnvC4fn8VqXHxoeIvxurr6aPW8utaWqJsizabXntdU
PefF9ygYr9O0bnVoLvel6nOL7Srjo+G7p7m8Zj4v3hGr13DVEZ8XWF043Nzy
21LdPtw047rCEaZJx8zj8fQ6dlzS++y5FCg6P4/r/F4h5qB5j6ycxSA45+Np
fEZhdp3E+lyF925M9eS0y/dS9D+0fpnw947vtN/fgcYiztLxyXmXPH4ompy9
bqaOW22eoO0917/xjNvrWB+p7t7lOoXvsdbsGxe+W2voaMxRw+dH19taXuY9
Z0YHrNx8Oq/F68/m73eZ95FuX2fNx3dZ79aa65Zm8j8ortUnxfzbnZwnmjqQ
VG8aY7nJ+hp7rXlHbl63Fo26Bo04+8aIzzcxrtezWrwaJS9fy+rvmszrad29
m5Y3GS+uxydyXuS7xPh0N873l+IrjpmIqpZ31HGo3xs5Tu9gfNid8RLTNfPu
eD+dqd8FHa/G7LM9jnlqeKX+qS85SVU7fZkYfZ6wjbpXzDaL3xLjdWx34Xu0
2l1kfJ7yt165eIcuZtw2+qmI/xlLvo80TpvXa8+6MfqujNuUjCPMHsU4zWPv
Q0xO0jq+oYgnt7OMvkeD6W3jOeMLmK6n/B+pxAbsuvxY8luITW1FHNnSvye+
QrxxHXmedM1R43vlqMvn5lJPz6/LcWF+pJh+xBi8hx+qWxtYm7/XxSY8OO8a
6/Kp6/2YOGfHrRbfre8u2p47l3k6Ede9c2O/yHnH9Rrmh+W4fkiI4Uv7bubJ
+Sji9hrW25zgs/g6WRxAYAjVke30+iDfZ36APDtfnq3vXD9Hrtmz+/FMhjk4
T3leJfBcjd1zxlda68kG/DI+gc3KobH6BtYjzzkvzrdT59c3Cn3yTcpMW853
dW2aJiFer2p5YQ15qW/OqKkXtLw6606Ye+zgvNST4eS8Y36zquX9xOu1c20H
Ohnvpdu91qdx47uO8RHz78p5sK85eC/9HiXjHTpd5LvI9XyZ8ZKulur+hOv8
5OnVOjtL2yqansa4BW3M94mONnrUAkHjN9ofgYLxCJbeSc8pMXHVZr+KEWsL
GOtTkG3OSATKpiCQ3EGO5ZNjZu1MIN6IwdVbMyiMuRPmb7DRzMOxvpcgORYI
knNBoAyBwjvp4wWSyOMGjd9zI8370b8j9xUkTA8UT0AgPJzcvoI+luFvxBWN
QCB1AAKhWpM/9L1z84s0uXaVj9a+wnspP697333w3i2W78Z58fFE3yBaH9iK
439FnFdy9doYvgfrQ266PssH5934HSlfn6WwPizEMt04r2O+mKvn59ywUY/n
xnr32KvEeXYsGFHfizFesba+HY6a7XQ2Pz+T+QFsHRtem0dn7fF5OQLr+bp5
Vnw/XWS/yHt7rqu23p6argavws7RC+vFB5R1aAKuOr6W6fhGe54tzbu3sL46
cY6tvS4NNarljT65ZnvtPbHuzsrHcy0v8r25b/H6dIXzhmVGysnrTKPhxV4T
v5x3xO1VxuvXjnfV8PyyI++us2jOWRrtHk3+va981/R9Odmu0eyGrnWYyXtH
fNwtJ6Ct/dOxXacRxesVv8J4Htld5LfVRPhZTX53jcgceB9KNzyOmtMfo2jb
a8gcvQHZQ+Yia9gSZA1fgpwxq1G27BwqtzyKqh1PoWrb4yhfdhb5k7Yhe9Qq
YiuRe+cG5N29WbZ7ttBtztg15H6WIZvcT/HcI6jccA1V258k9/cYKjfdQOH0
fcgesYw83mJkk8cLD7oP2bPOo+rkp6g6/C7ypx8gn30/07dIGYZR+17FxDNf
Qwxdb6Xbfp9yma+jzg6il3uczHcxqy8v0sxdz55FD12fo7mdW86e384rZh9x
36M2L0LPnd9YftRr3Gq1vjpDR6zP85mT9+sHhLuEWib32L20jr1Se++b82Gd
rlcuZ2pYb7AhswPivByb70qNHucI5Xy32XNvxYzF+D7X8Izx1qxdzUy9dJX1
/SzOOfPzap19pcL7Sssca8o6tDzP27M6/CTWD0/r7mrsNWWpVm9UND1nfCOL
2TeweH0947o460/R8al2Pp6vQWfX2CuM18XrM1z0vMV5QcNbtRvtcOR+NIwP
iYz3E693jdmL9XYRtHykWH1f+O5HD/nR8F717w6GDhXMg/MOpg9lZnCdcbyA
mRff3XyIaLnu4LvKIZXvTLuT9zMQT77HeaMQN2AuUoevQuPBZ9F48nXU7r2F
hgvfRfO17xOOP4aC6XtQvPA0anY9jc4Xfo7uV36Jnjd+hc6nf4B+D32Ktsd/
gJaLHyFx2cPIXnEVxTMPIjx8ObJGr0buPduQM2ETwsOWIWf8BpQuPY/EpQ8j
Z/PT6HfpEwx47I/Q/th3MPDVX6DzuZ9g0Du/Rv+H/xBlKx9E4Yz9KJ5/HE0X
PkLTtR+i9vjXUX/wFlrPv4Oi+w4itnMJaja/hYZ1ryOQTvwVI89g6HxeK2jp
ezVmJGp7jc73iKnLM3g8mK/GS0T2W99Jzm1Br7tqe00sIJJP7BrHH+zC+r4z
PqpafLc8vXA8pOO8dX7yx27fZt2XjvWKZhLm6EfmvB9Nb5/fpdr9MK/fa7M1
OWe2qu0z5do9K3/POU/r8vgaOQPY+ntd5mMp6+TY/oBmhq4Q1xf77Zycr5Q0
u3RZOlYVgfN8nTrG+aR6lm9vYDV3Zi4+SLbWrNpklfMNAuPNWTh07k0yj9eL
s+xbFc7bMYtgGl/nTzO3XorZK3V3EfvjvWvudDPvHD6tEKOKpq5e4ruozf3w
nV7m2kCorYtGwzvyqHzfB9v9msRXoa/Ld2ye8T1P4HiBy76D7x7+hI7xUl8Z
ZzvnhvK+OHwBUb8PpTMvjdi3EU/PGL4GuaufQMf1LzDy4/+B0n1vI7n+TpSs
ewIlB76J6iPvEOZ+E63XvoWWCx+g/YnvoeHIyyhfdZH4A2+gYOpeFNy7C0XL
LqJo9Q1s+ORX6CW+QnjqQZQsfQC5d29DxqAFCI9YgcLZh1G89ByyZx7D8pe+
h5mv/DHS77sfpYtOI2/idlRvfxyVG6+jfMV5tF76CP2vfoYWww+4+T00X/wA
JTveRNX9P0B48AKkj1iPjtf/DiNe/VPkrX8KKbMfRGL1neR15RDLo7+7OOK7
2rH8XkHLK98/R0zfB+8lFmu+h2qNo1g/mOfyXc3pFfxXr8eMkvdevzGv+L06
y0LN0fudteO3tz7i/Dy1Ft9Dr7uufReB82ocVJy5w5mvqdv35ryG+WE3H8A+
FrTO/8bMu4HCdZp6fHbZ4jxfE9fwEYw6RnIsljA+lvXU0XV3rXk/7Yzl+vVy
JO6niay36/U8Oc947jwmxOnp9Zp6esvYunS0tl6M15vbIGF+iK8/Y1wWY/WU
8zbjg5zzUn98I1uXR5wP5MzJBx39c5oeOtd5d26z7mTWB13ZLubjvRgfmfPa
OL0X391m1Vs9SBEYHynfqNNM2ji9h273reEF7ioxdQff84YRbjMr8KvfXR7L
LY6gmxNnsZ2/Xi+dz32EofT2NKcerEVyzXgaFy+afRBFc08ie/o+3Pv+f8ek
b/4OqdPOoXjxBZStvoSqrY+iYu0VVG5+FI2n3ka/K99A/bHXiY4+jIJpe2ns
3uB8etcclG1/GsmzL+HVv/53bHjpWwj0rED+1H2oP/oGavc+j7pDr6Bi/XWk
jFqHvNnH8f4//SsWP/FtxC29ibKl9yO5YRJKFp5C2fJzKFl8GkVzjqHftc8J
7z9F7f5b5PhF1Ox4EpWbHqH+Q9b0M6g/+Q0s/BnQcugZ5JHnUzL3OPInbkVG
2zTyWzfqCDIQiKmAMd+Mfo+seIyok1Xeu3DVsy5isPw9dGO9Lp7PP0uHCbzX
5esdrP8SvNfl7iPF7iNcL61zb/G9J/L8nGjm5vG6PGtWLj/3ufTj9SWPL2l5
lfOCplf7mf1wPqxyvtPS8TTfT/sMzLiGrevFWIDSg6fM26O1q7QHa6C5n2Fz
nmt6MZ4Q1Mxw0a6Dq6nRc+W8oNvpvniZc51aNa3DN2PzboznnG+Q6uop14mF
jBn1Rlydct6cZRuy+K7OwNHU2/E+ecp4/hpbhdy82ywcNRcfaaatz/456zui
1N2psaxotHy2jvE+YvVKPY4zTj84ei1vnXcjsd2F87pYvVYvu3HXNKl2zsq5
DxMY78Z2lfH8/oeZJs2EUea9W/1jvUKPmcp7fzrfiMsHU9vNurlQDVKb7kEh
4WHN9sdQt/9ZlK28giqioRse/T4Kdn0dqYPXI2fYQtTsvYXSJWdRseFhwvib
qCa8rzv0EgpmHELO3dvR7+rnhNlXqf7OHrMGCeVjUTL/BMq2PImS+86h/wMf
oub4W6jZdws5d22lsyQTK8agfM0V1Bx5Hc3nvo7mPS8ie+pxFC87j4yehUio
vAPlhm+xhTzW4ZeJf/A6MoetJM/hEdTuew6V668Rxj+KUuJbVO94mmr+lOYp
yJxyHlVX/hh1D32TvB7j72+i/uCL9PrsUSuQUDjI5H2gkPyu+wnfT67z3TS6
Yvwz4T384vdRYreG127aPk/5/qq+KvfjLF/CxffwYr0vP5px3jFb5yuK4Vuz
8zw476fXzjErj5vTBwj5Wcs2kqmaPlPQUsIa8/w8S9f3zvSqydPV44usb2fH
BL5bsXvvOr5YwezLA9hzHmjuC5y3eG/Nxu2AY75+RhvkdXbsdXDV+L2z3r7K
Yrml5ePVeL1RZ29zXmZ8jZ2Xp7X1TWZuXtXyyZzpBucNjreafKfH+Prx6vwb
PeMt/c7i9WZfgdmTIM4D9GQ8j9M7Ztp6aXmPWL04u55/99xmQvrgvN0X/yXz
8Tqe5wqsV2OmUt7dg/FfNgevjZn7ZTyLz1v6fZgH220z2c3ZzrbWrDjNPLh8
ketD7Z4zKZfgohFpr9pQs/Y8UEqsnP7GE8tHIXv4UlRtvIrms++i8cQbKJp5
EIVT96Bu39OovfBtFDzwz0gcdxJZhOG1u55AxbqrKJiyi+r4mt3PE82+Hxm9
S5E7eQ/R+ER/r7qMsrXXUHfwFgpnHjL5f8cmejl72WVkTNyLvDu3In/aAeTd
uxdpRF8bsfvC2UeRN3EXcu/ZheSJB1FO7rtizWVkEY1v6HejHq/2wIvIm7KP
8r6E+ADh0evI9auJnn+Q8P0pVKy9iqJZB4m2f4Icu4DkoauQtuIbKL8Jou9f
I/f3IPLv3kb9gtZLH6Pp1FtE5x9FasOd5DzXj/I+ECgiVoc48huOpzp/KJz5
DyEmL/Ycin6YeJx/FurMIU9fU4nDuNaLKto+T3luOtbnKhyPVtdLs6siaHpr
roY+DhCry9t/qd563e10/Xdumt5D73tyvkuKmYYcep+zX7CIOl88pxt9zD0m
4z3y+vL6eS6Mz2R6nvs9lPPsOsb5WDVPz2vwrTy+XbMfFPjvm/OWVcuXuZZX
a+xUzluMb2aM5zX2NWztGdXqTS3O1p2jGj5ZN+euUc94Gre3a+1ss+cImea2
7pzb3Po2Od7iWOfIRctLGt5lnq2O8WqtnXU5Sra7ct6tZ46fRzR8l2qQBca7
aXdRN6naR3deFWPm+QLX8518l/rerNo6ln8viKDhxWOc7ZzvKtsL2DGrR1yZ
Byv2kIt+iKTr7WNGL7lxHjVy7imFI9A+YxuKZuxD4YJTaDr+Krpu/QzlKx9E
7h0bkDlwAfIn7SDs3oPC6btQsuZxVB79LsrnH0LehHUo3/gorX8rIX9bvvoh
wuQdSGmdjWSinY3cef2xN5HSbwbKiS9Qd+xtVGx7GqUryO2XXUTN/pdQsvgM
EqsnkL+ZjvTOeajc8jhqDr6Gql3PEubvQ0rLNCTV3YPwsOWoP/wKKrY8geJF
D5AteR7bn0XDya8Rrq9B9rgNaLn4MXImbCSPPR0p/WfT+r3KjY+geO4xVGy+
SR7rLPLHLUX1zluoOPwdFM8/SV7XbuJ7HED2iJUID16M3Alb0Hz/19D13E9Q
RfyIrOn70DTvIDpm7UMgpo72GBi/D5nXvc7vm9qn4Bkf4r6AwnvtbdX71viu
3CfQaXtx9lGkmnxf9TBRaHqR6ZSdnfZ5QDkvRKzP07E/4jr24mUxb69yXKzT
9+jRc6vtc6nD0/YyhVXOdynxV1v329q9R4jPd7H8LK8HlOv0Y1XOZ8pr61jG
8vP0dRrPUfQDhPk2VNdndLEYPu+/kznPNb1+vq6p77057+S9ts7O2nKrNftq
E9n6NXSGfa3VNyfyPUTXkK2z146nl0Utz2ruFMaHhPVoLB0v1NTL/fL9EJLi
HB6c18XqdWsZ+aq5E7S8jvHZXQrTBzp4b9fa+czHZ7vw3aED/MbpNYz3zIW6
6B5X3aTT7jLj41UT+a4yXmvsehbTt/heqDLeZS6s6Au4zorXHCf3b8ynCgSK
yXe6BWnjtmLii3+MG78F2h7+LvLXPoJKom8rVl+kfWzx5PbF804Q7r1L9PDj
hP0XUbn6PHKGzkZS7QQUzT6ChuNvEL5fphzOHLYCOUSXJzVOQekyoqeJls+d
tBvV+16mfXAFRJ+XrLiMgllHkTFkCXIn7qF+QO7Encgauwnlax9G6cL7kUgY
nTJ8LaqID1E07wzSuheiautjqNn3ItH5S8ht16Nk+SXkzzpGfYy6Y2+gcP5Z
GiuoP/gSeR6rkdY5FwUzjyKzdykKpu1D3ZFXCN+fIr7EHKTUjEbRxLWoXPcQ
KlZdIq/hddTtfx5hclvj+2LUCdbteYrGANKXP4INP/49bv4eKN/zIhKq77Li
+sZvzJw5MMTW+CrXxbl8bjOBpRl+bj5Br+N76KntLR9W9HXF3L3yO3FbT8dP
3auk68XcvRfzB5lcMuYYST6A/XeePXdunI/a3HS9S26/T/F7J+dDCueDFs8F
TS/5AAMZ33sY3zvlc7w058xeQ0+n6W22q/vt5nticV7Q/xLrmaanfOL9+HwG
rqzr5blu9tr2/jhf5cF5Nsc+qcbeGuvDGzl5Q9cbvE+ul3rmZM4Tjicxzhs1
8RbnbdaHJL7bs+5CVMfbjA8JcwGkuUBUw7ey2DxfO6CN5eP76bV8phvnPfgu
+oXG1k3La2L1cZzxAucj5uJV3mcrx6LivE7LK/rDb5w+Yh/8kAh8N83Bd871
XK7LBYaLur1AjN/bjLf1u8H4oabp1nPJ53Nih0VnjPHxxSPJ97GN5t0Tywnj
Zh1A2dKzaLr0Ebqe+RmaT32KsrWPEr38MuHeBZQvP4+arY+i4egbaHv8ezSX
bmj6zCGLEV8yEtmjVtOcfdP971GGpjTfi7T22cgauRrhkWsIb4+g5fI3UTT/
fuTcsxNFC+5H9d4XiGafhtQBswiT70fpqitUcxeQ27Ze+w4aTn0NpUseIPp9
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
1WU6vCbUs1pFj6TZLDffb0wF64uvzqhgffv5GstWq8+x2USuqfMQMaYc7fL2
0+N3kXT4O3gPqYF1mwmsDo7lx+l894nGS8dkmXw5zW9alvVKGdYb1ceY4HxD
4/UNYL2tXKzeBMdlffoKU6xvZC6elpXm2GtGf+t84CZthgbaDqZ8+OJrmfek
qz9g5+1ETQ6XhhV8XJHxPQCqNoPQaVQe2g/LhU+LfgLvbVqy77rhrJfvsSPl
fOHVN7H6ra+w+uHX8Gvdl82pMvDXa2vlDHrUy82jkWO8jH5309fLGa52Gs63
F/W3NfTVW0sZ72lcPyeeK2u85OoPxZzXxkkEzhvl20l99FJfvZyON8n4GNFv
ShqDj5P/rZriu6/M+cFSzxu5ejkDzicaMl7qexfH3A2ek2SG85JtGOXoa19f
8ndRjxJ7taauya8HrT50ux9d92T+cM8JWxBA2tIxciRc+xcgaOpmNF9yAi1W
nYF/ZhU8us6GOn0Vq6nz6rmQ9a7hz/18HbZy6Eo2T51rnY2STSf/EVu0l//8
8R8cP3MHc1cfQPDU7eDCSae3zYZ7nyVw6jIDKmIPzzx+eXRfCKeEOVDmHEPU
jk/Qru59KMbWwqNPMTx7FcCRdLEHaV+frANwGXsU6rI3wPWtRtWhaxb3o/LY
TXCefYnxw+DUeRrxfJrA+Q6ThOuOWXCKnsF8DHw9H9d2OgauO2dxuw8efgTb
rGfhufAe3MYeIHulBk7tJpJGXwiPHgXwIPskaM5RdNr9FUJXvwSPoWvhEjsN
PiPKETB7H9TTdsBzwDI4xsyG99AycE1GgOu2GHa9l2L4zEpsP3QFH33w9H/6
Ds5efwUcfd6qrE30XdM+pc4lTb+GzQLgZw6Gzd0JD9LxfD/ikJwdiFx3GeGz
d8J3Ui3s2o2DR8xUBJScg237bHBOneAQQLakmuxKdbxhLp72t6aSY7JcfE3k
vxf78A3i9qZYL/qtm9L2vvrX0fkSZOvuTHBerhavoZw30vRa9mnr6kzoe1PM
lOOzmP8m/emm/1fev2+K6yI7RdybV8J0ca2B/tzfRf+daDgvML4JXAO6YkzV
YSy7/xhVj39C5Qc/YMndRxhethsOtD+cdVPN59UYXS+K13sbc7742kMUXH0D
G78Bei+sZf57lpMn7l0rnRnfKM5LGO8mYjvT7GLOd9bE6DX19DK9cKwbEJPX
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
7xhJP9tOmjy8Tvre9eI+ONr+vt4xrK+glXNbRA2ZQ/bYRgxasgUd0xcyu4DF
PXw0eRIa/W4r0vC23l2MWS7HeHGuXWP8XEoJ46X5dqZ+m5Zi8jr/nrl4vKW6
OZkcejHj1WK2p0h89cJij2uXDOPFbNc/Rpz31875Fh7n/XXWntFQ9c1Hy9LT
cO2UBf/RpWh15ivUv/09jt5/H/6zjqP5poeIKDkL9x6VcB95CN79q6DoWwbv
3ktpLYYb6VbftFJi93m0WnsVkRUXWE4en38VkrMXoXMPIHTePrq9B0E5+xCx
7Axarn0eXK8yZFWeMsmRhsaeV519HVyfOniX3UTg7lfRfMubmHf8Dbz+1HJt
XGMukaPLwamGwXdsDZSZ2+AUNx+KiVvhkr4TgcX30ar+EYLWvgKfacfhGL8A
jp2mwDF6FtwGV0FFmj+i9k00X/cePLJOwXvSHngOLoNL8iKopu6BS8IcWEdN
gVOPJfja/IibRl0+/eF3rLv1CXoffxuqra+ByzlHn3sVBlRa7vVn6bLl7ANw
E3ehBX2XQXP2I3jefvqu99HajxC6H5Kzi+yXGjQrOY7IyqtoueYKQukxj8S5
8EzOg0/f5XT8lELRZyU8h2yH+7C9UI2oQ+TGV+G+8DLSaq7izmc/YOiN7xFc
9Txc245FCNmN3l0ns1iT4Wx6/YxlHe+ViYaaXo7z4j4SjOtazifqOW+x3sbC
OUVOa0hZbylO31jWy/TKM895Mac1vNfNxGvk0nJemcB47hPRE1t/BqbsfV6Y
40Zc53Vys55TEDdhCct79+swXKMZOXp+L9R88jvmn3+F9bGxdm1P30ecnvNs
xWjO14k6bc/7Z3j2eEX0ZjV1zXpMYa/PvntJfqOt+HOS47xC7lr7/kxz3krD
d+1iMXhiMx+r5+2PiVtPYdXrX8LBM5Lxn/WdNZpDY6Ie3kDHS1kv6lmvZbyX
ppctz3nPzvrettIYvFz9nKIL++w8w1Kw4OzLqP7oF9Q+/Y0t/jZft6BuO5h9
P/xnKzt7Thxvl43Da/huYL81MHdFyniD2Lyp36Ec5xtQH2+qNr5BvW5EjPeX
+N8Z6wWOa2Pxgr8+hS2m4bWMD9De1/r1RVpf588XGK/z97PX7AbOsQ1UAwrQ
ftM9uEaNg9+gAsSdfILYY++i+e434TH7MAKn7EXrmgdoUnASnt2KoRywCoqB
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
e0AWadjUPHAucXCMnQXVghMI3vIQAZsfwi+XtOrU/VDMOUcMqINy4la4J8yG
Q+sMOHeZCZcuM+DcaTKs/XuxOnRePxftMl/TPaX8GJsR59Z7GYtDew8m/Ta4
FsqRNfizAc1xz7/8AbjmxD6fdMYz5ykH4Em2CM80xnnipSdpe9XUvcSlbfCc
dQhc5m7ce/Sl5Y3TJW7OLnAJy6Dk4xozD7PeOY6x8+EUPw9OMXPh1mMpPDPp
c8g7A785h+m5i+AysAJffPezxW3/+tvvCCo6DY4Yr87eCcW4Tcwm0e43z31V
9g64Ze0G13K6MLe29QJk77rToH0fvIZ+10llcOZrBGLmka1TB677CkQOXW72
/y5//Cu49M3gggbAocUouMbMFL5furZvng4Fn385nvZr3F4o55xhfQT8S59H
0PZHCFxzB57p1bBpMozOXwlQpa+BRwLtu01LOIb2QtAUsg+GrYB3rzx4peTC
PXYm/DNrEJhdS4zPg//4CrTb8Dzij7+FyE23Mfn+zxhUvI2dm2x5fvP5pto6
Up2uT9azXi3S+SK/viHnBdbrfuOqbnrfvYGu1862NWY9vx3eHua1UvOUScTv
97Hhs9+x+Pa7jO8ltz+kxz7C4nsfY/Fd0SLOL33xKVtL7glr8d2PmB2w6MZ7
jPeFV98gNn6Cui//i7Hrj8HasS3joFhrSvPtDDS+kTYVzag10ePO2F8v0fTa
pZl/Z+UezWILueceYN0HP2hyzjg0Tc3CjKPXma7nYxUV737Lcu2GrtwlzKnl
tX+Hkaw+u8OoAnSfWYa19P85x24iPHasJj/RGYnTVrFYMeuJw/dkY74TGSb4
ilhvVtPLPK7lvLhuX3tbKaPnWUyduOreUeg1z+bLaXvXt9VreQ+B8ey+Qfyd
3ot9Sxaz6JdXhepP/kTbflOEPHzG+k7GfnqNnrdmWl+Td6/T7Fredxa+O8b7
zuz9clYRrM9AwvhClL39DXrnrmWvw8fc7TW9bG3Fc2l8tHwX59mJ+t8Y3JZo
+Ubl1JvQ8gY97C0x3kTejI7z5ubTiLS8bqZ7kl6/S2PyJhivzZ/XcV2tz6l3
ZIzvLqPle4g4zl/30LGef769ZjloHxM/HkDnG5tIBE3YiO43f0f7qmsIzdmD
zvteQeSKYwjOrmF1c02LDiOi8AD8x61FUNZGpp/4c21gdj3T95x7POmvVNgG
94fv8BXwGVCCsOJn4DdlO2nMKkSUXUDL6ivwzT0L7+J3oa74gjhUy57vzPeJ
iZ4OF7ILHFpPgFtKAf0f6ci4QkyqOWOWKSV1pxhHPQethku3QlZ/rhhdy3LO
+69q2FzaVx5/hQXlR5FYcgJBPMeJbVz8UnjNPAj1tD2M+azujbRy0IzdsJ58
CF6Z2/Hpt5ZZ/O0vf8CpL9ke/SsRsuBZBJHdoxy/EW49S+AxcCWrpw9a+By9
zj64DqkC1201jr/02PJO//0XUkqJ8RMPsHw/X75ub/o+eJKGD8w9Bh/iPte9
jG3Pe/oBtM+qx6TVz+Diuw3r+Vd+8lVwvavgxPcXID3Oz9BVjid2xxQieXKN
2f/dduEVcD1X0vPr4dAuC06dp8OZGO9EdpxDq7Fw6pgFVeFdKJY+gU/eiwjM
O46WtS9APWsv7X8FQhc9CzXZi959i+CZmkvHVgJsQwbCLqQ/cbyK9dDxG7kK
Qdmb4D92HdmaW9Bs6XGEz9uNsDk7EDazHp223kRL+v7brLyAnuc/g1v7saxf
J/8b0bM+RaTpU0RaX3RbLWZ9Mhx1PaJFeTcqkZ73lfrv9Y/pdXw3TR/WpkjI
WoZ1H/6ANQ+/ROGVN0i/PhIx/SPGdWEJt5fe/wTlD79HQOx4dJ1egdpP/iv8
7e5TZhPw9sGi6++giFjP6+G6L//EnFMvwju8u9CzxFsbi5dy3sQS6SpZzsv4
7u3kGO9jyHlB0zeDA/1P2VtfIO/yW3BTxUCYW+MLVdRQtOg9Dc16ThVy9djj
XugwdB42/wBM2HoaQl94BbwjemES3V92/zGGrtiJkI5pyD19H5H9Zgn2jaqr
aS1vjvNydkGD+hvEMu1qpOfZbFie9Xw/eW3dejTxtxPT7QLbxX3vtNwXzZsj
Zls5t2E6O7LXJKbru4zJZ3mJfH8zYdZsJ6bROee2Gj+HCvp5cmrhtkNr6GbF
e3cW2WgxwnPsW2DOiVtY8+hHNO06luX+8bNL2XszmCevnT0XK/o8YjXavYv5
fJCGLLlce6WE8eb89dI+OLIxNKEnpmw8XrZOXtKbXs5Xb8JPb8R5f7GW1/TE
0bDaIUDvc9cxW8f1Hga3tf8jcF5zX/d8Op/5d4WNTy+0XHoJLSuuIbLyMmn5
B2hbeQHqkYtJu+eQZpoO9Zhy4v9WqEaUImhyHcLm7UfY3D1oQedS//HVcGw1
Bm4JM+EePw1BpGGblJ6Fc4eJcIocDVvSdb6jqxA0k+yFsvNoUn4NYSuuszxr
/rxv22Qk/f9o0n7pxPh84tRRuCTS+V2djj6LzfeGqd93ifm5PUdWwylhgVA3
lpALnzEbwI3YRXZ+4+axf/ndr9h74wkGLTkOx+y94FKI0cM2wDv/KnH/MunP
CwhZ+Ay4cbvQtPRSg2raL9I5nBtYB7dJZDMQx/xzDiN81QsIKTnHNLcyYxPU
ubTNnlUoeqZhMYGR2+6AG7UdQXmn4DGZNHH+bagWniG2LwM3fAu4tFp0mHMA
lWfew/uf/9Coz+DYq5+BG7QRdnyuYJIQ13dJLoQycyu4iCnIKNlr9v9LNp+j
c0w/+E7YBNXEzbCPzIBTm3GwbzYKds1GwyVhLoILTiGs9Cpa1N1BWP4RqCdu
Ir0/A3ZNhsAhYjiUw1aiefVNqMZUwLXLZLh0zoZ7Yg6aFB5FRNERhC84iJDZ
O9hxGTR5PbF+M7xS58E9bgZ8euUiYuEOdNxyB+033UDUxvsIm70XrOe5IkGo
IdWwXJufasR69f+j7i3AolrX9/8looBBd6eKoohii6Ko2N2JBSiIqKCISCmg
qKCCioiBAQZ2d3d3t3u7dfd2d93/533XWjNrhgE9Z5/zPf/fXNd7DQNTrFnz
fp77ybZaS+wVKfaXlmL09ko9r9D0pXS9+prF/CtyX709Wo+fixW0T6defk46
/CHneLIG3xWcv/iK35594wuk36LzqUoj1OwcjWVfQvqbeJ9kpv8Z7889k7T9
XZ67N/fBV3BuPID7D/i+96mcV/rvy9LylpqavZLWbQ19r/ydtZgTz+bOhdP3
eMUHYOCCYljW6iLFfK34Yn1tGg2KQ+KZB1j+LdA+ej73z1So1kB8Dj1vzq5q
9Hm0j1mMnLe/Y8GT71DVoQ23AwR9H0X/4bL4oMvv+6mcl9ku5/mJ9fu68/Ck
ujrOcT/OfD1T1ne2qbSaiHaAcQOp552vVi8cMb+uQnU/ruu9AoZg8ZtfUa/7
eH6b2QxMu4vHzhPewWHoOjMPI1fsxtg1B3g/Ir++tLca1ROPjWFdsHo53mvA
rAnnuXWtjmRLfo04OncMeC2/taJXrXp2vL52Hr3KR6/Vy1Zn7t2/ouO1WV+W
v/5TfPY6GM96LViXwXmdMXmFf09nTF5HPF6udbfTxfcgdT2dxGc5B0/pdzeQ
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
HwEj35G0RvOeZ+bdU+GVeQoOkWthEhgLPaceELzoPHPtA9OgBLgl7YNr4i6+
55uTprMgHWgdsgx2U0qgN3wl9l0te5YNu/gMzeKz01lvOeMuabAatQp2EzbD
csQKGDYmznuNw/D5e/6zUNS67LjyCofufI6/P6GWb8+997z3jFAvjtfYf8rl
zptvkXPkwT98l+Vf1h64xmfTV22fDFvWl5COI1usDpDVHBj1WQShYTRuPS27
N8HXH36Ge/xOGNLj2Mxdi/5kMwxcAMfYLXBPOwS7sStR2XsEhBoDUMG9L4zq
hhDDs+g82w3XmbvpnBnF6+yN/Mbwc6iKL51LxHwDjwG8xs6dzbDtniQuOgct
OiWSfk8mOyQX3dfcQO9tL2EXW4I6Cw6jzuwSuIQtRI2ZxaiTdZTn8NWYuZ00
kNibRt1PStFT0kEdu6+kEbdvo7qt6a8L1Oqdo63pRV3AZqPq04rcfIr3vok/
do9Y/JLH3OXaeBXrL4isX/LF3+gQu5TbBzEHbmNM4TEMyNrK7ydU9oNNw8HI
uPMVZl17y3V++MYzCJ6ez9meSuwX8/ClWL2Ul8dq9lj/naZ8pouDKr6qnVuv
yfXSvy/XV2+lg/Xa10rOs7xE0uvmdXoi8ewj2DcaxHPr1Dluihi4yjcu/Z73
t3VE3V5TeB2dmUdHeq46Yi6EFHvnPXCrNuTxZjOvzhi6cDNiD15DaOFBNOgz
Cay3C/Ppq3ok2rRWx9r5a7YszRgddVzscxaqivPmDKxL63meU19dXLyuzsRP
yrfz02S7lHuvez6N3PtO/TOzV+wa9MXa34Da3SZxfpt7dSR9/hr534H3t0k6
95jP/GE1Cawnfe7b3+HXN4bf14C4zHoONRoyg9s9Yl18Y3UevTbfNXz0/wLn
VXmKn8r5j+RA6qqjK9W/XhmP19TxlbQZb6vU8K118P0jPetln70cS5dr3xVz
aDTmz8l9cFTXCi0v18jJ2lzhmzdUandnNecry9fO0u/Z41178Hk1HqxmLnE7
aqTsQsNVF1A7bSt8Fx+C4/D58ErYAjvaPw2CZnJfvXO4WD9vSfrZosssWsmo
MfcIrGi/1bNsT4wfS/sy259D6OdRqOI3GobeQ2jPDqd9fC9cppbAqP5oVGlA
96k3ClWbRME+sghVmk2EWddEeJLWsx2znLT4bFiPWk57dz6vR1t9qvzer+3G
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
h4xbnyGJbFzmr2d5YJ3i8+ESMIbnhWU9+wk1Ok5AcFwetwFY3niDwTNRq0s0
vX4wanaKglX9AXBqMRLtY5dyLc9i9c1Gp0MwaIg2Exdyvz6zCRjv3dqGoYJ5
AO+fl3z5NXI++wPD8tjslyoIis7me/wc0oBeQWM5s0rHwrVjqeqYvKZfvwzO
l+u7Vy+hSkMY0TEfvZps8zo9IVSuD416dGv1ns79BLyOzh7+QxN4/x/GIx53
ILuK18TJ+o3NIOQx2haaDChzvomyBqsV/yxZLQLT7JVI63ZLWM778Sacfgir
mt15rhrrvcNyA0RffWmmlp5X15j3s9NT6nJT7SX3vGPMbyzxXzFD3kxhF7BZ
NRVrivnyC4q5bcFn+1T2xIRt5znr1e9Nre2ZrZlx+y3Zf9/C1ncAf3zbiAws
++pvjFl/DO2i58G6dhfu12C+Fhavr8jy7y3L4Lq2li8z3qPrvNLBeEsdDFf6
8jVul894jdw7K7kntTb3dfSv17XkHra6tDxjsorfEpcdOih0u3oWjerasZ26
Zl7Rz07FeMcOKsZravkOWlo+WPTXs9dwCYZ5iyhYBMbCoh1xmPbExoVX4Dxu
GTxiClBnzi6el8fm0rlGLodN9yTaP1fSfloAx6giNNp4H7UXnoIl630y+yyM
c57xWSnVIjegVvhydBw1HwnL9mHr8dt4+vn/Jm+dVXtZ5z2G38rHaLXyEczj
T8Fm4nboR25HcF75uXwbH3wLYfY12GdchsOsU7CK3AqXpINwSz8L19nn4JRw
EA6Tt5GNswtOaVdgO+MY9ELWQhi4FsZT9qL72pvYcu9LfPfrf4eFR59+g8jd
j0hjs177KyEMXw+LmefgmHQGjmSLOE7dBZeUk3BhfvpZx2EfuxN2cQd4DMJh
3jUIKVcwec/Lcl9jOulhYdh6mEfvhdv8m+i+8SlqFdDnPOcWzn31y3/l//rY
hdXw7T93H+nEvn7TVqLhzBIYDsmFMHEPTOgcNIzYCJvYzahfeBM+ued5bySH
sFVwGpkDm96z4DGN2D42B54xzJbdDOfwRaiVvAOB+5+jZtwmGPtHwcirB/Rt
Wqr7RmvE69W9pkvV2jmI2l7siSHpeLmHrpR/z+eyGfih//wipN98jenH72Hu
vW9h33goTOv0gWnt3tzuZzn0Ri4d4RoYiu6phVxPsvp4L2I/0/GWtB8zfe7Y
PIRrezavrmbniajVNZrbDPUHzOD97s18+vPaOyPaB0xq9sSs629hVqc3Bi3a
geHL93PONwlJQc7rnzD37js+E07F+VI5UjqWVWldrsH4UvVzLcrnvOAJ3z4x
GEOcFyr6iHlvqphuab8t7/1WyQfRuy7Bb1ACP06VbCWbwEbS5zwnn7Fe8t/z
/HzteEE58V8b9apsJ9fe28OAXmPwwk2YSK8dUXJW7IOg0vGlY+Cl9Lw2xxn3
VTl1/nxurLo+XjFfVsV5f85+1g9XzCcwg6FFI/ROyUfcqac8J8Ot9RjObSvv
zmTjvSX77hee3yjH5Jkvf/6jrznTG/H8g0rcP8LiDr3S16JNWBKPVSRfeIJJ
uy7yXE07v378c+K5Cnre/L2r8+i1dLyFDh+9bBuWdU7pYrw2xzU4rx3n17TR
xDwKJecDOL9VM+DYvBhpJpW8NGfOiMtA9d2WZ8K30+S7amZsew2tbsi5HKye
G+fUTpF3J9fHtSsVl1f3t2F/V/vseXxexfbg0r56tmjv0LdtBSP3HrDpkART
0touk7eg+YFXqDFrP+mcQnhM2QDv9J2w7p0ChxDaE1kvkuB4mHdNQrU+81At
bjdxZQWEkHxYhBeiycwtGJ27B3nnX+D6Fz/il9/++J8wQNdlxeX3pMuvocX6
x8Tss1zb6o3cgJYZ5c+bKbn1BYSY/XBecAkuc8/AYuxGzk3nxOOwDt0AqxHL
YRFSCNPwvTCfcRvWE/fDPnQV7MYVwXLCNuhNJq00ZR+8Eg8isvg69tMeUF79
2adcLj39Cgk7bsM//QgMiNlCxE5UG70B9uHrYBe2DpbTr8J82hWYjdrEZ8Za
jVoN26gdZJechf3UfbCO2ga37MtwyTpH/9tBxOwsvw9B1LpL3F/hkHIcNXJv
omsJMT7xGpqs/N/HKOQLqwu8+83vWH/5OcaTXdkqZQdcpm9DhZDlEMKLoD9h
Iyp3SoFJu2lwDlsO95gimNO57D55FWqn7YLzGPa7TWi44RYabrwH047ZMPYb
TXxpxGNeujivXXOnyXnl/IrWkpYvzfm+mRs456cdvoVFr35D64gFog/YrAXf
L5jWNifuG7l2hFeHCBiT7SGYtuDx+Oahc/jcGnZfxnnf/vG8vq5u76mw8R8M
oXpTrvOZvmdantkiQiU/rv/Dik/zHKv69Ji20YvB+pvX6jKR90XJvPceNdqH
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
+S8w+NAXSLn8PXY8+hk3vv4dX/7y6T0K5p36ks7DYrgn7ya+0/Ml7YJ//mXe
99F20mp4ky3lM3s3fZd7wnFoFtltJ+i704nXC6ly71Wcb6vIzWujytFRzaqV
OS/NsFfX6bbhsU192icit55B2vXXtOddxfTj93lfWjaLptmodEzefxOzr3/B
Z9CxmXVz7nzF++ewmTes513ghGwEjJ/POc9m1DH/PON8SMEhnovn1SESi978
zufPs+dg/fUyH/3AZ9+xmaVy/XTuZ7+gZehsMV9do3apHP+9zji9Mjav/llD
06t4r/k7xgAW1+V182yWjjxTThHDZb9j77FH2jokX3zK88H0qjfSZLpVgPRY
Jetb8bw9mf8a/VCUPVPYns9ZL+p6laa30cF5fR/YNOhHn8tjzmRV3zs6nlmP
v8fYradVjK/RZSCWfl86D4/F1Nlnx/z/bs0GYUTeDs4Clp/QdHAc/X81Ic6V
9eF9acR8+8aKPnkS12V2l+J8Y1HLM76z40LPIfrzxVnxjO/65s1Ezks97kR7
oKUm37W4rrE4z5upbSxlbbwqb761dF7R51zdX8oBcOT5nrWCx9HnvpX3HWCx
jtEr9yEoOgu2vn2lOgA30Ubg9qek32XO6+K9FuMrySxX5dC3kmbLKHpR889d
PUtOzXh1/iz32UszZPT4eViL96mo1zsGUdvP8fgX60HB7PbUS8/FfI3Tom+H
2a4JUlyHza1i8RfGf/bzkNxt8O40AYJJM97fivnujbi+76DoYy/G5NWcD1Zz
3kWb8/LqACO3HvT+e8B10lq0ZezYTXv/xCJ4k77xzTrCa+d8Fp9CjbgieNA+
L4w7jPAd9z5pH33/25/ovf8LGOc9h/2GF9Bf+BJGcx7DctpJuGeQBl10Gdbh
m2DcJZNrY4cJm2BLms4hsogzwHp4HkyCU1HZJxzVWsdz7edOGtAl6QA8Mi/D
M+s2sX0XHGJ2wJ71WY/aApuEk6i35D6qz3+MSQc+rXdu4KLTOPS47Ps+/e4P
mI3ZiKpDVsJl1hlYRB6E06yz9P4vwn7idtLLeVzLWxNHbUathd3YYnr/W+h6
C1yid6E+6ezOq2+gX8FVhG2+g6l7H2Ms8X7AmhvoUngLzqknceZp2fV1P/zy
B398m/xrGL7uJiZuv48pux5i2Jrr6FZwDW1WkK5POQa70BJam2EftpnsoQ2w
4TbHCnpvS2E9ei1cEo/AM4c4O/kobKYchtO0fbAcvQHCgHXYcKzsz5TlLviQ
/r715uN1k3tf/Q7TrEdwmXsD1lP2wpY+S4dJ9L4mb4dz0gnUXPoEbhln4JYs
5lVYDloMA98IGDaYAPPe8+l9r5E+/0LYj9sAx+htMOmcAfMBeXCm919j8VU4
xp+E/axrqDbvKSxWv4TLhlewynuBWltf4/y7su015WXtldfE+F2wi16PWglk
w+ScQu2MfWQvHYNV5Bo0XnkVA45+jrqLTsKiHel400C4jiuAW1SBmMvNuK3y
3bdT5+Vo6HppLr2ddmxe7rXRBoZ0zWpl2T7vNyge2c++5fV1rNc9i72nXPmM
63jGY6bxWS/6mawfPXGaxenTbr7jOXutxi+QfPWWfG5N7/Qivi9OIfvNsl4/
1OwchaXvgaSLr/hzMF3P7AjV/kNMSrv+htdcm7I8ez1vTc6XF6cvpeM12a6h
5UtxXtTxfLH8O5PGPE7LtHHz0amce3yPVtgPjLtCpbowsg/CvIdfw7urWD8m
5t7pyL/W+F0rMUYvz52x1tTqpVkfpNL1sl2gkXfPc/BqwS1wFD9+rLZMqeUX
fwHUGziWM97Q2h6Jt0jX3XlXivMmjq3QM7WAGHAX0TsvoFNMNhzq9RD96Cye
blhPzKszV+p2ifOm5XCesdyskchxxnh2/OV4PWe9zPmmas7LS9blFkq2NyvN
dg3Oy0s+9hLnua9GZr7M6ADIOfUV6P2Lto4zj4E4Nh6E5iHJPHc/knRx7IFr
GFmwFw36T4MBP+Zu4v2rN4YqJ7NULoXEeelzKtXD3k5ituzDp/NCngermjdr
r+xZra6ZMXTrKPVErI2mISmYvPsyn2XA5hWx2c58fsDJ+6rvFrtmcQrRhrnD
5zLFHbmFaYdu0Ll+jds16Tff0Pf6OcYVHSO7fDz3Z7B5Dkb0WiqfvbPMecmP
L3PeRc13Qxcl4zuSJqF9ybkrTPzHwzNxB5rnn0OPrXfhOK0EtiOyaM87jLpL
zsBj6kZ4xBYT64vhMX09hOjtGL319iftp28//IGpF9+h257XaL39HWoXvoJd
yjW4pp1DDeKk+/wLqLviBmrMPQVbYj7TcmZd02EclAjTLmmk73Jp719JzMqH
5YBFnP3WowpQO/c66uY/gFV4Mffds1m2bjP3wW3qNlhO2Itqs29BGHscS458
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
nS7nrdRMl/Fe9TspX1ut61Wsp+eqqXIrxqUfRPKLH6S4rDi+ZGvNyC/W+O0n
bD6E1Ne/I/Wtnr63xvK8Om3/ejXTq1bksy/DedVz9NlF/lY13Xw7U22uneZe
van0vJRv307G+Q/F5XV89mXiN9L8AKm3oQdf59zTsMw1o2M/Wso4Xq6XkY6t
pql7kGwDSed78jUk/q7Z6JWs80VMnHP4Nh5F26mRMHHvx5pcsg+82R8u1cHI
uG7TWeuLU8fZuP7VBf5jgpHx7leu+xe+sLDLT5H8/GekvPwNSWTXrfv4eyQ8
+gbxD75C3N3PEHv7LaJvvkHElef0t58g9OLHCGE//kMpRn9axvljxPkjgvOl
PJ9g3v6LmLP3POYduETX00N49VtA15kf++LVOfea3DuVv76Mnldtoke2/aQk
NKU10HW5mEt3FJ4he4jxi0nLxMBm/Dpa+1LgHV4A37Ri4nI+XJblwWXFfnhF
naK18RKab74Js/XErYKneP975WqaFp58BcWKs3CJuwLnkNNwDjpO2u0cXEJO
IWDXPey/8Azjcm5yLzfHVYXEQhFz3sE+YNF3VcTma7VYQmyPJC1IHJmcAxvS
qSb9E0jbJzF/3ei17pFn4RoumHMBVRcUom966T/imPhUDRfmQdE3levnzIZn
SLwkjpmNzCL2bySNnwL7eXnEOZGTl0v7XsS95+yWHUfrLY/RPOcxGmbdgkfM
RXTb8Qjd9jyFR8pN2BLjq4/fgwuPKu7XK/rkeJNWNlpwHP4b7qPPvmfwT7mG
BsnX0HDDXbTf+RxNM+5AOfcAnFeTzRR4HFaTt8Ml9DTxcxtMhqaTht4k47y0
3yIXv96QTNQn2+rO15WLb+veUoueQTHrKFzoGLuTfeUefopsq+N0nLbAqHc8
3ZOOX1xA5yWe+/TU7Uj2Gml30dtInEubObs5v96ezrE4303XXsC644+RduwR
2iaXwjXkBBxWkM1G++26phQ+GTdRk9jfNOU2vq1EjwRxW3DpLWqQTdU4k2yi
hPNwCzkC5yV76f4QXIP38yxa1yU7YTclA1ZDI2HRZxWshkTDN+UM3Fftg2fo
QfbdGzaZTPa0yGvpjRplOF++X46G8/Ke12rdb9NF6o1R3Y/rx6JuvYJz20nM
WuGXFnMqhK9RrI9ibRI9cVNe/sA5XkILiLVLYvUTZnjI5edIevETxqQWoEr9
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
s+LQZPRK5r6Yy8jxZjo+0nmT1clr4ki63O9YnvNlfPby81IB49Wcl8+w0fSz
7Mb2mWmjoVw7L8XntTZpwpPvMDppK/vel52+y7Nq1j79Ef5jZ6LZxHkQ2cO+
A8egpoUN9tDjRn1H0Pu6IP7pz1hJtqvIZVly6g5azl4l+fFr10F990ZoNnUZ
fb/+hnOb7rBo1AorLz7H7F1nEbD9pDY+v/c8epCuUJiJ/KDuKs73Ksd5cbxq
uQxAo4RTaLKxhPt6Nsu5Apsxa+E0fys8Io7AfGAYbCYmw2Z8Mq2jxPX522E5
KArKEWt4jp1pz9VokHgezXbcJS20DtbjaD2dugm2k9fDdtIm2M+mdXPxHvp5
E/cbdYs4BeuJtL4uOQTF4BxMJBuhsreGc+iaWlQMRdp9KOacRovgU0jYXVrp
mu9/ejv18TeYlHAWZ8iW+2/cfv79T2wr+hjdlhfg3Af65Hz1/S/oG3MKUbuu
49XXlZsB/J/ebj18g2W5dxBY+OK/8v6a2x+/Y2/RR+gUfRF14q6j6oZPoBh/
AIpGwbj+5G2l3kLkQCgCClBX9BqavxfeiRfhRLal7Yyt7E+yoevPdspG2jbA
lq5Ji0Gk1YnjLfd/TM+th3nv1aTj43lWjXJkApyX72XW205bz3Eqm4kpdG0X
wT5gA1yXbEOLXTe5JqXl7vuwGRnLudSiLr3pmCCMSd0Hj16zOQ4r/L/Cj889
cjg3TxaLV3G+TB2dPs6r9b3cl6+bt1dO28s4L3S8VWdVDpK6HqA72/3a16ny
9VS5Z/r6hWpqmmjdleL0DvAfvpT76Ip+5cGyNS/4gyx/pPn9apFzV/IJ59yV
y8+7+GH2i7i26FOy8Rtg3sFSVK3jz7pQ21ulAj3P8fdOstw6bzQZtgxLj99E
HNkqU7KPw7XDZFXdnJt0Dvn4qHreybZyvNDHDd1NbVep+xMYSn1Xy/vtW6l8
961V+XbtVXV0rfRsrSXWq+PyPPdPJ0Zfzlevh+0ynz1zXjN3TjtvSD13rhrX
DlqxfSVsrnHpB9ifL2oj64n8CeNWFWp4Xd6L9xD9ZltNCuP3EDVrPZYSt0TP
XDr+bHdadZLZnno4r+xYxm+vzi3Rn3f3Ac6r61lUc6cMNPmyxHnTdlyDPo/n
DX9W5noUM4cHhiWTHejA/e8SHn6FiNKnSPjkPRJf/oqYG28QRptda2FDu6Cu
rTNm7DmLmDuf8exJMXNe6PrJOUeY8wF7irDk9AOO+4k8fIfmHaFs0gErL73E
rF1nmPNTVZyfv/8i98NR1KNr1b6nXs6Lx1KOTjf4RBag+dYbaJxVjJb77sJp
zgaY9lgJv5xbsAugtXLaRuJ3EvvtHYjzdrO2wKJ/BMczrWm9bJBaAr/1V2E+
eA1sJmfRth42U+h107fSeroJNjO3wSPqJNxWHYHZwATYTM+Ba9QZ2K+gz9Yu
Dss3navUuv7RVz+j6dYnCCTdfvn5N/8DyFT+9uU3P8JsxRkoRuRCMXoHGs7O
xeKsc7jwpGLd/T+5/fFnxbr8t/+SZr//4itE77iMjiFHUXdGPhTT6LxMKsCZ
D9Ty/2/ennzxIzIevUfDqPNYm3e9Uq85fucNFH3TYb6abMewE7AYmgRr4rr3
miLOC7WdmUPXXjbH5/l6pM16fDpsJqTDlzS9c+B+ei4TlgMiyWZNIO2fBzvi
u3mvVbCbmQ3lmCT4JBVzvZ1Jl6XwSzvLdrCYZyM4b9lvFarWbYN2M6MxKCIb
xp79OY5Xg3vYd9PE4tWc125le+PWtNXqfQNdzstr9eS+e711d3LOy7fOqrmp
nZnxNWQ+fK1fU9KdZeqQ5ZwXNVbsv3aGmfcA7mUm4uVldbz+TXA5lHge9+Ar
pL7+AylkwiW8/B1rSM/EP/8ViW/+Qsqnf/FMz9hbn2L1Be28nYr0vjrHL+vL
PziPXdhbVYmbkq2in+9CZ3L+nMIdfoMWc56fWLNHxu+GqUc/6XdVfKTehBzv
0LKCtby1mvO6fnvtVkOH7QZqrqv1pLW216p60x+fb6tifDtZ3Vxrna2NxHi5
n16t583lP+v663X4blHWZ1+G8zLGy/siCSYLeym09BNM3VzIel70vDP26FtW
z8tnBOr2I+aaTTf2nTQlPS/eT1xTCw9dgXvHKXysRZ2fvC+tiN1r6kVsO3Nv
Bba1jVtLdp5Sxnm9OfYqe0uvTaadS1fTVv29lTaR4ybyMsaSTZP0/Lsy12LK
q9/RKzCWGT3nyFUElT7nmXShNz9FJHE/4u4XSP8cSP0WmJ5/ETFPfsTW3+g7
8MmPWPf8F6x7+hMyaJmdc+ASxm85irQ3fyPhwdeIvvkW6579CseWXWHdrCNW
lbzScj6HOL/5KOblX4Dv0GVQ1G6h9dmrOe8o4zx9hqpm7eC5ai9a7LwL/w2X
0HLPXbgt3Q7zoWvgGJQL/+wnaHP4R45fmhPnrYbGSKyfuQX2c3LguGAnXAPz
4ET3dgG0Po5PI71OrJ9Kayzx3HJ4IpyDDqLR+huwHJEEo7bLaU1eB8flB2E3
YztMJ23muTAZxU//yzT5Z7dOKaXEvP1cu2azvBBVphMHu6RAMW4Humy+g5SS
N3jwvOLZM/9/vb37/lfsvPMFhmdfg8HILVAMovMwJQ8W8wtgO2sf6i4shNGM
A/jsH9TX/7dvtz//EVVGbEC1oRlwCzrMdqNJlxCYdA+Hy8pD8EkrhdW4DJ6T
YEOct560njfL4QlwXLgLnhHH2S9lOyObruPNcKDnbKdmci2Jcdfl8I48g47F
gHv0KVhNyaRrfw38sy6iCX0/xDzHlrvuwrjzItR16o+mY4OlPKt6LaRcO/tu
Gp6X5XtFnNfW2ak5b6DqnWsg57ytTgxfH+ttZJyX895KNaeFffba2rwamvfo
op/z6lnrtG6K+rCqdZtg0dHrXOsservp43qwzMcuZnKnvfmTeT7v6DUMjF2P
VgFL4TNgNJy79IVHr6FoNGwSOiyOwKj1+Vhy4WOs+/RvJD/7SZrNXawv3v9I
lY//iLW/6K3SieemOEizNzWcl3IPpNxue+6z12biao7zx9x7hwGrNqC2+Fzi
d6LvnrXUD0diQdcyfl4152tq9Lw85qtfy2ty9eT1W9aSLVDDprOmxrG8374d
M17ktnP/G1M519to+W6upxZes+nhvD49b9m2bB4eMb66Jjavh/OqrYqYQ1ej
EXHmEp2Hx8za5uOCYdN8NM9F0ztnVqf+UarX9CAtvBnWLcZxHp/IeRT9Ezb/
BHSel6DqWeDJPXG9+85HbRErF/EU8f/rN2cbQPR0Fn33OFdDnUP6oTy8MraX
+vzI+k3ayjgvq6UX9ZOd56/jOVByO1TU1S0nW9bIzQeKajXJzjGnfTPjvLwa
FjaoaW4NqwZN4Nt/JNpPXYBGvYfAtkk7+NF3oMuC1ei+LBodZwei59IojE7a
hj4r12JgRDqGr92CWXmXUNfKHnZte2H11U95Xl3A9lPMeeG7F49tWk3gHjkS
33uVqZ/XPKbjVsW4DdwW56Bl7gM0ziyG/8ZL8AjZD4e522A2IJw0Thaa57+C
Nekb837hrOltxqfCK+kSsXw93Fbm088pMO60HC4r8nktVU7MID1PzB+XSZpp
A7wTzsGJ1l/z4Umo3YneY5boc7ob5gPiYNxlNWr2iYOiYzTyrv5/w/qff6+c
Ll6UfQWKobvhFnMRJhN2wXrBMTTb9ASNMu7CKfYSaswpgGLiXpgsOYoeoUeR
uPc6Hr3+v8vt/3e3z778AVtOPsDY9ZfhGFYExdhdUMwugD19lubbnsEr5gpM
puyDcvZ+eNFzip7ZaLHqZKXe+6+//3dr8iu6vfjye9TtSfZzy2CY9ggnm5JY
Pn8P6g/P4F6JNjNy4Jl4Ea4rD7JdaTNlMzPeiuxPmylZXFNn0jUIbmSb2hLD
3WLOkLbPh3nfUFgNo+ux01J4xxXBP+cBP7aZmsW9I8QMG//1F5jzzXKuw7T9
XFoXenPtahVah2qpam0NVD1yNLF5Fe9rqTmvtgNsZXpfzXnV38tn32lYr87V
1/jzK8jHK9MjV8v5mirG11DV4Iuc/Np2Iq9Y1WNHo+lljFdtUh84R/SnNVn0
cZXy7fT76IV+F4xOe/MH4kirjN+4H25dSC/XrKXpA1LRVtPSDt5DJmHy7jNc
Uyz6yKwsuq8nHvBIo+vFjB7hP2YGVPWWPoPge91mzPAapBN7Lk3hPGlRyy96
stW16wKpx24TWb8AdZ11R9Ux7Qy5z15vDtcHOF/zQ5znTcrpK8d5wXhRr27a
UtOTntluXpbzcvaX73lTCc5b6HBe1M1ZSXmJGp+9jt9e8t23V8VvaqMV2U2i
l6t4jXOnadxjXeRpauog9PnvOaezI9csmjcaikmbjvG56DQ3nmv0RI9gwdIm
o4L4vVpPDEXg2fvY8PVfcOks1VpU4zkI1twHeSPZeXPyLsCt81RUqd0Yol/T
f5Rnr9byGs6r7G47qa5OML6uUy+eJenQcTrXlIj6OrW9KezG2PtfIKjkGUYm
bcWQqDT0DY5Hl/mr0HrCbPReEgbXrv0113iVuvXh04e+D7UNtde+oQnqOHvT
PdkIRpZ07ZqSvWREdkMtOvY2GJmehxUn72o5v+U45uYVY0TCbu7fI/Lw1Dqe
79VaXuPDl/pyOs8mO3vfR5xj5J91nta5k1w7bNozGGa9V8E9RvQAPQWTbiuh
HJsCpyW5sBoeC4d529Ag5QLqNJwEw1YL4B56hNbddCgnpMN6wgZeZ90jC2E3
eyts5xMnFx2GyYyDsI0qgUXAHliMSuH+p6akwxQN5kHhOhsXbnzyX2PE1iuf
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
fYwh2+6hW2I5PEnvtt9QRbwgzUy37ddVwD7zJlx2Pcf4I88wcN9jGBLPrVaV
wjmpDParL8B2ZQmslx6FzfJjsA4t5px3Jr3tlVaBznnVaBZfgbWX6tfD/Z8u
pWQX665jMYbr8KDt4RR1Fjb0/2yIfzbB9L+XspqHc3AkhjsmXIRhaCnaZ1Zj
6onn6LnnGWzyHsFu/XU4kA1jv4b+JrkCbvRdPddcRr+MKozZ8wgTd9XQeohx
+Q8xfNcjtAu9CMvwy/jPrx/OK3j7859otuIMWi6nfRNZAotw0vZR52EYdxm2
68rJtrgE2+jT0F54CE3mHsCRW2/q9b23VDJdvwPNJ+2A8aRNaOEbRozfTTbY
brSbkM3jRcYztsEu7hTazdqJliPyoD/7KKzjLvB8+1Y9VsBiyS607r0CLbsu
pm1Twvs8G45LhTMd487pV5F65QX2336LoVuuocuuarhmnEfXo09gPiWVzq2k
5+1Hoqm5TFOby84JFuqaXo3zFjIdbyH56+WcDxQ1faCaP5/7Di1U2p6fg6R+
POZibrCYP6/UjtLMevk8HGVfvX48917oD99bYLyo5xUNXGHhO41rZFbTrJl/
F02cZb3t7PuPqBVLt+7eF4PWZGHtw2+5fn9frzxlz9wrUn3SA16flHj7U6yp
eo1c4nnSm79h4tND7f0nbTuKjI9/RwSdNyM13o/FidncVKbj6ozFG2pyXsy9
F7W8lrIvTi/lOV9L7FmvyXq27Rsb9BJzzVyFujRmNyhz7gSus/duSKxVzRtW
5eTVnW+v0Zu+Vi5eXTn0vu/30Ss5L69llzjfS+S8r7qGr9Xbpo5ZQfKZAobC
djD0HI30V98LPRNr/oPlxTdg03sG76HT1nGIkBfZ3IfHtlneeu95a9GCGN6o
bQ++z1hfvGVk5xn7jIPv7AS0th8k9NKVzZyVL6Hu0wne4yLgMngxPMeEcnuP
52A2dhPy6OpifC2fi6xnlMh3LTHXnufBmgm2MuN8I32hx8/g1dsxNe80Jm0+
gezPf+V5oBFqfqZHgk+/7KHYw1HkPPPbi5wPO3+XdH01Qk7fJubfEvLwTgp6
fhHZROzxuBsv0HdZGhRNO9C26IHmdoN5rr3Ad5HzpOl15H585eov1NLbjiC7
YBQ80kvR/cQLdCy4Ae+tN9AhswJ9992Hd9ZVOr9dhun0bJgQ3x1IG2nZj4eO
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
vA0Tcg5g3YtfsPHNH0j/+HdkvhVm1zE7IYnshaWlNdhJ+3dgeBKMfQPhPm6W
8v95jJmOdPopac6xZbldzH9u6DWGx2eVs8hlNXTqrH9Pb1Sp9krMY9DiM1R8
OHNYrJ3lLzBbaGjsdmz+6i+sffA5n902PKEAYzfsx5xdpbz3fv4fQNbbX7Dy
wgNkf/ab2J+3/fs5L/FdT4Pzymtf9SXOka9Tv9divRR3V8Xmm0ixeblulzS9
9JjsttJu+qf5v+KS1zGqOF/HtZEwiz4wLJvXzLOeTL0WrON+lNEs757ZU8xm
08jFY8cui5Obd5uEQDa3vmVHHttmtinLjXPmPfKcVTn278mzF+xeIb4l1bhI
uavs99uQ5dfT/xlCOn7z1+9g1WMW34eSjmb+fNajht1mufDsOX3Psei7PBOz
d57neYmsX3Ri9Sec5WxWT3LN50i8+xar6XGm31m+65j1++D9URRnuqKhFxT6
vUnDD+Z2BF9W4rWo65U+e4nz1jLO89tC7J6dm3QcR5FNNBxWC7bBt+Q17MP3
wyXxpLASTsJzczk8c4gRO26SXtqI1j2Woan1aJjNI600exv33bekx5p7L4Tu
oDWwCj3Ca+pa9QqDtvtcGIxK5edcK9JpbZmem3MAh2vq1wM2v6QaCvtlaLPk
CFyybvJ4rvGi/TBZclDF+aWHYRN3njTgXiworKzX+8aXfwnF9BI4Et8cSJd2
IL5133oXQ0irTjj4GGN3PcBQYrwfMbtTWiU8M2/COeMGnJIr4Ew8dN90i/hO
zKflk19Deu8KbINPoFPeXbiQPeK4/DicV55Cx42V9L534EOfT3fBUWLn1Xrx
+sDtz9E65Cw8lh1D9zXn0SbyAoJPPKnXd1t15AFti33omlYB3x334BZ3AU4h
RXBYdpRskErOe5vlRfDeeo/4RXo+4zpcMyrhSuxn343VFLSn7+qVVgVfenzQ
ltsYWXAf48n2GX/oMQKI811pW7mmV8GO5dKtIvsqpBze+fWbS7Dn+isoZh2B
QTDrFSyynq6NFx3gfhrbRNontM3bjKHfrcVCBO+u35za5z++gz7ZCIr5h2Cx
YCfZEfugGxQPHfc5MBi9nueFGk/fguadlqKlbwh0PGaidZ9Q2EQVoXXPFdCy
GUf2aTjv9+xNrHdNY33sK2AfeQgOqw7CIfIg2XL0PYnzrbqQ/rcQtbylNAMy
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
NLtr9i2yJ8rhRFy0jboAlw3Xef6affR5uNFtb9K/NmvKMPrAQ0w68Yz041W4
5T6Fy9oqdCDd3DnjOnrl3kabsLMIOVk/n/vErTdgFn4W/bOuY9DOGvRNK4d/
diUCt95GAD3WPu4i3FaW4KvvPpzBuK/qE7SKLEWn9OvovKEcnsR91+zHcEq9
Bd9NNzDn7Ct0oOecyFZiuQVO8cJ3Yz58ViNos+oC/S3dTq6Ae+4dsoNuwHUT
XadVwZy2l/2aSzwX0Ya2mzV9LjbTp8Xsg3xuz/1P6tcvb8yJN1AEk30wchua
DM+EwZRtMF64F4azd6JlQBLajtoEy1VnBda7r8LJJ/XrKVTx/CsoDMajgV8s
XLJucM7rDU+G7pB4nnvXzGcxjydZLM6H9Yo9MJm7g+y9s3BYXUzHbyxp+jz4
Fr+gbXEJVqEH4JZ1GU7JZDORzcvmLDfzXsR7TgqcHyCw3ipQ1otKdttCmi8h
0/pW0ozoAA3+91fWzyvtBClvXx6bl8Xo5bX08r57Qgw+QPk3Qk2eaB+YSLlG
qv72Uu2QlIPPapIDVmzkvubaev4HTN5+Qo27H20vQjbrY3rtBZ/VpV6H95jH
INPevEOHqYtrMXvxufvY9TewruYrnpfHcpJSHv8XYzYdgImPL+m5jmjSsjWa
NFfN7GZ9dWPvf41YNT3/GEkPPseSo9eE/im8rkq9711TTb/9P80plzjf1Bu+
c5J4bDWh+i3v99LWbhDZNf58FqtW226cLayWTtn3zrSf6Lu1QqcJUZhRWArW
R4bFYLM//40+/2jYB8yvg/PvYfo/cV7pt9dgub5sJqy+LObOuc589jLOfyjn
TorPq/nt665ZrOVDMVSxXerDLNTFibF2Q9li/8NEqGVgfuzpeaewnU5349MP
wLb3DBj5jIMhaXrmr3EOnM/j34zDUj+dRnpCLWVj1rdP1o+oaa1ehaoeEupa
PoD3g2Y2XLcZa7CdbLv2QUuFWIsYDxdsfOl3rdLyLL6jZdFfjNerOC/48gcq
Wa9tpeJzQ0N/tHQcgTm7L8CSeK/Q7S3j+uBabNexkT1mM0jdBrCROD9Q1PWq
pWXahzg/GYZT8uBVcAftM8t4bzCXdefRfuMVdD38gPvxjSZvIt18EvYpV2Cx
9VMYx92EftAqWMzLgfn8POI666m2F8ak4fVHrkezDgthOHMbFP7JWJ5zrl7n
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
qS7UCqgZX1no76fMLm+l3DZTeC7M620tXit5CkYSs3k/Vjs+b5zNnd325j8o
XKouTKu2o9/mFbQauwKVqnUVcvNZrj99trvvGPRacwxdF+3mmt7Vezh2vgPv
qcfiAGzeTn7Oi8w2ba7Hdj3Wq+Lw6vcoNXLNtb55zn4PFJXq6TQz5lqKOt+L
+625X1/mv8JuNcfz6XgzlZ5X9ygwUM+Yr0eOIS3/qdy7T/rt9WfRqXz2rHZC
Z4Wa3aZi9y+Am89ovk+L8bx7NePVsfn8nNfk4Mmc95X740jxeW3NvDp3XmS9
g3K7OOn3wmbepOdj8PXQxWK/HP04vMBsE0eB82rWmziJ9506qfjeUb7POF+c
vmNRizaos/kWvrkLNDj/M9wOPUeDYzdJvz9ErcuvUPvsfTQ+nYPqG67xmXRO
s+kcPmgfem6P/lfPx0/e/IpD6S94LlztpddRIjAcpRZch9Wia3BaFQe7WZdg
MSEYFqQXzUYfR2XiiBkt06GHeM9US1qlRpGW/GY/dN33wWjEKdSbfBpzDqfg
eu5r/Oc//7388amns9FoSRT670tHP8Zrxm/i+GDGdGL+kL3E+x2JGE63R9H/
O5p0+ihaI45mYpj43Lf0+iH0vsHs9bQGEPP77KXPo2uv1TFotykBv/wXc+Iz
Hv6A9ecySZtHoNxo2s4dd3DNbjLiJCznRcB80llUHnaE75PKI4/BnBhvOeE0
LCcG85lELP/PfnkMTBdHo9LMq7z/cOedqVgT9QBZTz+fX/h3Lssu59AxvBfW
xHmHGcGosz0eDUPuotbFZ3zVOZGLmofzUPPCn2h68gmMXfxQmJjA/WAO0mqf
bzH/mYlc66KdKWnsINXbi7n5Yo1dCSn/zk7FeRuR81Jevth7T8rbN7JVLc3s
u9YG/Pb6c+q9VJpeb6nzlURfZyE2J6xoTQzcFoIVt14XwPd/ahn6XL3+eqTz
Wf+eLa8+osGgeYLfVfTXa/O3xZlsZnqsl7S7mZ7PVzzn82Xhpclb4DV2hWqg
FO3bJTceYxnZGF9Zt6THqvA+6J0X7UPbwC3wnR6EDnO2o/2cHbBrMoC+myka
9QvE3t+ACSGJQo98MmftWw3Lx3n2/QTGq3hPrNXoeFOtntfMnqms1vJ6nCd+
81z7ispM2uJSzN3MU5NTp+1pq892vV616vw7s5YFzw8oIBb/qfi85r65KvfO
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
mB8Fu9n0+MyrMJ8ZiaLTIqCbEo7yixLQZGE4Bq27hvVhubjzL9WOLwnORNPl
14Wcut2p+Jb4PDr4NqZeuINZoXfgf/YOJhG3p5zJxbRzeZhCOn7S3mRMPpiG
qcR9Vg/nT89PCsnDNHpt4MU7GE+vG3HyFobuv4HBu1Iw9PBNtFp5Hf03x+H9
F/SO+auXl+9+xcHr9zCCbL82m5NhuTIFuvGXaTtGoOLUK7CfFc63scPiaFgH
XILT4utcz7OZNyzuzvwpbDF/vtvaeDgtu4aGu2+hzvZcOK5PgdPGFJSfQZ83
nvb5oCMwIfvBefk1tFwUhkFbozHzWCp2RdxC+K2XyHz2js/p+acuzDfVfEUI
io0/Asdpp1B7WxwanboFlzUxcAtKQ8l6w/m5SMhtETnvpGK9pgeVxHnV7Ei5
dlY1S8q+naLlHZSeeRp9L/bOl+0Asf7eSK7pkXrlK31zjOR6enFOncgVY2mW
HcvFN5iL5yUvlsfH6tCZ9mnYOxCLs16i+5L9XIfqTOrwHHyHZgPpnJTM54Ky
/PEZEfrzaL9Eq+foMd/wa1hMe/XdN1ic+QKeY1cKvVCL1xQYb6bHeM0sGsOc
184o1ee8fo6C1C/Vg28XVodcqEIr7v/tsyEYujJNeayX5+CVbYzSju24T2Pn
j8C+34F2M7fzPD5hppA2j0Kf82ZVO2Ne4n0sIRvBolZ3rkULsxl2jPf6el5d
F1dJ8tu3FOvcSbdXZkvMrzcTc+dlG0C7pB7B+ebEFvRYPm2vipcUmEen5Xw+
Ta+fZ6+3H5X7Bew3dd9mruPtULPzJO5vaTZsMd03R+GKzRXGS0vmvPhbERlv
bKnYY5KvXvLXy32n5Xm0Ur28Otde9M2p58yKnJd9+VKdHIvF25GmL9kU3+6/
jPZzdov9cjpqOG8iLQ3nRRuA7hfIeWem54Xn2XmhVNMpKNd1G5zmXSCtFYWG
xJUGIXdhtzoS5cfsR8LdF//YufVzl/cfPiLh/vfYkfAYIw+nofH6WJgti4HR
fNIUAeEoPJbY738elkyvE+dZTJ7NhHdaFgvXtWQPLIuD09JY0o2RqETsKDKa
+DH4FCxWpqLV+mTMCc5G8rN/t+ZOfRm6Px3tNiZg5JGbGHGctDtp+ZnE+RVh
eZhJrA+gNeP8bUwjrk8/nimvaSezMD0kF4GhxPjzd7CA3rM4jOwC4vyYU7kY
cTSLjo10fLMjBe03xuPFu3+3Fl66ZD/7EWtCc/HN0TtwXJFIbD5J2/ckKowL
IfvrOjE6Hu7rU0nHxxHbo+EwP5JreFuyxawDLsJ0aihMpl9GYbIri8y7hnK0
79zmX0HvvSlYHfUAYdkvv7iv7T91qb3qCiw2xqJx+BPU2E7ff0MS7KYc5fVa
vL+UVLfCc1v0WK/ivDw/StLyqrnRSm6+ivNS7N5OlXdvr9TZCfpexXnZV6+a
ca+abSfftlLlDFvr+e/l/jleWsaz2V18projui09gB1k+tZkM1voPMn7vNLn
FrNsxW0AXYk6aB+4BauIwavzfuC6XtD2BcXgvzRWL90W5tGz2rkplzNQuYof
j63qyjTSMt5MxSQ13/U5b+5h2Gev1vh6eYj6PVZYLyJd+eaCzVOkNoqY0mO2
HVCEmKor14wz3dt/PYbsuoiGA+bCtE5PzkIpf0LJlczPeWY/sdV7zTEEffcf
cbubcn8/Y7XMeKbxZe0u9r+pzOYK+/C4u+CXbyno/IqsD62n+JjaR99SzpWX
OW8wt17/OQO59wX54z/lt1ez3twA52Wm69dFGt5/8r7jefWsvmEE72PYePAC
3u+A+abY7yAf4y31Oe+TX8/bqDgv/9bayHPllf53Au+N5R6Y4m1Nv3ql/40J
z9llnO/Ea+LZTJtOC/eSbrtI9nQTVS5eJ5HvnQU9T8yWlqLZxdvOnWS2l3CW
HuvMF9P07NxRuvFElG61mM+cc19+FTWOPULdiJ9Qms53MyLy/qvn3HyXP/9E
zne/4Gj6c0wLyUH7TbFwWxSJEtOvQDcxDLpJYSjHetEz7T4rAtbzr/O6O13j
NTwmUGfCSQSQvZD+6pf/yde/8+on+KyOxqCdyRhOun4cMXrq+TzMJ84vYKyn
2wFkV808ewuzgnMwi12fYbezEUh6fsa5O5hDjF90iV5zIQ8Tz+Rh9LEcDNuX
juG7k9GItsW2qHv/k//t0fvfsPx0BppPCUYRFn/x3QLdmHOoPPsa96Gw+YaV
5kahGJsTNJGO4ckXYRYQhmZrozHy+E3sSn5KNtd7/Pjrf5fr+pcTt16h/PYs
1Iz8Da6rolF1XQwqdlqEIqzPuapGRVki653EHlRSv0kD8yVkzjuKMyZUefhc
z9tLMy9UGt9e7csX+G8k9cyVc+0l3vvIM2643nAQ8/Ukv72lgbw8Wc8T49l9
m9aijrdF342nsenlR1jV7SXmJgucE/jXiufz6b6qx59zaDYI/hdS+Uzw5Tmv
eJ6cXGd/vSCffEExeMFWWJDyEGuJ76zevOuS/ShiUleIrYr58cVUtVYKZ1Q6
Xr1k5os8N/NAfl+9AcZL9o+qp60wg86X+/HZ5wq9cVoLM8xs2vFVqEILXp/A
uV22EZ9PJDPeqmA9z2fj8f/TDLVJi254/ht6LDsg2FQ6dxTl+fgt5Dx85pcv
znQ78b14ZW+Ru1I+XktlSfn00n39eLqhvHqN7VSAT19lK2jsgk/k1cv7Tc6f
V8XmZeZLswhaQelZrOK8fr6duZRzJ+SSlKXtvfreW3iMW8V9IswfIsxe9jao
5YurffWWUiy+tdIjR+5H5aPEy+yknpftxDwZdc28VGejtvPVjBcW99mLfW9M
HPw42+v2ncv7UhW3aY+iVm2F18o+e0nTS5z303Ke81x4jcB57ePGdG1k6YEy
nrNRvssOWPQLgvvSK6iyPRe1Qt/AblUcGpLO8thxDRMu3cL682mISH+I1+/+
N8yULm9//xMRD95h6YVc9NoUg+ozw1ByVDB0/U+g1MxItJh7EQsPJSPl7v92
Po50WX7+FlqvicG4Y5kYS5p+MrF92sU8LKQ1h/R6IGn02WdzMY8YP5f4Pvc0
LcZ6epxxfhG9bh7ZBP7E+QliPj5bXTfGoWdQHN7++u/3MfjcJfvxW6w/fQNd
diTBamEMn/lbaMhJ2E8OQZtVUQg4k41jWd/h7pv/jt+hoMtvH/+D5KxHOJT8
EPPiH6LLkWTUXR+NKntuoeb5n+CyIh4u8y/CpNoQFGczqPU57yhwvoSs6xVt
r50tIfa7kPpiSHn6UtxOv/7OTtT5DpI/v53Cevu2Sn2drX5tnYrxrM6O1d07
tlV64Vu3Vvqxyv27lR6tzOcvzGazR49VR7D81ncoY+cjzHiV5tNrYtbsvOpJ
3G3J455FyzdB8xFLMelcIp8PyzT4koxnmB2T92V+e7IN5ibc5X3qNzz7lW7f
g/e45Rh5OAqd5u2iv1EJRS08Fa6bq3hh7sH7y2p0u4W4zFspy0yVg2emz/kC
GC9xXj0XiOs8X3nOiTw3gPnmmb/DQsjd45qP52VLPYtai/3UDHOe++WJm8xX
z2aoWdf9Bstzv8OMqGyUYXaVzgqFKxJTzX1FtrdWtHu+XnUtBf1uJvakl7S8
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
dxDTC3jT+2nM3tOKNPjStdfiq3CbcQlexPGdKPaxn3IBHhTrWP90iuKrJPjv
u0fXqWg4LAaWI+gz/JFh/FHi4udgPfY0xQBHUe8n4vqzE5D3x9sin/8lnTON
1meh2tBdFK/RcZ96CtXbR8KGYj0L+h3Hejr2tWQ+77rgIuwnHYcDxQOO4wnv
6ZxxJMx3nXYG/syTYXceWh+6jbAz+eh45DY+O/MYfY/c4bFl2KZ0tNl0HU1T
/sG6F29x+8MbrHj9L1pc/0CxxRbZV6S1PGMuzCjmVni82P+iYXxFuT9V08GG
a5oX9l110mpkGs4L/F/N/yseudLv2J5gqBSML9edkGZWEc63+GEp8bFXUr+z
KYyXef7k+FuYl/Mz7NmMEbrf15tOS7n/8o04XvF5XHy154vvZebKteIRIvN6
Ge9Zr72G+ZqPjlLP13vEtRXw1RTmm+DmimesKT28mm8X44A2Gtaza9lnrfWo
ZZiech8lqhB3rN4U4sxYfb1d4OWm+HpD47+3V/d9xRtV5O2qppHxeSV3L+jq
VYwX5hGw9dH6fJ3CfXQc50WMV69bSjgv4D7vfyP+3XPBTiynGHe8rofOVL5e
WgzjmffN5MTHKPuJL3+MRXde8f45HjsQd+YaDIu28pw7Bzi2GYo+0Ycx7FAy
r8V/tfEsfPtOlvSjZbyl2JHuU4JpBcr7YtjBZOykvaCmB9OimGHAtis8Lpgq
e+yartVruK/k7xmnZ7EL+8wNlQONNCPa7XLm+px9ORXzFS6vnRcqrisxnFFc
rJtlI8+oM4nzxnl7OyM+7yDuK92M+Hw4x22DoREiFu1BxILd0oyAis1QhrC/
knNPmdNrS8J62T9H5veqh47gn6PV68PVPKWK8Yp/N722UjWaoHSN9nBP/o0f
K/zxBpP/eYted16j3fHHaLEjB5325mFo6h8I3pQN57mxtBfnovnB21w/5bOM
4ckZOBF/d57I9u/DcJ5+Cg6057vMJcz4fgfqdF+KWl0WwuqH3XyPr9FpERp8
uQlOc87BZ9M12E4+A0OfLTiW8aRIPHn1HvDbkouqgw6iwVf7OBbZzYyFBeG7
+dAjxBHPwHXVDTiuvodGe+/AmvXUEWZ5rGJ54lS4L0iAw/hzcCPcc58Vx7m8
35JkBK1MQ+uNWdxDLrW4/PiHfzF0ZzbCCFPDiW93WJ2GjsSjOxIXbbc0Gf7E
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
56MeveN5esbdJ8bdRq/IffDpOwkVWJ3WUB62ocOw7o9/OdeuwmbNlvXiWgox
V6/c5t76xPkH74rnGN5m/FpeFyhVPRguHYajy9RNfG7dUnrOZU/ecw4/K/MX
lK4eiIp0Xi64+YrXCwrP0suXtHgyzrPvAPP0rRdAsbyZn4m8veneOvEcFGPG
8orWU9F1CPPqpOvicF6cURdmks9r2l4hdy/zg3L0dzbX6tMVR3junvXXjCes
HyvX6KPz/8BXm0/TXkavj843rrNX/XJ6yr54Sp2+p8bpFV6v3hb8PtReesl3
X+kPqKD0C8g9gmwPNXP6Gp4zr6LfP8DXH97j0/x/0PhYAZoTtWtz4w1axr+A
Z+Ql4u0naG+/CJc5tEcvvECYnwy/lcTPaA9vdvgOGu+8hkbbc3jvlOvcc/BY
fJligTie0/VcTji/6BLKDjuIGSeK4Yz//ot2dD8r4s0tj9+FL+Fg8O4bCNiR
i3rLb6NFzFOMzXqMVXSu7Iq9h3VxDzD96jOcvPd/h5Pi5Wjub6hNuB6yORtB
q9PhNz8B3tOvoNPeXISduQG/TVlIelS0t03Buw+IOHGTXvcNtCQO7zHlEgKW
JiOE7heyIROfzIjHdwf+2yy8/+kl+VkBDl3/DQfos9pw4S6mp+Sjf/wj2G99
DLsV1xC4K5ew9xqa0HVLipWsmPfgpLN4+KpoLeCRnKcw+/EoxQVX4Bl1BR6L
6NguuQz3RXFwnhIDL+LrARQ3BO2+jqb0vvxWJaLRmmR40f+6zD1D6yxcF1yA
86RjCNidhzbXCtDy7gcExb9Hs5i/0Pf5P/iCnqdjagE+CZqGkjWC+fed1dxL
Mr5XLQStf1yCPpE7ec+zoQZhvaPmD8Xr8o7d1Nq6rq4l+Egba120fH2EnKtX
eH2EEeZ318+WdNBwnv2d6W1t2g3ns+kaBn/DdTDsu2mo2VrC/DptUIXi9Rpe
/Sjm6M5n2xnK+tN3vw2fXc9rhOLcLGujvL16LS1lD1OwvlxRy0iTX07uvZNq
mVovXnlzfd28MMYLnrGFcL+dDvPLCzxL86PT+9aInv1s8Tq9wZ24QDK+4B4E
ThJOK7VWC2HJeK7pq7Q8u5KfVa/Vz6q93C/fTeLxCk+3IQy3od/bEdZbd5G1
jUZaPLkeUHTeXqnRh6i98vol/Y3jO8P5utJ8OiVnX4Iw0lA1GAM2n+U6Tb3P
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
O5ZPKBRTyHHFotuvMeJoGtfthXy/mGv+C8214Tgv5SuY5x/7nlm3/Ia+O15C
fV7P5wt7M7XT47zxTANVZ6+dW7y+ZSVweCVXJnBdne+tCYxXe+iV2VWsx6Z2
KD+fFrEa07cLeG9kRZdespY+Qu6T66Fht4Ltjr10NXqJ2/fk3EHM7VdS9PiK
hliZXSv4emh9dgLWqzhfmNMzTV4Vz89Qt9MSWH65E+F3/0b4fcL6468RuOUW
fFdd5RquoD030ersUwTuvAnvlZlodjSf1gN4ME439QRsxhyCz/pseCyJR8OB
a+C14jIaLL6EdotP8965/78uj14WYBFx8+AttAcQttuuzULwvlsIZjVi4qr+
G7PhsyoNgXtvw3NFOqxHn4ErYbzhh5NYfOLj/W27KBY2jLiIwK3X0HjHDdSe
k4RE4t1FXVjs0HRDDryIv/uvyaH7nsfQQzc++jxpD16i5PBTsBp7Fo4zL8Of
PudGm3LgsyIFjbfRc2+/jmCKWZruvgFXwvnKC67CYXUmJp7PR87T/5s6R1GX
iSevo9rCWNiN3werYdvht+k6xSGJ/Jg7zzzHX2cLwvVGW27AIzoNLU4+RkjM
QwRszaNFn/+yBARue4jWcW/R5y8gcPtNVG82j76zrVGmYWu5PmrsM91Vnteg
zaVTfO8Yb+c5/ArBaD9+NaZfvYEGTQbSnhnMeThbVdh8KHuKuyuFEHfvCK8+
U/D5muO0z7C84VPMyXzIb/PZMheuSbMzWV6R+ZQQ9s8m3Gf9MYvvvOC10z7R
h1Cr0Recf7F8La/JlQ3k+KDl1IQ5dw4CzrO9Qsnf63R58rVNV6Mcfhc9zqsa
PWXp69PKUvC+vIjzItaqXq4dCuGwkm83M+G3p58LIt5XiBF0PetGWC/uwbq+
OKW/WdIVMM+cLrO2YOXPBYVm/Skz/vouO0jHOYhrmSWM72rkhyf64ik4T3GE
bXda4XLtvbOe63NsD1f5O+f9bHFOb6KvTvSzV7T1it9t/U6Sb04dudeufhup
316ZUUv3Kcs8b+U+e+Z722X6NiyluNG0t/0Dzq/7rz7Bc+NdZm7j/jhMKzcp
/r4Rx87ndXtWi6/h3gOV7Ttjds5zXmPnOE+xAdPNTbx8h7BJ8s39fM0Jnh9Q
fWtlzZ/fp1N4/mHM2Vw+q0bve5PPe+tY7mAzUY2RJ7O5P0/woPk8BjHO8Yv9
8zNT8/mxrebWneKlAKE2b1SfF7wdystet9KMeaPckm6WsFKX7yDHwh30c2ht
lDg7DLr6vLjv2MuzrnW9dZpPBztPWL8sm08z4kgS7S9Nec+GOl++kPeNPmev
8nqO7b3leTYSp6/kpKyewlJ0Qvp5NyrW62ZlK3q8rqoXrsrpWe6LPrs6bSeh
dusouIw+ij4U87VN+RdNDz1Hs4MP0Wz/fQRsyUOrc0+J0z+G/+YbaLTtNlwX
XYUP83zblIWAXbncR8WbsL7BlytgPWQdqkw5ib7Li/fC+/9y+fv9v7iY/wfm
Jz5F443El2cnwHzdNfjtvgOvNdlwX5wEp5mX4L40mc+kd5x2kWKTdHguTYPr
gkRaCWgw5QIqDTyIey+KngurXLpszUXNFRkIPnIX1adeRGxm0Tn/vz58QFPi
8l47c2G+IhO2kWl8fl1xl3dv38Ob+HHZYTFwm0/8d1Umcfo0Pm/WdtwZeC5P
hQvFJq5s7i5xfe9NeWhEx8R+TRY+mUfHYF0Wplx6hNN3fue+uP/Xl8UXb6H0
8D2oFTaTPtN4PlfAa1US/Cn+8F2fSb+7Co/lmfDfcRf+WykePPczgg/eo5jw
DpoefISmBx6hyaGXCH8KhF54TDHlWlR2+4L2w+a0x4o8XvN3knRsylxIIZ6W
58yy70BZqzDaK5qj1cgojD6ZgvqBA/jPVYhvlzbvTDyrFezbj+D+8vNyHmF2
+gPuUTXqVDrGnMmgPSxL9a1iPlbM44J7XVy8xmfD82vZ52bZw9fc++Jz4l4j
j6VIM2irtuD5AtVTx16bc6f64ys4L+vvpdWdxyAVHPrRdS+B5ys6/C6a97bY
c2fTWchBdlR77soJ14ruvEhcNeo71/NtY/6v4bXir2+mu5/Io4rKG3TQ96Rb
6mMTJc9eokYIfZbduSZtTtZjrs02nunLfceu3EQ17/4w1AyVeXsnPW7byDV3
G+F3/LyK4J+nxOWN/04/23eXPfE6cd29mX1PfkwY1pvEeaU/XsX85nQ+d0AZ
WmpvPcP1+u14r7x+Fr20+BwbgzOaDJyPpfdfSe8zrrAf3tKHb/hcGUNZd5St
GYywKRuxiPCa+dmz2bQipnKcv/ESNd0jUNmuE6/NS/41ErdmeM7yA59R3NBx
4nrO5aX5t1qendX/fftONuLzUj6AxQqM+7PYYNmzfzFg0znUdO7Ge+taj1zG
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
ew3ZVIui4To/Cq6LY3k9ROCB+3SbCKuBx+C9IhV22+/DfOMbNL34GWM/FWBS
XgG6vfsHTksKUGv03zDrdIyOjUA6t5rL1/Av+OuN5j6os5zU3g/dBC3fU9Dw
xHcnaVVw+QHFLDqgWp0/eA+8iRfSub+eMZ7Nopuf/gY/rN6vstnvpwHE5n84
55keWvLwM35Ye4A/5t75B1SsbqHjfPD8DdwfymKiSx58Qo/luzSbYeB4hHE9
X7TffkEGi88fJ6a04nXYun5V4mxJO6XOVdQGxvl5xqw34r2an6YwL7gw84v0
m3dQ7YRyqtYXNLZB82Ur76XZBux615XXyUms19sPhXLkjPMIBQ1uqs7bUDiv
cd1UjGkIPYP5a+w0PW8qa/ly9j0FzSLYA4pNIL5G9AWIjLcL1jjPnmPftcg8
vN+2nOFz3Ip9V1/rk8P89Lw3TjOJ/dWCND0v6PpSAvO5rq8m+OqVWL3Af8bJ
klVZvZ01qrp0Jt7e4DydFCP5ydlxyHrpsDz8eTffY102MDw8FRb+vaQYvUlF
fOPYgc9PruzakWtzFpdnsXU2i77H0sMo/rU/Slf2RfPx62DfcgDX/my2/Vek
p/tuPYdVdC4svpeHyTw//6Gq4ZmtwWr856e/wNKHOWg4YD73w5t8XUfiMe95
11TrYy/m2xHDTYq583zGjjM3Y8WLz+ixaA9Mynjz3Ad1Fh3negs1Pl9W7ner
9LVXY/NqLZ3Q67ZIzrcXYvaST4vF5Zl2N6/bF/NuPCcb7hduF/J5r0VxvlCu
jVFNnYPit+8mL0HXCzFJsW5e5HxFHqNXdL3sz5dz9PhrRO4rPn1Hrd5O4bwa
C5X76Ij+Q1ODMesVX59k/7D+VyW+c+f9c2yG3IDl78TKxa/Rlq59HdM/ofez
Aox5+AlTzr0mTt+H28qrxJILvA7Macop+G1Jg/WQXaQld8NAmtxuzH4YRu6B
7+Yr8Nl4BU5zz8OJOGO55AZ8d7/GxFTiPLGqfxLx+cQrOK5Jg90UsgOG7IXH
kjg0CH8IxzGHYPHnTthOOw3znzfCM+wi6eiHcJsTDYtem0if70HVXgfhPSMB
/dI/okX8KzSIfUHveQ0OkyO5L91myEHYDDjI+806rL6PNvufoHsKPefqazhu
e4Bi09OQnP3pv2Z8wV9/w3FjFqwin6Fe7HN0u/AM/hvvI/AYafXQJLKTdvIa
QPvJEcTbGNQ+mIlmV1+iV0Yu2u69R5/jOCz/PABLVuf323b4b7mOeocyYT/u
KGoQ9+1CzsL8x/WovSUVgXtvwTDmCPH7ABwWke206z6anfmANfdysfdJHtpH
5MJlwyPUWpwK58WkzYnnfmQrucw/SzbYLlp7yGbbT9/lZrgvIc6HJcBx8inU
3nUHduPPwHnnHfQKf4qQ67n4/dUn/HQrDx1e/o3A6E+o0e8hbIc/xlds5mxl
L0FDajq+sJbvJPe8E3vgdINWLypxvqLCeOI6v5W1fAWXH1Haho5d5x/Qf88F
TE+4o82Uj7yGWcmPMOhoIl1DynI2V3H2xuyMD7wOjuXXs742oaTJK1k76PjO
lkWdJljyDFz3s9r65aR5Anpr+ffBc9dgyf1PRep5dhua+Vaa7fFtkNSr11E/
e0LsWaUue/HaocXSis7FL8x7KcatZ5++dkafx15O5LqOzcpzNMZrdkMw98+X
M3STGG9QcgKU5wSrNoI6A0Reuhi77vOIPDbmu5inqP1uKmtxhdtSXJ6OG8Z5
JTYkMFyv/bWYgOpH0c1JVG5lXU/fGdseY85/T7xl/me1jt5Mqp/nnOd/a2zE
+Caqftdy84S/C/1zdD3yqkl98EvT/y1t3or78EtXbojea49zPz7zK0h+/Ouc
u5Nj73Leh9LxGUb6fuC+eAT2mYXSVRvRay14nEHywX/N59GWYDl6Jt/JeXvu
PMZvUsoLru1GoPfqcMy//RHLnvwt5f2xGvv4+9KMWTrW2bkxKTYDyx7nYnrS
fTi1HsIZz+PxFrKvvkZTdV6NmldvofXEYXH74pUb8Li9ReDPXNczvwCrE2R9
BEqaNZVmzAt6voys58sIefbq3EU5D0/s3ayP0ct9G1TfvZSfwvsrFffFoP1x
6LfjHO0Dfz7jQH+uCbF5ZWaFEpsvlIuncV1kvS6/WKmlU2uFxbr5nrKm76n2
va8oa57yTiLn5Z65Sg8dcWa9yHqV88K1Rahfkc5fMYdH6oNVpiaz0xrBrONq
WPY9hupdj6Hu4cdofRdoFJ2HjWRvXvn4Gc1PvYIb6cvAvcT7+XGwG3sY/tuu
w2HcQdgT31lteK0+a2DWbSHX9k5TD5D2Jo27JAmexJi65z+iXewnDL2eg8bn
PsJx82NYhSTC4o/dsBq0k15zCZ6kZV2mnoTHwihY990E807LuJ/eczkd4/uz
yI44AfNuW2AzKZq2h47V1x/Q/mI2Ava/IMZHwWlGNJxJT7uGXkWd409g2PQA
beNfYt/bdxhAjHdLeY0mxHtL0uU/Xnz5X3N+Yfo7VI54hKC0V6iX9ArL7r9G
yIv38N71GB477sF3eybpeNL28y7CZkQEXOckolncRwy5m41+9Bon0tDW/Y/S
tm+Ee2gC2UfXaVsjYDN4D8w6hMJlWjh8WP7dlHB4r0qkz3AGtYj/FiNPwm5F
Blz3vkKvyx/R90oeGlz4hNqnXsBpQzoc5sfAevBm2nfxZN8cReVW02A9aBv/
LqwGbCXbKRbeG1PIvtgO7/X03R2+BxvS8nNSc5CBv9GXWN844S80vloAx0mJ
qPlzJKq0DqVjIkiqdVEYr+bYy8eUEeML5dc7KXxXlnycOymclxfdZ3wvR8d4
MfP2+GHZYdq2h8T5VM54psFZTXtI+ntUdQ9Q+dxn91nicwG/LrJrVBhp+uAF
G/ScL1Uaoy7cxqLbH7hOmXXlMWZee4VyVc2lx0uWxuDTKZib+qxILc9y7lmP
zPqDl5IeaKSfU6Weh8L8PSV+pix7o+uITtMKWtioBk/JPzdVNDLv8yL50kVu
mwrndTnbwvcLP6b41tk1opvEeUXDy3lymk3QsdD1Q7eE2ITmly/Md1OxN7Dq
31Cuqxrr+a1sC7Ece973k/nqFR+/XC9cXn0P0d5UGK/X9ErfMEnX0zHMYvi0
CtfPO/FcO60PXmNeTyfpeTarTua+sqo1KcR00Xev1NwpvnuN84pPn/WDb028
bMFz/1jsu37f2aTHn9Ex/UHuL3udx+3ZDIZJMZm8X07og088nj7r6gsM2BWD
DtO3IPC3ELh0HI0agb/AzOdHOLQeCv/eM9Bq/Fr02RDBe96xuXWsV+RMeh2L
C7DF+0Gx2BS9D4sbsNr4ZaQhfll3HF9Zt+ZcLlVd7l1LGr6M0O9Ox3nd0vLo
ec1eWV/0XLwXq978g2Yjw6TcwYqB4DONFW2v5N9ZaFpenbkk5tsbx+iNZyXK
dfPl6bg1KV0bjsFj6Lx/je88foRJpcZyXL4TdPa1QTwehVz7IvPutRn0nPNq
H1ulZ47mf1f881qPHLm+zknmvWNPtc5IzctzEl6v1Ner82u1njxqzx77zoU0
vY71Sl2N2v+qDZ/PXLJKbXzl1Rc1ftqFah3Ww2niObRNA5qe/wudEvPQKakA
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
wn57C6FWXqibY7+z+ATr48fmSk9JuIvAX2bwGUUmpX1l1reWOK/2tC+C89ZF
+e2FHnjWUqyL5duxedIsBlKmZhva9y21nrHKcWGraHsjxut644l97Y363op+
e6XuXcmxczRaTpqOVxe7Hjr3lDmv5SYrPnwlzs/76Cj19EoPfV1vXDH3vpNm
pwtzRDXeK3Ms2qBU1bqoVGcEav64GVXbhZEmPInm0R/RIiIbbc7noG1iLnq8
KUDrR4D34ZfwXHyOa3nPheeJUfuIK4eI6aTLV8bBfVEk57t5tzBU77kKNftu
he3EY3CaFw2zvrtgO/4k/HfdJD6GwzBsH/zWE+/XJcMwcAdxLwausyNQreV8
4vQB+G5I43lk/jvvw2HSOfiy3DQSb7Zz87HwYTbm53xAQOIH2C75iHqnc+C3
+yXsJ9yE26Lr8FidQbbEdfgSkxte/4BGya/gvfsBfNdfR6OjD1B5823Muvz6
i4w/c+8dzHZkImD7bXgTnwPOvUCTlNeok/wePqSp3ZenwXNtBhynXYfLvHvE
zvfwWPcRlis+om3me+z46yN6hOej6rjX8N31AG6hiXAJiUHgwUfw336LPmsC
2TYrUZP47kb70oX2h8uUE6Svr5ENcAa2w/cRxy+S/ZCMaj+TLUW63CHkLGr+
uQs1ft1E+nsJbIfshMfSaLgtOEO8j4Xd2N0wjNpH7xPBew07TzkCzw3X4H8R
6PDqMzreJQ1/Jhut6Dttdr4AjSJewbLfAXwTMBwlifF8To2NMqtEyPVS/Ko8
Bm3EeJHzqh+qp+qv58e0S0/NX0+LzUmu4NKLr4rE/LL23VHKqhOvV5+X9pj3
02aMZ37FsZEpCHv8D4IXbdb55huPnIlZ6e+4fglJesD1TUC/kWg5aSFWsR6f
Dz7xvrc/rjvI2a+8rrKjB2amveY98/Qx+XR1LlfYgw9oPW0zn5X7tUcvfOXe
S/oMTkpf6qLPOz3rjWdPabF8vS/fKHZt7NM3aL5GznrGfK6bjfz/CufVv0s+
es554f+a6t5L8C3o4utCHobCWoHvuvsiw9W+AkZsVnsIaj0TFfZzxvPr2A9S
vpRwbdZyHopmeCHO23c0eo6yLzoUzXnS8CWrCpznvW5bqHF5lfOKpq9mxPvq
Wm0di+eXMhP8+Up+nlxfp5tfyzV9c+l+9aZSP/xv6nK9a1LGB1U9uqPpiKUY
cSIZoVnv6VjO5jly0y9lcS3OmM1t1ChpvuJEtefzDd4fki+yCZidO5vn9r9H
KOki9toeoXvh1HYoSldrzOMWJuX9pLo3xTcv59Xz+TTMb894T5wvyzV+c72O
N2J8GaWHvVxXx+LrJuVrczvGo+NYzLz6iJ9nVT168BwDFr9QeF9WN29e3ydH
i9Mb5+BJ8axilRrxnjhs/pRHz6m8Xp79XpGOnQrK8aMct6KWV31tii9cidHr
Ga/G5h21/rcq443y67VeeEKdkXy/Itc1cl6es/aYUotfKNYvz6tXNL0y+6ac
vdF5p/PHCb1O1B5abTjnS9cI4tcHs+DFqNFjBWn7xaiz9QZax+Sg1Zm36Jme
izYX3iHo5FM0OZoJ9zlnSYtfQv0jt+GzLhFO0w7DZfoxWPQMg8UPy2A7bBeq
By9Ezd6rUfPn1bAbc4Dn6lkP3QenOZE85u48/SS+bzUfrjMjYDdsL+xJ17qE
nIbngihi3Q3U3pFBNsNF2I44znvLehOfWe/WOqRNDduzselmNo7n5aDJk49o
mfoBPrs+wmHaW7iHPYH3hkfwWnkTTY7fR/ukj2h25gUanX2FoLMvUXffXfr/
6WQzZOCbpZcRSzw3/nmf+wkubH7uNuI7cbLe/rv0+pf0+ldoFfMWbWJfI4B0
sve6THiteQzn2c/hOP89mkZ9RMOUD/jj1UdcZXr+8Ac47MmB/96HcF92lT4D
/c+pZ2E/hmydTdfpM96E/7qr8AiNgdPU46jVczXcZtH+GHmA9s0CXsvgRo85
zDgNq0G7yIY5gpp9WH/AtajebSks+26CzcBtqBQwGs70eo8l0bAb//8YO+/4
nM7//+fTogj6aT9tFbFH9hASmbKn2ILYdKnqbrW0qqpVatSm9t57702MSIiE
IEZIgthZRtXr976uc67rXOfk1u/vj+txzn3ufSfnPN+v91xNdkQGWm65Avcx
e9BixknEHryFlhvykXi2FB1TSxC2tgDxJ5/Bc8wRvNFyOP0PtOL/AxV5LUZr
Uw22mgPF/dK6v75s37uynK/iYo7Hcw1Py95V26/qTpz36EEc7UXXuSg07T0S
4y/d4XxnOch8Ng1xdyhdG6awmR9d3jfXxtd3Qpvhk/BD8mWMufoUs59oM2t+
OpWHD5bt5rPq1Me/0cgVIzLvYWzWA17HZ6tn+sjTN3he0tu+76FC/fZ4p3kf
vNG0l/75k+TsCqPOtbPCeAvn9ViakZevanwr31/Gf8tirOecNFhfqXFHQ9cL
/d6ks7QHjB7F6msp76PGLHVGSptE1d6NLUv2CxWMf5lm17RSJVG7ZOodTO/n
RP8TpOWZz148x+gDZnwue8lzC/sdLfrempvXhK539JyXcV5bYbzXPeuJznrj
ldPj9eUUXW/46y3anTFecL6GouNrRsr7yqm9dIjxPE6vxvFrarPfeB+ack15
vRo75tnpe7T+eS4+XrafOH2R55FPuPIQE68V4s/LDzE++z6dM9pi/fY402mN
u3iP63dmK3SbvBbNe/yE/zq10+reGd/fCNRy6GtrufTcL1/LyLdTZ8pX5D3u
NNZrW1Xbxxr8V3vc1tb8/8w/z35TOzsPvPJmKPrN2YYZ954juP9ovf6upaY5
65XV9BWFnme5ZHUT8B9Wm/hGKI+7v/IuvR+ruWuo9cTpO3c7vt5yin47Xx53
ZIyvavJv6/+zjYQtaf0/NvLw7P+V80YenuwHYuqBZ3Be0zlKfF5cC/X6YsF6
MfvGXonTGzl5XRRNr7+/qXdOorxWiNpXg/PGLGmm4dgq924wqnn3Q+2kGXg7
8jd4/XEAcUeK0PbgXSRlkP7bdgvha7IRufUK4g7eJA2ejMC154jF+1C7+zQ0
/mo5qsf+gvp9ieuDVqJ2lwn8eM1Of6LhZ0vh/iebNbOP+/lr9/gLrj9thtOg
tfAklr0T8RvvD9N8xnHOOY/RTN/ugNdY1jf3FK/Z91+XD78NeQjcXADXlFIs
IBv36cMSHCgmWyS3GI3n3UfQhlsIO3Qf4XsfIXhTPjpmPELncyVouS4HgWuu
IWDlRdLzZxBCej56Zy4aLMlC/PrsMpwfcfoeqpPmjtp2A4Fs9t7MNASvuwr/
lVcQe+AOul8rRVzyHQSsuonww4UI3V+AZn8VoPG+QnzxdzFyCkqQT5+ta1YJ
3LY/gt8a+tzbb8N38VV4T0uD158p3G/v9ssOYu1+NJuSDE/6barHjOY2j+uP
m+D4zWo6tp/bXi6/7oA78d5x6GbU6jYFtXvS79p+PBp8sgCNv1yG6pE/0289
GY6D16Fu39nwW36OfrOTCNlwic+lD151AaFrr6P1kUfoQqyP3n2ffoNc1Omz
FG/4fU7XtSCZryF7TOm5XyKniV1jjVk16jy6zjL3zuh7lyQZX1XNvWP+evee
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
vKaewKcZj3Ck9DlGFJSgWxEQOPU07Co3petEuMzBq1TXzPnKVs6L2aQ2fPZS
y5epl+8heWvE5Xtb+CtY34v3xKmmsF0uoes9NP1vjtNr2yoeSo6+jP33lPtV
pJbXGC9m52i6vqfME6xqWQbf9R7Vbt3NuQdKXmxVE+tVPW/uqyN9+PLxQt8r
syf1JX37Zdj+Mr7/2+pq0uOVncv65FU+82sT/T5ceyjPEdc2rR6/q2ErOCva
XvYPEvpGtQl0Lc989ozPqv2gcN6ci5do+u5VFL4bufxKfqJclvr5f9PzvNdt
jOa/t8bnX6bteU58uNYD5yV+e1lfJ2fSKPl2Ur+bY/Tl9Vk23Hev19PLujqd
87JfjuqLL1NLp/e0E+xnbNf99Or9r8kVbcN3H2taFeSs2bI6nufZ1zHr+Yp1
zZyXvK+n98rj9fJmTc9999WCeR9bVi/v99EYYvd/UZke/+m6ZGL9U+7D/+Pc
LTmbd9b9fzBw7VGew8d66nQYswJTSN+wuDzjPLtuVWrU0egF26i9MiPCUldn
5byTkddirplRfVxsa9S4GzF00dPOqJkvy/luZfddbHNeanrlfYRGqKJeH9g1
Q3K+Y1lNr/juDT2va3r6u5d7O5jXf9TrPgsh89PRI7sYYy4+xPSbT9A/6xHa
JN/k/vqGny5D40+X8Jp491+38lm17qxn2/RkuHy7Gs5froT/9ONISn+EnmeL
EDjnNLxH7YPTl6vgQ4wP35QNjxE74TVqL8LWXkDggtMIJq3K8vDc/zqH0IwX
iD5VCLchu0nbXsDHRS/Q68LfCF51FzFrCzHz5t+4RJxf8OQFsa4QH58sQP/U
e/g+9S4+Jr3+ScZD9E27h5j1V/hMntitOfCalorux+9haiEwLPcZQlZl02un
oz3p7LjtN5DANf1DfHLyDr5OvoXPaPtpyh0MIDvg2yvFOAEghTjfL/kpQlbc
RdjGB/igAOh4+hFcBx+AP/1ecXlkn2y4hcY/7kGLSUcQvOgMghan89l/joM2
0ndPRgh9X+fB6+E+dAvZAIcRvyUHvS8+QczWq/D8dSca9Z0Dj993wXvmST6r
vv6H8+D15wE+D6jBRwvR6OvV8F+Yii7pDzA45zGmXy3GN3lPkXDmEd6OGka2
sbc2R1qfL2GundcZ37Ctye41ar1Uzus+aeFXsnJezKUx6e3eZXhvcL5PWdZL
vd/bqK3XX6OKEqevYvL7Gz58Y9tTMt40I0/02Vf57qb06HVTOC+4rx8zNL61
j5U1dq8wX6mXsVe4by/8+QrrZdzNynVHG/xW84EEa8swXrkmWfLlxDWD1dxp
7O6scZxs+sqsJ61LEtQeYJXV2L2NOL2t3iHy+ufez+jZozxf5OiprDfX7SlL
9NpxTuS+fxPjnY3+ebZz721xXu91q/rs/y/Oi1l0NYW+V3rjKb3uNE0fXUbX
VxC5dEp/uwq11PsZh1vr+j36JTXyL7mtLs5nwfhYiw2gcF6w3cEagxd1c4Z+
N/LrlZy7OuZ+dxVFLL7eyziv9Wl5TfrsDc5XYPl4FXwR+8NMzCaGe3T+kfhd
kx8L/3Ii73Xbf9kB9F+6Hz1nbELkoGk8p571wov4djom5hTii62paPPrIlRi
c+krBqCSnOdky3ffwazlRU88vVeOmgdr6odhysVL0lnfVc6r0eZait44Rpze
3kXlvMF4Q/tb5tvIubXiMcp1RZ9JL/LvDdbrcyjUmTZc02v9byvqet7It9d6
IlWsE83j9Cy2+3qzj9FwwCp0zypEv/T7+C79Hr48fQ9tT95Fx1N3ELL8NO+7
yubUspm1rEerP7HMfcRW1Go3FnW7TEGD9xcgdOcNhO2/iaCFaWj2xx4E0mNC
11/kvGs++QifyR6w8AxaEWubTzgE1592wHPiSWL9efgtOo+QJRmI3nwdrfbc
QdK558T52/A+8BjDHj3HUeL877ef4tMLj9GRmN5mZy4GEPs6b7uOxH030eHw
LdLa15CwPx9taPksykRv+iwT77/A0AtFvI9O+MYraHeEzeLNIdZfR+ejBehI
+++n3EWfYwVI2JWH97KK8GXOE6x59hxbiPNxl/6Bz6Z7iN1+D+2PlCJ6az6i
N15G4HyyZRZdhvtElmvHvss2hK2/gKjdpPcnHIH3xMNo+udBsgdOI2zTZT4j
sAUt1hsw/Oh9eI0/iJqtx6N2pwmo//5sruU9xx9AE9LwXuP2w/GHjWg6dg+i
tl9Gwqn7vGb+h4tF6HP0Nt4neyN4aRbK1+2Kciw2T39LZrtV4j77eNs++zKc
V+rmZZ69kn8nY909jPi30vtOW310Toutznip3XsrbLdoenafpxrPFz59JVbv
KbR9b7ONofrz9Xi9SdebOK/z3V347zUfvugJINgv59vIvBp9boXCciNer5y7
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
IvbfQhxp5dBtV9F05ml4zz5D2zPwIIb6zDtLTLvDdW7jrzfDkbRwk682ImhJ
JmIP3kbTcYfg+MU6zvpmTO+OTeEcjj5fiJF3HyOFWDvh4WMcuVmKqblPEbz2
CjxGHITbdztJs6fAb+4ZRGy6ig5pxehy+SkiyRbxJq0dsZa0+tE7aHX4NgJm
pcJ3QjI6nXmITpklaHP8Ab3/efjPOQMvei3nQTsRTLZD4rF7WH6xEMsLSrER
L7CXVqvMB2h7sQTBiy/B+88TaDrmIFzoOzCfRMuVbLZPPrxGHUSjzzeg0Veb
4fTjToSsz0bEnjx4TDpJvxm9B/0mnn+dRnPS9lHE+KhDBYg8cgcRe2/Adfwx
OLL+epOPw5leJ4Rslrap9+FPdkrwqou8l04H+o07pD9Am7QHcB+2jfjTF+Xe
9LP47FXOtzV6Jll99oLxUs/byrPvrveyt3Be73GrLS3Hns2h0biu59Z59DH5
9Kt59FXut8TuvfT7TDF7wXbVj2/pnWdivbWuX/U99FI4r+QacDtAsF6zAarx
2jvFh2/ivGGHVxU99JTe1mpdrND69irHTdcFK9+7G9cN527y+VLvK/rf/Hoi
57ebrOutIvlvYbyrYcsJm8CoMeim9A7qJusF+P8Cy69ksXv+2eia48a0vqLl
XdX3UXLzLTl/Rv2BUVsv+tvL3rjSp98J/15f1+H/4Hy4mfPV1Ti91W9vidGL
HPuaNlgveF/Lyvloi+9e9LgTOXhm1mtsb6XV2HHGJ/D5tWV74tjyzyvx+doq
68vqeLmv9rCtq+h1k6/erPEF51+2NL7T9YbNpvlvMOzKNYc9XWv+55mEV6pH
EXcb4i33LrznXejnE+m2K7G/rWS8ifMmHa8wv5FF0/NZbaIXnphJq13XGPvs
yrVANfo/+npbKv688gDNe44gve+D/9SI1WJGpp45Rr59Wc6bY5lmTW+cL6a+
dpb4u7jNdb3OenvhF3QxeuRKv5t4P5HnI2fYGXl4KucrK7V1ZTS9KRdP4/xr
dbQYPeN8xYZd0XJxOjplkZ4/e590cQHPBwvfcIn3vYskPoVsugzf2ac4l5qS
Vo0nzRqy4wYC1lyG34Ycus1YdB9Bay/DZQpp32lpCNtxHc1IT/stvwBfYn79
geuJ+cdIb2fAnXRx6Por8Bx9gPhF+2wmzOorSDh2F81XXUf/c4+wgTg/kji/
5XoJ/mA9b5ien3UGkZtzeJ58s98OwntcMrrQ+/bMfIiIddmIoc8ZxXr0r8xC
GNkqsZuvIJy433pfHvpdLkXUthx4DtuH4PlnEU+2RtD8DJ6P0DHtEWZdKsb8
myVYTIyfQ+/tuSEPcQcKEEPcjtiUA7+ZqWjyxQYEEX/955EtM2IfgojJjb7Y
BOfh+xCy7Qbcx5G9Qt/Zf91lOE/Q+v5FHchHQnohwg7fRYu1V+FP9krE0Xv0
fXLR6LdDnPfNyR4JO3ALwRuvIYDskJb0mUPo+7Dcg9Yp9xFHGp/ZF28GfoFy
b7Qoy3l9Fq01B8/eynknw09l7oGn5+BxXS9i8RbOK3XzVRQ9r7G7r4XvfaR/
XuV/tTLav08ZW8Acs7cw33RfL/k5q8j8ATV/sBds1t3JeH4PLfeeby119u5K
HF+ZgyNm+VlvW+fgGTMolXoG07muXicUP7/LS64pil/BXtHiptweV2UrZ2+o
jFd9h7qWdxV1hsZjZTyHx+376D6evoYd4abF96u4mv0Faj1+Wb4r+l748J0M
zptz8iw1daY8vP+D8++qjLf2yol8+bLG6IVeF3XzxHRVx5erJY5FS/+9jMlz
/mu5dbKnLbcDIjUffd1Omo5X+9jaWmVy7HSGizg8y9lzULV8nM53Q89LTV+G
8zb0fd34/z/OM8a/5oPKxBWWH//tztO8by3rd+Ob9CM+33QSXSeu0Wvd4xXG
tyHW6FyS+t3K+Xa8Fs/kt2eMFz2PJec05jE/PvNx270RDrvy/oj8ehrX9h8u
2gO7t8jusA+GmOukxueN+RNdeL8JW/n2anxe+uZclXNaqcm1V87TMrNu3JR+
+PIxwmff1cx6F8N3L/tNCH+E3vtPavqGZTlfSamjV333r7zuQ+/bBwEzTpLe
LUSbYwVIyipEKDG+5erzCCFOhm64jAgW9152Hi4TjqP16fsI23cL/uuvIXT3
Tfhvy4f/5lxEErvaZhQifHcuAjbmwH/VJTQYvAf1hx9EizWX4Ds3HQGLzxPb
D6Ne3xXwn5WG6L03Eb6ZXmf1Rbj9sAc+k1PQdEkORuSVYj2x9ssbJViU9xjf
33gOn8UX0GJ6GnE7G/7jjyKcbJHQhRlod+wOup55gFZ783j9vP8Msi2mnUCz
sYfhPy2F+/Y7HL2FbhdLEbmBuE+PCZqRguDZabzvTIupqYjadwe/nS/GRHq/
P4v+H2XvHV9VmbV/M6OIkDg+7zMzKiODYgEpoUsnQEJ6IYQaSOjFzihiF7uo
WMCOCqj03nsNJEASSiAhvffee7t+a5e77XPCPO8f9+fs08/ZKd/7WuVazfp7
jztRSLzNwODV4Xh6bQRcj2Tqn9WN9hi9XzuKJ57bj5G0Xxi+MRYjdiahD+1t
ur96Ev3XRmEUnZvhu1LhQ/rc+2YVRp8owDDaN4w5WQDnE7kYto/2RtEVGHMo
HU+tjsAIOj9jaDkfzcZY4vuo7fFwPZmFybQ/8L1eiYnHUvEk7ZP+PvpFo3fe
Tg0ey8135jF7C+eVOvs7eN1yb5y5km6ep3De0NfzhTY39bmYXyPdx/P0Ij/P
9wgDBOflmj2bnL2V83J/vVSf5yh54ypxfM78uVI+3+KFL3vqOJmrn+C6Os9e
9c9lcyjt7flVVgu+yteV26zPkfr9Od/7WvcRci2l1N+r7A1mK48xPIPk/1es
v1eKEWjXBy7Vl0Nfs19O6jPiNQAsNsT/T0qefpYYPp9zw/W9qM3jtXp8ro1t
nX27nH/IouNtPHFsZ9Dasl6aXyNp+45KzN7gt96vr3NezKzj+l32w2H+Of/2
0rl3z78n6bl6rVfPiMt7cpZ3lPzt1Hp6TyluLzG9m1e7Op5x/h4rz61s5/Po
vEU/PI/bG3Nq2G3a/5kODiNwf88AvHE2FutKmvFZTB4+vpap973/Wg68fvoW
OnQeqc+m1TjUqYe/Rc9LcfonLMxnnH9ystD0bPa6PJfOMqNO+/92z6Nar/7T
+OfguVgZnqSvB+hYy+V3fMTfYDvT8Wz+o+IbzWpoWaxejtuL/hZRh8d0uair
V2bdMJ3P/v7YY3iO3vjbYb0qDvLfjuJ/K2ruu8j+t4zzj5vxETszbToxr/v7
h+Lvzq9i6DcRev2XphuDSff6XiDtvDuRdHwaxvxxE4O/i4Lz4XTSoUVwDy/G
COK6MzF+/NkijD5bgrGhJRhJXBx7poj4VYkZOY0YvjsV3d4Nh8/RPEw6VQCP
6GqM2pWIx148iKe/j8I44rXH+UJMPFOI0dsSMfCzcAz7LhL9t6Tht5w6nCfW
Pk97jrXJdVh4owLOh3LgdYbe85drGPNdBK0r8CJ9Hni9Sp/dOimUdPeeJHjT
PsNlaxzctfk1xEr3AymYHlWMqVFl9NhKuO5IwJhvr2D01+Fw3ZlImr0YY/dk
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
fdvy01aTW7S0WRfgKOUNhC6fJX5WPPY+m9dO6h51jOXS7TLflb4K6XsYt0v1
eP2C9Fy8nusgzjvoHGc6hnntzDK88bRYPtf2LF9vqb1XZtnYannbmD3LzZu9
w9b5tO1xnvPcjq5/UJ5vY88PT6q353NtVE3P4/bSHFpd0z9ssr6rqeF1T3rh
iaPfpvvbenCm6z303f11bxyjB8+2pr6jGb/vxLW9HKu3XP+3YD3T7/fY0/FW
xps6Xva4u/cR6Zh72Bs98h3uHY4nfV/G6vgirAxPFpy/aOr60Hh95szzOy/i
rofccVc3T/ucZ3H6djjP/4fZLAvnmQcem1vTS7BeO9biUFpuvsNfhuFh0u/P
77mEVbfzsSa1TPfbfe9Ssn75a0kzlh2I1PdeHbv5qT30fYSed1D0keqPJ8+t
YR64jPOitkZoAtGLz/IFwgebzZLk/qVWTX+HmnudC1bO/+1p/O+QOZj+5UUs
PJ4Gn4Ra+BKPl0XQubhZiJXnM7D8Sj5eOZ2OicfyMP50MfqeqMWk9FYEp7Vg
fmILnktvwYt0fSldfy6/Da6RzTrjXK4Ro+LrMD60CGOIya7n8+ERXqT78Az8
+go8wsowfkscei/ZBRetX/znaAwn5nueKcJGYuyKxCrMyazHolIg4FodJoeW
Iji6Gktjy+G1IxGT9iUjgJjotTEagaS1A47nYNrFIsy9XYs5MdVYkNSAoMsl
CDiRi2n0GSbtTYLnT5H6c7R9waywfCxNqcP0SyWYcrkCU2Ia8FIT4EP7nJ/S
avFJdiMxPBP9l5+A255kDP3kPAa+fRLeF4sxelcaBn51Re+hn3AmF+NpfzHm
ZD586H3d6TM6X63H0PONmJ6snRM6N6l0ScxfRJdBdM6m5bZi5LVmDDxcAdeT
BZhC+xZtTu5/wnKxJjwbb8fSfiaiGN70WaZHFmPOthT0nPwB7U8Hq5x/zOqP
Y69vXp7FKHmiKTV4wdz/Tp01L2loJ4uWN293ZPH4gfMsrJd1uqzLWW2eynr5
cbw3n9XnWWffSPV5jnLOXs7bOzFdz2L5Us8d530I57yjlKfXe+7seeWb3pa6
nw6fcR/MtT3np43WlvQ/19LyEr384j3tMNoaf2fXpefZ6nj2GKbzg8WxvG/g
NXlBBtt1LT/HOO7HOB8keN+XeeeyWP5M/bH6kvvrbDR8e6xnuXqT7+bi9Xg6
3+/E+QmC8Va/HGsvfVc5X2/lvJqTV3Lzipe90Pb6da1Xjml4PTdvxukZ5znj
Tc7r/ncaV9zbycvL8Xqpxt4O25Xj7rbLNi8vxee7C7ZbZ9HJMXuN9X/Vzs0/
XYiJEfguqxpvnrttE7tfV9wMl1d/QIeOT6OTJWZvLMb4AEteXu6ls2h5NpPO
quVZLJ/731nm1LFeOvrd0nx3hy/6HD/k1vJ9CYtBvB0ah3VFjfB5/w/SUhNg
nV2n9Mf0FRqee1NZcnKij57l6KX/CTxuL/ro5Z46BzZvks2v1ufQ2/bRd+Y1
9xLre9iP3Xe4fxj+PigY89ZF4vWjKXgvIg8/RuXg0JUMbIsvxZrIXHwamYd3
w3KwmO73uVoLp9AWTLzagndJ+36Q24JPaH1JLPuipBVvZLYiSNP3xH4tTj3h
Wi2G7M+F8+lCjD+ViyEb4uAdVqh714w7nAs3rZ7v64sYRtz31Or2P72AQOL5
lvJWfFzXhIUlTZhBe4XJNxr0uPrsc9mYHlqMJanNCKJ9wyTaP0w9koFg0vlT
iPOBR9IRuD8Fi+JqEXQ2D5MPpGLyoXQEhZVg5hm6fjQLU07nYyFp5Lk3azD1
eBYWRZdiDl2fFFGL+XmNmFvWgD8rmvAlfa8Rm5Mw9oebcN2dgsFvHYO71q93
rBAupOG9z+Zg3EGtDyEZruElGLA9E2NJn0+41QC3uGZMpX3PwvgWfFTcis+L
WvB5YStWZrfgw7IWfY809GILBoc1wetcCV49k4EPrxfj49As/Bpfjl20x9oQ
lYc1Ufl480w6XjiQhSd830KHzoPUGrzH2qm1/29et31lLT9b0vKmtuWz4iQt
b43Z97c9Fqyfr2pza2yf1ebL+XlF31vz9RbPHZn3PKYg+elY+u8Mxs9RdT2r
1esrz7OXevA5+0MU9jLmO1qO+X6prxoDYLfzx0lsF7F6dd6O8tx+gs3yz0th
uzSblz/WyXiMQz/2eDM2wGL3rL6wn4g5GD359D9G+13Qtbzw3hNxiCCjJ7if
qUG065q2173yg2DMrZlhX9PrsXu5Bk9mvZSbZ5x/yqgvETPoA++s5znn7Xjm
yDPn2/XNkXzxlD46d94vr3Be98nzMOrs9Dy8h5hbJ+Xdtfy8zHoej9di91qM
X3+8XGcn5+jt1Nzp3nosPi/zncXtTb4To+8xWS4z3rgu6ffu1li9tNgcOu2+
x4zZNI+OW4ovSbd/S6zXZtFose9Po3Pwaxlpmq3ncdcDbnp+3uC7P9fxjPP6
8eMBUH1wRE6ex+x7WuP1gbCJ1z8px+wZ55mnvbE6PhqAjj0C8NyuMKyOKzD2
JBLrtTjEF6TztR58TUt3fHQyrH54zOvSwWS0g8J+NTbPYma2ml7us7fH+Zlc
zyvzbOQZtVa/HHua3jKntoPj03hw2Hy8vCceX55Ow5YrmQiPzUN0WglCsyqw
Ob4EX8eU4Bti/atn0uAc1YyJ19sw62YL3slswY/E4/UlLdhCP98NFcT6ola8
ltcKz6tNGBPdAreYOgw9XIQR+3NIyxdj1C7SxVq93f40BFwqhteFUrgTM51/
vQGf0HK4rLuJuaEl+KkNeDa3AQtymzA3qxlzExsxJ6kF0yOq4LEnB/MiyhBy
OgcT3z8J99f3Ywbxegrpds8fIjGTjp9JacKCaGL3plh4rY9G0KVyTKa9zISX
dsJ33VUsvl6ByccL4HeqhL5LLeYmNSGE3mNhQStmpzXg06pWfNUIjPstHi6b
UzHxQDZcfrsGj7Ml8Asvhd+FfL0ub+DPNzHxXD5ctLwDfa5hp8vgHF1P56kF
80i7v0X7n+/p3GytMs7TLxXGfmhxHO2F6BwOi2iF87kqfHoxE6tJw38bXYQj
9LcTmVqO6ORSHIspxC9Xi/HyH5E61//yD2epBk/NzXeWavBs+unk3LyND16w
hfOyD56F8zrr5+sxeFEDL3HehutSXF7h/AK1Fs/aoyfF++WcvejNE7Pv5Bo9
VdvPsdX4smeu2YNncD5YzeM7qT33TO87yvX50gxco35R3gsEK+xWNboaU7+P
z85VHy/iBWL/4MDnD8icD+E+fw5sHyFx3lF5T8F5B7luz7w07ptp9s7PNbS7
qfcdpKXr+37SvkDfGwSbfQ3Bpo6fbmh+m/55Nr/uDrH7XjLfGfNlf/t28vMP
urSj611Vzne15upZDb7MeQvr5Xl0rNdO8rsR82skDW/W1mkxeD0Or9fjeZiX
mp+dn1F7r8yr8TTj9h5Cy3fz0mfSKLV3/7awvruk67ub8+7a64fvLl/3tc3J
y3F8ZdasH2l0P90fp/u4JXhxTzg+iEjTY99aH9uUz7fSOSCu/I3+TxGTBdv9
bTlv0e/8ksXsnwiUcvRSDZ5ce2epwROL+d4Zx3952Bf3DwjGa6du4pMbWUqu
gS1tv6J9h65jnkGHrj5QZkZa++rk/lWpBs9B0vzW2TZKXz3vzxFxe8WDj8Xt
25lF39muX86kdmru6edx72A86voSPj6ViXVhGdh9Mw+xuZUoq2lCVnk9TmVW
4oe4MvyUUIoXw3Ix/EId/G61YTkx7NOMFmwihl1qbMP1pjYcrGvD98T5VxJa
MJU0vXdaK0ZcqMGIY0UYtiMDnheK4HY6V6/dH/1ngh6zDzidhcmktaeeyYb3
0Ry4bEjGi6StvwDgfqgYIVEVeIV4OzeT+EuPWxJTiwXhhQjeeRtBO+Ix9cfL
8N9wC8HhZfD5KgyzT+Zh3iVi96E0LIwoxcLr1fD59gqm7krCLNo/eK86i+nr
ryF4XxLmHEun+yuxMKocQfS4xcXAMtq3eO8rwLPE+s9bAO/tWXDfl4NJ9Lmn
nM2lz1oM791xxPhkjNqSiNFbEuB5sRBjD9G5OZiHocdKMTKqHpPT2xBC+5z3
slrwZ1UbSLYjoqENJ2h9nUf8T2/BAjpPo6LaMPJ8DT6+kos1saVYn1SOuMpG
FFfWo7i6AWF0/vdnt2HS8nXo8Nd++t5MnTdvf3bNf+e8NWZvzc0zNsp985Ke
Z5yXc/Uy5+3xWq6rH7jAXLLun29hP5uDZ/XeEb156kxba9+9xHobH70QJXYv
dLrUi6d46Ml++TL/BUd5b540917htVOw8l6O/ezsA5zUxxt1dXLuPYTHHxws
z7VZ0t7DYLhgOee7E6vNY7fNMm7TYvbmcxxY/b1cJ8D+x/VjvX1mTl+/Phdd
+pkzb+3W3wlPPHtantfi9Zpisn6Kfvzf8/NyTn6CtNTYfUeF9fZ67VjsfqKp
1+XYPbvN09Dveh+8h+mL56HE6WU9r/TMaYz/l6f5GE9T03vZqbfzUjhvsN4a
r5eWEqs3WW8y/Z5HDO7bsL67r5hHY621f1SeU6Nd+umc1/7ndOpBrO+izYpz
xUMjFuDfzkvwP/1mEk/otr9PMBjP8/EBSm5e57y2rIy3yc1LvXSWfnnhG2Nq
eSvnWazbZL6mz7X++hf3XdZ7BTT9bqPnSecvP3pd/3/Z8ZHJUr39LK7nmW+l
8KG07bPh90ua3sFGy7MaG8nrXt5PmHkDJUfPOS+xXub84xLnpZk2Wp63Q6eB
6On7Oj49n4dfLqbjYHQeEnIqUVHVgOyiGoRlVWJDWjV+SKnEM6cyMDy0FpNi
gZdTWrAmpwW7ifNxrUAOcfkAHX9LXHubGLaI7nOObsVwYtjoY4UYvY/0MHHc
R8vPb44nPZ8F10234fpzFPy33ETAhQLMTmrEfOLum2WNeL2sDXMu1eDZhGrM
I0087XIJZh7NRMj1KryU1YbgIxkIIl4/F9+IuWHlmLU1Dksvl2LJ9RpMIwbP
J/0efDwXs+k9n4muwdzdiZh9jI6TgEXHMzGFdP9zsbV4NqkBM6MqMf1QKoKu
VWBpdjMWR1fR+zbj7eo2PJ9SgyUZjZgaXQ3//Unw2nhdr/ubuFub3ZcJ96Pp
8LpYhBHb0zH6UD5GnijFkIuNmEKc/w+dg5V0nn4vbEUU7YWy6RxdJM6vK6Rz
pOXqE1sw8gYw5Hg5PozMx4/ptdieXoWU4joU1xDr6WdwuaAeu2Ir8e8xS9Ch
4wDj52bhvNo3LzjPY1hybt7GB8+q5+UaPFZnb+h5RyVuL3FWqb23l3MXOl7h
vcb5Aer9vKfeovP5HsLM17Nae/GZ5Dy95KnD5+EILwDh9TfH5LI1Vm/HQ4/7
6M6xZb6TmtuX+W2rz4XfvnLsJO8Z2PUQfl3od/OY9T/KPJdvY4/nt88WcX9Z
18v5Bp33QUYfHYvZS3l9Bxbzl+L8jkrtXpDQ9nq8IESP/+vX5To8Tefb6Plp
dvU8471N3L6nHc53tdbXW1h/J20v5+hlr3vujyNq83S28xi9FMd/2DYfb8N7
k9v6PkFjvZbD12bU6XPqPCx63csmZs/m0Si98vY4/4h0yWL3NjqeuM5j96Zm
t9NLd6/EeX3R/51Oj9FtxPq7aG+j+eHoc+f+4ULv42vJxUsa3lyddN5PFpyX
15MBwtu2p6X2Tj+WZ8urvfOc9b1U3rO5NR26OMP5P9/hx/w6tRdQy8/T+rmw
AW5v/oIOjuNFfpPX21v9rIMUzqv8VmvxeOye9dj3NvcDzJtK8rRkvjld5Jp7
PmPvTrV4ao7+Xoum7+AwFP8a8wzeOJiCtWdSsS08EwdSShGeW4WouELsuVmA
jfmN+OpmMebsTYJvVBX8opvxbHwrVhO/NlW04niNoVe3FLfiozRiGN0+K7kF
Qy+1YvTFGow5VgDnwzkYsyMVky7kw+dsPlz3ZcLzz5vw3hIDn1+vwnP9TfjH
1GMpMf3n1lasqQGWns7BlOPZmFUKBO1NwMzz+QghWC4LK8Tcc0WYdb4Ycw+m
0+Py8SKx+tVCIHh3MrE9HwsTWhF8oRrT/0zAczeq8Gom8FxoERbTCjmShdlX
KvH82TwsjSzFNNqkzN4eg+AzOZiW2Iygfal4J7Mevza14YvmVoSkNcLreA68
foiAD31mry2xcN96GxP2ZSFA8w06kYPRuzMw5nA+Rp0swdCwBky80YYXC1rw
Ju17vifeH61txcn6NuyvacUPdM5ey2zB9Fut8NDq7k8WYvnJTKwrasFvieU4
daMAN9LLcbygBseyG/DNgVjc/Yjm6TDG5LzIzRt5eX/uCy3743Sx1trLnvZy
bIlxwYkxRu2bV2P2EucHijp63k/PeGytw+Pa3cJwmfUD57XzXLUuX9XxYsnM
t+X8PLUm34nV3smsZeyWavBt/PXmSM+dY4fRIm8vNDrz6rEwX/Lotcb2xWvK
l+I1HNi+zClExOf5nEHxWg6WYwd5XyfX5sn39V9kfH+bmv7ZEPV47D6T7/2C
eP0d76/Tlh4zMF5Lnl+jxu0lvve2cL7XVKHlewb+F87LfXUuEvf/r3F8ezNq
JX884vXd3XxoeRl85163ck7eXY+3sxp8rvFNLd/R9LzraNbT63sAjdGPBPDH
2HjfKHF6K+vb0fSP+IgaPJnzSqze5DrtMVidXadH1V66Toz/GjselY7ZMrV9
J9MLR7/k/nf+qqZ/PEDR8oLzqpe9Wl8vZmtzpnNtP1XS9xZN30vKz5t1eFrd
/V8e8MQz2y9gfUWb3v/3QUQqPrmRjd/KW7F0Wyju6mrURirzpeVaPNmT2uKH
x2fQst45rufNWTdSrZ6DyXplPkZv0UvfhdUBSpy3xu6FB3BA+173jPP/O0rf
My/ZEIlVx1Lx/Ykk/BKVjT9jCrA9MgfrTyZiXXIFPo4tw7yzOfC4VA3X6y1Y
nN2GD0mXrs5pxS/E9/VFrfieLj/Mb8Erea3wvkFa9UojxpyvhDNxftyhHIwl
zvufyELglXJM3JoI360x8N8Wi0mbbiFgTRi8aR8xObEBv9S1YCtp35ciCzHv
Cml0+hksCsvFXHr/Z2KqMO9wKhaTvp9/Jh/Tf4/FsxdL8BbtBRYcycHcbWl4
IbUeL7UAzxL3l9BeIGRzEl5KaMTrtAcJ3paImQczsPRWDeYfSCHu55GursPc
M9l45nKeHrufeyIPn5XWYR99hndLm2lfUgj/nyIQsP4a/Glf4rv9NjzoM3sf
ycSUS8UYvyMFzgeyMfZwHsaeKMGI0FqMj2xGcHIr3iDWf0Hn6eeSVqzVcvV0
nj7MpXNEtwUkA87hDfAMLccL4QVYk12PH8KysOFMGrZcK8T66AL8GV+LZT+f
Q4d/avOgXDjn77WZQxtgxrxYzH6K6o/D4/ZBatye1+AJlqh6fq6dvvl5Eufn
i9tZ3T3Lv8v5eClOf58N/y332c3Rszp+SePLXrg2/LfnnTvX0i8o9RfwnPxc
SbNbPfLtLVnzi7i/GvO3PbZlvVrXJ9/OdbyTulcQ+l3V8A7S/UzDOzhZmT/b
9rr2+6DNl9c5z2L8s9Rcfl/VF4DPx+V1+sJfX8ywC9I/p/7ZdE/PqSbTNd5P
M5hv9cKTGO/AGM85P9muT85dD41X4/QK59upv7eXs+e191INvqbhaRn1eBPN
mTbulpy8edlNrrfzFLqee9ua+Xeu7T10zmveOR3Z/Xbr6r1079x7rJreTn09
0/BGrN5XOpZj8ybbuwvd3knR71Jevocf57uV88Lzjnjew8J3OS/P4vealmd6
/kmrpmd5eQvjeR/dFEnjW+rwnpQ1PZvdzubWzNB/JzU/HI3hM9bswVvnbus9
9Fq9/azv9+t7gg5/d9frZYQHrpi97Mh97kWNvYOUm5d9bw3ey/X2weJvpvds
sDlWipbXGW8sebYO26fo30eqxWtvps29dmL3f31gnD4veOqac3hrTyKeD83G
6lOJ2HAkFu+FZeKlk2l470IWPiRduTSqGOMu1cArpRkzkpow+2Yr3tJi03kt
eOl6E15NbcE7la2YHNOKcddIy4fXwfl0KcaTvnY5mA23venwoDUtvAg+xErv
P6Ph93s0pu9OwOz9iZgXXojXqoG1xNcvm1rxdglp9zzS4RXNWJBWj9fp/hW5
zZiTUI8V4aVYdioHz0UTB2/U4oWoKjx3rgDz9qXhP7FVePFqAZbdLMdzl0qw
kHj8/MVSPB9ZieUJTXj+fAFWnMym71OJpfQeK29U4LnLRVhU3IJl5S1YQfuD
D2i/900z8I2238huRgjtLYL2J2EScd5743V40OeedCwD/idz4bIlES7E+fEH
c+F8tAijzlRg3NUmYj3tT7LpnNA+5fnoZixPasZ7tBdaEteCKbEtCExrwtjY
Zky8WImXE2vw/u0KvHQ8DcvCc/H56VT8uvcmPoxrhN/3p/GXv43U84IG531U
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
tRO/5xy39tPrvDduM3rdvUyN7mrrjWfOqO1oZb3UN8+XmZNXfHCk+nnRD+9h
9Ng9Mln1tLXm3y1L+N8Y/fFyvF4c+3K+6zF86Vips+Na3sy3P+ovMd5OrN68
7GRTcyfV3cmMf0LiPF+Sf72V65z1k6VaPAvjeV2eXH8n++PMEPPmTV0vX/JZ
Mb1FXpPn5J8Smt5B0tysxonV1Mu9dA4Kw+U4vsp5FreXa+4553tLnLf65bRT
i9fZGrvX9bwf98DVZ9b9Yyx6Lv4Noz++oM94c48FPC7UIeB6K9xIk3ueyIIv
aV/N32bk2VI4nyzCmDMl8Iitw0hi1OBD5Rgd0YAhx6vhtKsUQ3YVYNKtanic
L8LYXRlwP5KJwPO5mBlZiqDIckw7kEKaOA2zwwowN4yYSZxfGF+J+ZcLEJJZ
g/cq2vCOFkMvbcS31Q34BG1YXtKIt26WYzlp32VZTXi7DnRchfdoD7LsbC1e
vNKAr4nR7xcBK2Pr8cLPt/DaoQy8S9r9izbS5eWtWHCgBm8Sl9+NKsQbxcBr
JbRHSK3FG9dL8RbtY1Y0tmFtWys+qmjAikq6zG7GaxWtmJtSiWejSzGX9iFz
zmQh6AJ9ZuJ9MB1PPZGNoKv0ncIL4UPnafy+TIzZlwv/6CpMOFsGpy1FcNpT
qXN9dFQD+m8thktkNZyv12H4wUKMPl+B0ZeraX+QBdd9yXDVzjftmXyjSPOH
NtI5BkauvgCHJ6bgrn+OlRhvanktN/+4yM134bl5uf5uhhSzt1+DJ+rKRK0a
Z6Q8i5YzU663m29yfoGk6eVYvGXJ8XxtDdKWlfXWPjvxeDmHf5+UrxezbeV6
AatX7nyh65U5PUzHS9q+v+SlJ825v68f67+fI+X1Q1T2O9ljvZyfF3X9Nqv/
HMh5FMH4OdIyX6+/6dun98LNsewDpPi9jeaXtf4sYy7QADMv78R8+ZiHjsjH
K7O2LDl5kY+3cN7GG4/peNMrt4/praNzfaoN61XGm5zvaZ/zYln1u4sllu+q
sl471pit63dPwX1lRq2dfnpzbp2i6y099LKeF962Kut5TP6RQHPGjSf3uzH0
vI/Q9Txeb+bcFdbLjPflWp4fS4w3cvF+Sh6e19SbS2c9z8n7C85LtXf3Pu5v
y3il5s6OnmeMf3yyyvcnJquM5/dNtc95q5a36vpeEuc542cKzsv/I83/kwZb
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
Gl/cqsa3VXR7ch0+p9u+pcd9HVmOL+NrsSq+Dmvo9VddKcFrufVY0UCvTfuR
tYcz8W0F8CHtL96hfceqyDJ8WtGKV2k/8EFsBe1NaM9yLhvzSf8vT6nVe/tm
bYrGs7RHWBiWB2/ay3juSMaMq2Vw++M2xhKnPS8Uwz20CBPpXA7bkYleX9F5
PJYPF9p3DN6aSro9Gx6hBZgYXoz+P0UT5xPRf00Eeq08i75rbmFaThMW0nfv
tmA9/uIwXP9Z3dtD4rw568nIX1lr8Kx986ynTvbBU3vqjJix5HfL59jINXjz
eA5e1dELJLbPV/S9Eoe3x3CZ9zxfb4kBWPMEjPODrHX9Zm8f89vp3x7r55l8
Z5dzFc47mks+H6q/DuOxtCeQ9XY/6X7FT1+t32OPk19TvC7bM9jyX+0NlHr6
LfqfX+rfxzh2sHJeY7zmjaOzPcRgvZOYq6PMxmV5ea7fJbZzbc9i9nbm1lg9
b2XWPxWoH3eh1+nSZ4au4R3Y6sn66RjnA2w5T//H9KVreWNxXd/V6pXnYvLZ
07jktXnyTBuV80aNvRuP4fOavH+5m0tlveiz8+Te9WwundD3XirrWY8dz9P7
CE3fXdL1j/jYMJ/73bFeOpPxsoa/V+I8uy7q7qR4vVlHzzlOq5PSM+dv3map
s2c6Xtb1es2dzPhJSm6erS42a7KI2Svz6u4Ut5+uavpecg2eqeV7zZRy8zNV
xpuaiMfNzdg997k38/PKLFpLrN7WL4fl50VvncJ5eYYdvX4XXnMvfHC7KP11
Ym/T2YzddzHn2ohZv4zzQtPf9b8j8ZDba3jy+WNwJlbPrgZ8r1fC+WAWRm2L
h/O+FIz8MxZ9tflsoflwCy3Eo6+FklZNhU9sNVxCizHheC7G7E7HqD8TMHLd
Td3zbtyOFLhsjNXz2MFa31pkIUJI/07ak4qp9D4r0urxEnHy2V2xeG17LFaF
5eOVshasKGvC9/HVWH0+F1+nk16Pr8RXRU34saAVLydX4t2UKnx5MgerN2di
Len6n2pa8X12PdZVNOOH6lZ8Sxp8zc0qfJtSj+9J+/9It/9MbF+X1aD75q+m
vcCX29OxKqoYKxLL8S7p/9/rtb1ELb5IoX3CzRKsvVyM1QWNeKa2FW/HVWHl
viS8uuc2lhxMxIq4Siy5UQF/LWZB+5iF4bkICS/EnIhiBOxOxKifb9F3T8XI
X29h+LoYOoepGL0vC+NOE/MjKuBKe44nVl5G369vwD+5CaP2pKP3qksYuSMJ
I3cmY+SuVDifLKD7GjGlBui++Df8pfNQY34Nn10jcZ5p+SflvvlpSixK9cdh
Ok31TFP9bi2+9pZa+/skDS386iVtL62/8Vp8qbdO4f18lfGy9uePE89RagMG
ya+3gO8BlDm3fD4e88Y3XkPx1Rkg8Z7F9OVafM59U8tzzW+p35e1vLWWv7+F
6ZztjNshIsYg853XBqj1Ao5OUpy//xwL39VcvrwY542f/Ryjxl6K8TtIvXfG
XL7ZkPvnGOuN+iHWZ8R66Ay+C8ZPF7qe+N5FW4zvfaw9dQbr9Zg9PbdLn5m6
tjc4LzOe/p/Z4/wDGufH6ay/+yF5TVCXWTvPY/Q642W+23Je63XRGa+tbqzm
Xl4G5ztKvfL8knHerO+7R+I+r6tnml0/9uGa3uiP97Gr5ZV6O+apZ+ODY43P
+4naeuZXL7OdL3+zj87sje/RTs+cze0B6jI1fCerlmfeOGbcXtXzU4yla5ep
drT8lHYYb3DeQY7X97JcmvF6g/PyrJgZIhfO9Tzzs1e9chzkmL0d1ltr8MX8
+WC+X1Zi95z9LD9vcJ730fcWffTcL4dreskrkMfuJ9nV9Hf9Y4zeS/j4ov16
T9i0JmD03mwM/v4aRm+L0/PyGuuH/x4Lj7BCjDuQgad/i4Ur6e0RpGHHk852
Je4O//U2hn4VibE/38CEH69jwrpoeGyJR1BYkZ7Pnni5CmPDKjH3SBr+c6UA
r4Zm4XXi/OuHiJ2HUvFxYpXO3JXZjfghsRrfJZTje43h10uxljj+LTH8azr+
8kIevoqpwq/H8vBNaAm+v1WHrelN2E3ad0crsI3YuCayDr8kNWIXfZcddPtO
ep2NsfX4+nYtfjiej++uVpDGL8aXZ7LxdWYdvmtow1ri93c5dVin7TNu0Pvk
NeK1xFp8lFiDleH5eHVvPN4IzcQK+syvXMjCM2EFtF/JweiLlQi+XoHFcdXw
J12veQA5f3sNY3+8gWFrrmLw13Qed6Rh/IlcOl8pGH0oG2OP5GDQ97fgfqUc
Yw5mYujG2xh7KBNj9qdh6IYYOH11A+MuVmFyM9DjmT/wly7DTM4zT3sxt5n1
l6p19oLz1jp7/rvYT63RUtkj167NUzkv98hzrW3bP6fU4mk8HiTH7xnPF4hj
/THS43i8X3qMNS7QTv8e1/XKsajV49/Dph6faXrhrat67s1RrivegVaG22O6
k53HSj594nWt90kaX4rZc/7LnO8fouwL2l26ltf2OwtEn71Zf6/OxmOeOULT
i3554YGn/z+Sc/Kytz3jfG+D9cIXj3HeiN3rs2qeMuPzWvy+t9mPp+fqA3Qd
3y7nNS3/gEXTd5V572Lhu9VXx45HDp9nY/jaWznfkWn8boL11hi+8MG1xuzl
uL2Iz+txf03TPxpo3ucj1eHZ1/F6DN9ebb1UV8/65jpJtXdyvP5epbbe32S/
v8LzThLXbXLydjlvaEzWM2+wfbJNfp572ys19ywuL/XM87w8y9Pbidnzvjo5
J8+OZyq19o4y23vPFLFPXtckPGzU2L3Kent19ra+98FCt/eZpfrfspo9K+d7
S/NsWP6Bfz/hdS/XMSoeuKam1+LAHen33eHJADwash0u50sRQlwcT3rbaVU4
+r5/CkO+iyTGx2D8wTT43aiEPzHW41IxnL64gr6fXUG/Ty5j+M834X02D+6k
b0evicT4NREI3BGH2Scz4RJWgYAb1Zge1wKf/Tl482IGVlzKxTPbb+HdyHy8
ezlfnznzaVYdvj6fj08zGvAdcf6n4jrsos+ygfT5qqJGrC1tweb0Ovx6mth8
uxIbL5Zhy9VyrE9vwJbCVpyhx56ntauoDb8lN2NjWjOO1QJhmvd+Hd2W24I/
Umqx7WQhvrtVjW8ii7CD9i3rylqxurgJ3+XWY1d9G/6gx/8cV4EvshvwYWQZ
frxVhuX0mZ45mYUPrxbgldPpeHZPHF6jz76U2D+FzlkQ7SmcaQ/jd6EEQScy
4f7LDQz/NBzOG2Lhda4A4/emof/nkeizKgI9372A4ZsT4XO7Ht7R1fC6VkWc
j8Vg2h/1+yQUfT46j36rr8M9thZT6bM8/p99+Ov9Y3Fvdw8jDmPV8ubP2Laf
TuK8Uj9iG7NXfPB4nb2Un5f65VivvKKjFV8c49hgqVGDz/k9SK6fY49dKL2G
ba2d0ns30Mp7y31ybKG/NPvWZLrKeVGnp/QTyH0F/e3sBWS+K7Nv5T2S6NcT
vfqWxzvNsXs7ywU4OolcvKPdPYOs86XV33K9n7h0sPbbD1xkxPIl7xyu53nc
x5xNx33xLd44faU6+74S5/vKnBfxep313ANXxO27sDnzMus1/a5d156j3d8z
gC/7nB/H4/dGf904uhxn8trTiLk/ZPHSseG8q8F0G30/UdHwHbuJJffTa34k
d7P++W5yf52X4m0r1+bdo/De1PA659vR8u3peont1iV66CS2S/3xnTjbRb1d
p0f9RYyex+rvoOHt9crz2npRY88Z/0Sgbexe4/kTk+343Frn0co6firU2D2b
WWepwetlzoLr1Y6Glz1yJF3PZ8b2lv6P9ha6SXjizLbR97LXvaLxewu/KQez
5t6eX47O+d6WPnq5v46dH5br4JxXfXDv6TpB90fvHrILE4mdc4ktmh99n3dC
MeT7K3Ahdk84mA7P0HxMJNa5E4vdQwsxgjRo/8+vkF6NxLAvr2A4aVgP0qN+
h9MReCAFU05lw/1wlt4377E1AcFH0/FafAVeDs/BcwcS8PKhBLx3MQtvxVbi
1YgirI0vxyri7nekn3/JqMUm4uyGwkZ8VFKPnxIr8G1qPTYWtWBPZg1+12a+
0P1bib8bidOalr/U2oaINuAwaeCNcc3YnN2CC3R7FK0TdPufpNk35TRhZ0Y9
NpNW/yO9Gge0OEFBK/5Ioz1GcgW+Ii2/pbgZv6fV4IekGnx5rQxrYyvwye1y
LL9chI+vF2HFkUS8eDhJryFccbMUL0YUwHdHIibuSYfr1iR4HsjA5KMZ8DuQ
qnvjarn6wasuYSidJ21P1P+rKIzakQqPqAqMP5oF1zP5GH88G+OOZGH4H7Ho
++lFPPX2FbjdrMI0+uxP0b7gnge90elhV6nOPsCsU5V75q25eQvn+6hxJl5r
b401W+bXKJp+oMjBqzF0a5+8iLGLPcFChfWCydpaaJujH2QnZz9wvq3et9bj
accsVs9r8I3voc+zlXwAbHzzpOvKXByu9ecpDHd0ssNuizbXZ7UyDT9A3QM4
Kow38gVMj/OfhZwvsOwjbGP01nj9XDvx+zlm/d18vc5e9s1hHvhsZo2jzHam
61ktnuRpr+p4dt2cV2MuFrPXGM+W8MOT9HzvQIPz0qx5h16mvtfmeWj8f8K/
nbi9tiYYxw84E+ddcBfT8A+ZGr6rhe8PWWrweU5eWszv/l9SrL4bYzvjvru+
7jbr7u/mdfhS/F7KyxtsV/3sO8p+OMwLl8fu7eXlWc+cxPlHLazXOC553fGc
vN4j78d76+5lffOsxr6H5FffQ+TkxQqQ4vYa5ycrvLfpk5dZz3V9oPC1t/HG
YVreXL2k3jqbmL0cxxe16Wrs3uR8LzNHr9TWi3plG97b0fKKb45+bKm5t+eD
K/enSvNsHKW9gFyLZ51dZ8N52QPXZn6drd+9xnktF/LoosOYEFqG2cQWv+tl
GLc7HeP2JemcH73ptl4X7kr80vrotdvciE2uOxIw7Lc4DNyRhyFfRmH8uhsI
0nLVN8rgcyANEzfEIHBLDALW38CMXQl4Pa0er4Rm4cX98VhxKg3/OZeHVTeK
8U10EdYkVGH1pULS0pXYVtaC/cTjT/Jq8WF5I7GZdDjp+b35jThd1YqtxP8t
cTXYEV5B3G/ACdLtJ4uBs9XAofw27CZ278ltxcmyNpyi20+VA0dJ0+8kjbzr
cjn+JK7vr27F0co27CLm7yG2/5jfgLcqiP+p1dhd0oKNWjyfvsc3t4j/N0rw
9fUCvBNdhpeOpePV48l49lAS3oyvxIuhOfDdcAv+dC60S9efbiAwrAhzblbS
OUjHsA8vYPBvKei/NR+jaW/keiwHY/fR3uloNjwuFsP5YAaGkZ4fsTkBznTO
xtKeavSOTHgnVWOyzvlQdPynh15vL2t50TNvrb8TM+r0ntA+Fh88Vh8q1+Ap
cXupb97Kee6B819q4+3V1g1aKLF7gYX1C819gCWGr9TiL7Sw317cXsod9LfU
3vcXPXd6fELx57f666g+ujyXL/fkK3uBuTb32frwMs7PkTgv7wuY/g+RjuVY
gPzzYZwX/QJ28/P9Lbfx3nxRf+cgz6flul5wXvjeieVozq5xNPW87nXL4vSS
pneU4/W6Jp9my3mN772nqFpe8rHXOc90fC+h7e1x/q+c8aTridnaPLW7tPlz
D0q5+q52avC7Wnlvj/OS373M+W7uEvtNbd/NQ1lWznfkffPCt76j2Wtn1NvR
sdZjp81T5R549vS8Vpcv+uPVJfGd5eFZfb1+3fDCuVfJz5uMf1TwXtTbW+L1
cr3dY5OFb73UV6ew/onJqp5nOv5JO7V4jOWKz6119nw7nJf98J6SOc90/Eye
q1f1u6hl4td7z+T/Pxl/5WPhgS/n4UVdnexvK2ru5NvN+9jfFavFYz737ebo
VQ9cq9+9vdh9xwfH0Xebhu7PnYX31Tq8RWwJSqvFiK2pGLj6AgZ9fQmupNFd
SJ9O2JcKl8MZcCUWjVgXDZctcaTzSzDkSAXcdqZg6jG6j27z2JOMeWeyEXwk
DZO+v4IZe5PwwuVCLNkcjTeuFeHNsBy8dDoby0nzr75agJ9y67H2ZjnWRBRj
Q2oNDtQDuzJqsJH4vpXYvqOoCScLm7A/qRbHcptwkI53RlXibE49zuc34Whe
Mw4WteFkfgsOFxHjSbcfrmjBceL9wQy6jXh/Pq8J5+h1jsVVY0d8DU7QXmJf
Uh2Ok6Y/WNKMnbkN+IPWnylVOFDegh10/w/E9bVXS/F9UhW+S6vCyvPZWBZa
gGVHU/FmZAFeOJyMZ/YlYMHlYvh/F4FJ9N1DzuVi6pEMjNsUD++9qQg4kIKh
23Ix/FwD3PbTefvlJsbuSsGYHSmYcCgbbqfzMWprIp7+7RacPruAIXRexxwp
xIKyBjxLP4serxxCB4eRxpw6cy4Eq2NhfxPyvPkuTMs/ZUfL97XG7aU+7/6y
hjTj9jLzZA8cmeXt1s9bYvmDTJbbaHG2b1hoq+Nl3g+UHmNlPNsLyJyXvfDl
/LzMdatfr8J8C7stel/J3Stz8e78XEem8S11fjaxfyf5tY3rcq2gPC/YYPhc
wfL+7XCe9c2bvXT2Zt7wejwbxgeJeL2p5R2ZpteXzPjpkr6XOM8ZP1VfQseb
rO9tidvbLCM/r72GlfParI6/ahpeY31XLQfvbhzT/zejj97if2+3387qk2fm
5ZXFdL3Q7/zY1PVcy/+bLv9tXHaUZ9h0E3xnPjkduZ73ErzvMcX0zfHSZ+Ha
ZT1xvqPGe6svzqN+EutNluvH/lL9ncx1a8x+kmA857zWM2fJwfcQuXhD0xtL
qbnjbJc1vR3O85552RfHXszeDuvlebQ2fnhqrb3wvJd66HrLzLfDfR6zl3Q9
1/iqt621l577RPN8vGC8UttnV88brNe/C68bFP11ou5eit0rM+m1n50v7v7n
WPzP4Hno9lI4pt1uxQZii/epPDz25kUM+uIixmyOgduJbEw8lAa3Y5kY+sMN
uB/TeuTTMPSrCIz6JQbTSSdPI76NI/0+YVcyvH6NRsCv1zEnNB+LjqdjSVgB
Qoj18368jGUHEvBefAXePJeNlWfS8UVkPn7OrMXa66X4NqoU23LqcLi2DduJ
rZtSqrE9vgpbSdueJL19MrMep5LrEUp6+3x5M86R5g/Na8D5tHocIV1+qIT2
A+W0H7hVg0PJtThRSryvJN7Tc8JyGnA2pQ5n6fGhxPHzuc04nliLU7SPOEys
3xtTga0JlfiT3vdAQSP2V7XiF9p7rI0owU8pNfg+uRLvn07Dm6cz8NbVIrx9
owiLN17DrA3XaU+TgyUnMjD3bC6m07ny/voK3LYmYNQftA/akYTp0ZXwpv3Q
oE8jMPi763A9moNx+zMx+PtoTDicBZfjOaTvs9D/izD0+/Qyur8ZhcUZ1fiU
fhYPP78dHe4ZbM6uMfW8VLfCZ9bIdfb6stTZy3F7G87LnJlryyspL3+fNH/G
fu+bnT46mfODrLp8gcRwi65X4gIsJqC+Bs//2/ToS565/VXei9m6C2z2L3aZ
b29GjuKlaxv3V3P3oo5P4bwlzu9o3Q/InLcX53eaa8t1vqw9dlYtv8CMxYs5
dw7mrBtWg2fV8XofnTnXxph1M5Nz3rGvquUdrDH7PtOMZYfzRh0e47wWt1fr
621Y/6Rtfl7T8n99yBV/7epGGt7V1PVGHF/1zLGwXpltI8+ym2ir6x82VkfG
eT6LlnFeOmbzZ2ndzXjfTc7Ve6m8VzzsvQzfPLker728vBK/95P87/wM1ls8
7pjPneinE7pd9sDp1EOtq+8ksV7X9T0E5zsret645DV2spZ/oj0tP0VfqheO
tfZO8rm1qbefauG8nJuXau2l5WDOf+1iw3cRz3dspw5PYTLztpN9bfsI1lv7
6K01+aJuz7zd0qPf5akgy5zaGWp/XS+zl57X41li948bml7j/D/GvYLHX7kM
r5uN+J7Y8kpRA57elox+753FuJ1JcDueBb/zeRi7PwO9NqfD9Uwh3A9mYMLu
VF3He+9JxSTiW0BYIXy2xMP3+6vw1XxjdifrffHPRZVg7v5kLN0UjeCdCVh+
IRefx5TivbMZ+Ir0/G+k53+Oq8JPN8qxJb1W19P7s2qxO7Uae4m7h+MrEVrU
SGxuwDliekRFG641ABdTanGZ+H+a+H2K2Hy4ug3705pxhth+JKsJ+0jfn65p
xfH4WoQVNuEy8fwyvcb1FiAstwlnUutwvpgutb0Fvcee5CrsS6/BQXqvXYWN
2BBXiZ+iy/FbVj1+TCXO077kwyt5+Cy+HM+cyMTcTTGYvyVG5/zymErMP5UD
t42x8N0YA4+1dA5oP+QXXgJvOm8uG+Npr5SNcXu0eEgWBh4owFMbUuByhPZQ
J3Mx/nA2Bqy+goFfR2Ic7QneqWvR/fYfXvI7cX6Q0SPxuL+I2T8h9dIp3jiS
llfm0Mo1ofKcEykWzHWk1SNnvqJ/76zdZe5aOD9oIezH4BnjF9gec6YvkC4X
4n7ztWxqAgdIn0P205N67QTnLWy/k763x/r/E+eFNne0LK7XFW8+C+Ot9f+W
GT0ibi8xv7+F/7wmL9icV7MEbEaO4nkv9dXJWp7X3LE5djrvGeeZRw7ztTV9
cdplvOSNwzk/RdL0JuefCrTDelPP2+M86fe/PjSRNP14Q9uzXL20xPz5CZzn
HbtaYvfKLDurlpeZ726zeF7+YRazN+L0dyus9xT6Xc7XM4/b7kLX69x/dIrk
myN75Fjq7iTW36PU1bfHeX8Rv++h5t6VOfI9LHX1j1v0/GMiFi+0vKWW/vF2
YvZPWDlvJ15vM5tOilVzHW/rhyd8cdT8PKvFE5xnvfGW3Dyr0+sjmKt45Vi5
L/XMKTNr+kq87xts0f1sjyB87uX9g1F3b/lMsgeuXHfPZwDYydObcfsH3N/C
E69EwC+2WdeQS4pb4HW1Gm6HUuFyKANupDVH7E7BjIuF+K20BXOulML9Sgl8
Qwt1zo9bfxsTdyRj8t5UvZd81t4UeG1NxHzS8Yv3JWPRtttYEVmE5y4XY9H+
FKzYdkvn/Je3SvDdzRL8nleP3zPr8Btp6h10uY8Yf7yoCWeJwWeJuadJ74cX
NiCytBnXiOHRtA+4WdKMW7UtuJ5bhzBi8/WsOlxoBfbkA+ergRPlwOE64Gp5
Iy6l1SCCXvNWWSNuas+n594k/kfR610paUJoZg3OavsFeq8z9NqHc+qxK6OW
tH01/kyvw++0D/g5sRKrrxbim5QqrDyVjuc23cKSU9l45XopnjuZieDfb+G5
0DzMPJYF3z/jMftsHqadyoX75iSM254K598T4LqP7osqh/vlcryXUIcP0usx
bHc6JhzJguvJfDjvToP7uTx4xrbg+aoWvEI/i0d0PT/E8DGUY/ZPMs5PNfU8
66WzxOx729HyjPPcT3WOLecVT/gFxvWB88xeuTvl5tU6Ovu1egulHjo5Hm9n
KfsDse63eexClfPWGTiS3ld4zuMUtj0F9vlupzZffpwlV2/w13icwnnGdbt6
Xc0BMD8f62fR6/aUWjs1329Tm6exXPe4XWDW2oWIWXhKXn6WTQ2emFHL5tNp
cfuZ0hwbmfNGz1wXznnzOs/JG710jr0NHc+97LmeD7TD+QCu5dvV83rsfrzO
eP36g+M577mO11j/oKzbrbqeMd5FZb0N821n2dzN/e5ZXt6T++0xbd+xu5g9
L7zwhKbvaPri6Jdsjh3L01tr8LpL+fjuspa3w/cecl29v2B9D2suXl2d7lRX
b17v/Jih6TtLml5h+h1y8voxu845H2jhvMz/O/XRS711T1n0PO+rk1cQvzQ0
vdRjZ3cJvjv2kerxpHyo6nlr8cFl9/ez6i5Jz7O6PDa7ro8afxA9dpZeej7L
L9DC+kk6O7T9bFf/T/DU++nwTzDmvy9Ob8LQrbmYTGyend6ACbuS0PvnW5gX
Wab3qS3PqIf79Qq47kjWY9Deh7LguT4WHr/FInBXChaE5mMh6eDFobmYuzkW
z2yOwQzi38vExI8j8/HGkRS8dSAJaxLKsSG7Dr/cLsfWggZsTqvFXmLsQWL2
UeLy2eJGnMuvR3hZMyLLmnCzvg0xxOcYYnMc7QFSmoDbRfWISatCTHYtorRY
fm0rQkvbiNdtCKPH3iqoxy26X1uJVc1I1l4jvxExFS2IbaR9QKXB+vBS2lMU
GKw/RPuCA3kNer5gZ2ETNhLbf44rxy/0WT4Oz8Gr22/j7dOZ+Ii4HxJejFk7
k7CQtH3w1ngsvlKMBRGlCDqeDY8N8XD7hfZA6+Pheb4YYzYlw+1YDnxv12I7
ncdfChsxeHsGnt4QBy96nSkJ1XA5XoCn95XjlZpmXc8/sfICOjiONjxvmTc0
y8s/KWl5pWfeXH3E76QaKxLza0Q+mF3ayTMPkHxt7frYWGvi7ffa2XK7Hf63
x3vLa9xv8p4zf4B0aWW9NA/HOkNXMH+e3lNuq+PtXLe7bDW44Po8cTlAsN7R
pv6P8d4SK1B6+eeI17Xs0RytjO8n+97PNT1uJf88PqfeynVT1zPGO82SNPxM
/dJRitvznrq+LCc/jWt5jfGOfSTGs5743sbsGlGDZ+V8IORYfZcnJ/FlW4dn
9NQJzgvec01v5bzMe8Z8G97LPvfq6sh76EXc/u5uEuv15SlpeBbHZzV3Ikev
9NaxebOsf77HVJ3dHZX5NSbnua438vBC49vjvD/vnzNm0k0yZ9WIertOZsye
5+cfE/X1naysN2vsOef1JfXGPyFpe1Zbb9XyTzI9H6jHnw0/Vzt9dU/a0fTW
+jt9mex7yvCPU3xuWV/dU7ZxfF6Xp+U7LV45fCa8hfeit07yvGVcV+L4ou/O
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
/uc3wt6qnvFbXwl7fvcrYe8H7w+z1ft5d/X9Xx3n6hb+TWhpe7pw+SXybx70
+t6poLN0ODfPuhLrs6zj4jwd4/1pq9tvO21wzvTfDYZiT/wxfPPI80u83eB+
dXmY+/Zuzg5uRx/essjphxjnzyd+b2b7GMeHzgFun5M5AuH0JZ8ezuD569u9
X185OmK2yc81l88aru+x3/omwJsH85CdmJlj8nLmq/vjz3Uh75KH3XS6q9Dx
+H7V7MVjT9U5YPFdeHw/cHjG9j6fY38iZXJ19iK+u+IMvC2Ud5vq8ej21+Za
fq1ivsd64fIFXs+6fTOcX8m6/T49rtxn/Pe1OTuottWq4S9i3R5n6Nc4nAc/
XsL7NQfyLP26o8LpZbc8eu5MFh7wevDaJ5wXrD/qsH4MuLyfofP4PyY7anRu
3uE8avUbxy3Ob6bLmzM2yXmA8x/Z3TXI6QtZeFvq/Xmv2zcczmt/flp4c+cW
xfu0a1m89qzfKw7jrjk7E++ybqV3qlmT6sObk/k9v4+effd6DlLG+Zr/HnbW
Rj7/1GueF7a/5VthOkNsuLeqn3gghEMf+l4Y//MQpr4cwsmvh3DDnSH8THXn
2+4P4UMPhVBBYqigMNxV1Teqqk4TwoeqG36ruv+W6vH/4vYQXvmZXK/7Qgiv
rW57430h/EaFo/815OIM+tsiBof616OF2/6uvn5QuC1+Fp+o6v1V/X7I7/l3
qrqlOn947d0h/OIdIbzqcyG87C8qXP5s9fNV1995Twh/8J0QPlK9+TvoNe6m
14vXf726/2XV5/fM6vM8VX22E9XxWPUa+9///bC/ep0peuwHqlr1it8LLU8e
yh7U7uPyb7rRA3q9eOw5v8nq9Q3OaGBOvxU8eCYDD7T7bYpBqt0XfPTkeeti
nG/mly955s190NOXuTun/afbLwDOA48XjAc+T+cHfB4g+/MY04fOKc4bD4LT
55HDbwcOX5u3pxw+x9M9xzf9e6fvC+6XvH1b4RzM8Xr243V6Th/7M9vP5++V
MD2X5fPgu3P7azQXh/Nwppvw+UmL9biPDnV72kHreXzeSztOO+czzmdOfxRw
nv32hXz7qxjPqU9/ZaFol10uxfx6j570edDxW2v9+X05L2elZt/LTnqTn8O7
bCLWXy/aPXP6RThf5z14ibcfor3yB8lbN55wfzF57hev5X206rcXfE/c/ogW
a/XrxuB2h/PGb2e9d0Ws56zbDaWcHNboCc8R5zePS0/ecvncg19i/Hg+C89n
4JU895p7a3r0ot9jj77gw2vqwZs2vN7k3vfa/JtO058nTt8/D+fPyOXdbluY
rdOd9NOSj6dYPwl5uNinh5y86ncQ/V3xb+6VU78afuzn/134hTf8u3D+db8W
1r7k1jDwwpvD9he9NWy/6W1hqKp/9OK3hWtf+vYw+rK3h/OvfHt46evfEX7u
V/5teO4vvzM8/xdvDc9+zS1h4edvCdMvf2sYf+lbw+hLbg57b3pLrhffHA68
6M3h4AveFA797FvCser5x3/u5jD9ireG+ep55157a/jJ6vjcX7o1/LPX3Rp+
5rW3hOdU9ezqdV/4+lvDi3751vC8170jXf7Zql5C9XPx+Dq6/s+rx8XnV897
QVUvjrf9cr7/56ji4+LtL3p9/j7xNW/65+8Iz60uP7t6Dz/9mreH5/1i9fzq
evz+N1Tv6XR1+9zPvz2Mv+zmcPwVbwtjL3trOPCC6md54ZvDvupn23PTzVW9
JeyrfsbRn3tbmHj528KpV7893Fg9P/4cz68+p+dVn9Nrf+Wd4bnVax1/xS1h
18tvCT9RfZY7XnJL2PbiW8LWn3176Hvh20LvTbeEza/6tfDC6vfw7Df++/DD
E68MrVfus1pWN+j1VXXWuHzB/9k/H+rzdH5HXTOMP2O0b5t7ew7wH7X2Ql++
WX8e83DS9QuK8cPwGMb5VDRbN1TAeOnZk7bfTGeQGX/q2w8VOL349uAIz7G+
fs3hsx599jtYvo5Y3rlN5+wF5/1s/lbW8k8bPi/zdX5nXcT49Lu8QNhe5/KY
dau75THzbla4vJ2howw83E/ncb4XNXzeMc/7anBenmboexjnj9PumojxoNdv
PiJVm5+vMDrl4Znam/LtUz6e1G49rijk42EmXkm7B/2+FTV7xnzQ6q0vL/P5
Ns7F8zN2vNNG+vSHhctnTD+cL8fcnLVH8n1rFefboEdfnKtbR/i+PvL5McL6
sTqvb7ZL3uyqGXMYz/cdr27LpT77ceDtqNnT5aQzT+r8POG/zIJ7zR531fW4
HDzyoOtcnWblCNYDzmOPPs3Suz110qMH3T5ze8Z6l4kH3ruG8KtCVg7qZZCX
I7P46OnDrPu+GZ3/izMDkp2jWKD5gNjnOJ7OAeJ83aKn/Hhoadle1bZUT3rS
YGhZNFRVdXxydfuTtuVqGaDqr6qvqt6qttCRq89d74XHxeqpanNV3VTx8qbH
qI1Updsf6/6NTR5Xenyz27vpffN7Lv3MXKWfnR8TP7etVNvyZ3vFYP6c24ZD
S2tVLYNSi6/clf6eLmFfCvN43kecsB399dZjL3uPOfusv8J4n2nPGFLDeZil
8z161O1lfq6JV74Zp/c8XTR7ujwMGn+8bZCK7xfd/qzt0TPWw2NQK+gS/QBw
mjN7TL7PGfNzduG8Xi1r76zJ5LlUrl5Nm2fMT/13wHhXmLdj8+1xjt7m4iSM
jx68gbkyzm+dhxk63TsrO+lErwcfXjNsL+F8bwnnc/ZdwvOoz285rkU4L548
1u5xpr6qS+r26L8TfM+Yn7A/ZuPGWrkv7bOTnXap9iV+bjB8xT713qHXHnfb
iHZPO+mdL8/spE94T/voJTuHvPZrckaOwXni9Ol69OKtzzN2fq5OeTzhutPu
FevHZEZ+senVOw9eYZ+8ybEH/p7wnXF+03G5Tfk79Oc3A+aT/054/2bg8R7r
jV5/oobxzGvTvqQexXizn3YLaveak9Nh8J10Uc6+72NOT5chG0+8zn4/He8L
67fYz/MtDZiZx76+zNBDBn4D+gT2XEQzenVHn99xo7N2JkNHfJOcg897b3T3
Td5dP5L23S2J+S3rD6dzhbhrRetgaK/+fbavPejqQK41VP661H53tLcvLt53
qdLHLoaKty9u8l7M7XydHyM/y0H6Wfnnxc/gsFT8jJbwZxY/P/lMj+hnvemo
zM7pTof8b3xJj+I87yyK/Rnh8X3qvatlKAvGF7i8ybk9Az1fxnn1pntPm/L6
Aof32I6Zt0Wej5r8Bb3MGv0w3TYI5wKD6ME7C336c5KLK7p98uj79wnYTt48
eS/o1R8E7AecR6yWPfeiAdT1/Ppl25sXv77n8ezPczp9J/klzQ4b2F+f5u4G
L4r/zvbmTxZwfhZwnufkZ9xlp9ljT549eMzh+xyfx/n50nOiR69P8+87ep2+
D/36pjjPPjzB/OvgCLN33KNfsTvttlNf/T7A/FiUd7MyZ94sWnWwwnEq6q/H
2/J9B+h2zL/V/TZYKb8+HTEr72Duw685SFhfwvsKszdMEJ4ftnvm19X78rVa
f8RhO+H9+qMO58u+ep9jr4UYTzgfL1dY3o4cnrX6hOvM5fk2x+WLubeFnTVG
s/d9eTc77+bmNT9+JvXkue/J+rjl8tqjlxl62VWLeO6wG3fZ9OtsnWB9n9Ne
MfPEze8V9ftafs6kztpBv16wXnz4xzLmIN773fVcFW4J5sfLEdMY12rYDzhY
PAdoUuse5+P+rmqdf6+H6j8X/9zxZzaYTrVhNGfU8w75DfyZ5oy7lPcl8/HU
i8f5EuHyJ0irnwatHvV6/rfjefw8cHncjcY9Xyicm/fzdIjfyOeN7o5+Oo/x
hfsHWau/kPF8GLg9Yz3eBpzfcHju1w+dq2fomJ5Cfq9dgPHGc8A477Pyub8v
5zxnTO++mLcnPX315WlGzxnF9dpcHmK+89pv9/N1mHnLHvu56ntdSOc2XTRL
x3OU4rEnjE84v5V68cIzvE4/ZfvzPgsPzwV8pg5oAB2C7YDzPv9WMnLYg8fz
dFyjl8B535N3c/VXeR9+dVyxE/R7v+fG7aRl/F9FM/GrDmqtjlm1sQ6nfbGx
FqU6nPbN5ToEBXtprz6gmJ+wnvGeMH8t4Xw8F1g/XmFy7rmaXfO1+XmH7eby
mOj0jPFNcd5o8x7fEecB7/kyYb1q9gUuDzhvuXyz/DuYqXsMrG8YTq9c3mA+
c3fGe/TcF/DdZt/O2sug1zdAs5c9NtQ7NVkVRg8AnIc9OJh53zDnIlM596eW
fw/9epOXp9qKzthnbt9R4vcbj9DOO8X8do9twPeV8+M5QDweSlXHzb+tKpxr
NDv3aHJ9ybqSXqE/F/6MiOtJ+zDYTp/bRt0j38EcfrNy+CW1vhT9m97C+bZT
DuNJs+9vMkc3cNL15U9SnbJ6PXu82Afu/Gd1jHfevGbzcSV93vD38+62C3Vc
Z6wfvgBYrT471ukV6/M5wNIhy+3xXKOI84nTX8j3A5dHTV/z/ewMPt8nnnvo
eaBHv1N4u5u9lzoDR8zArWflyB486MN08u926CL9jufUgzcAf2cI3xOH3zpL
WK95eJ30vIbT+fl62nFXPaaDevjx319HqmnIzWEdf0K9dqDPZ70+e+sbZmYe
PPY9hPPdzfvz6rUvYL3P0LkKZ+vZi+9215Vm6MVb73Nw9xnNvrXi/q0rOQMv
43+qNEN3mCrvk83zcEeSR76VZuOk1mVfXStq81GvX0ecPvF52l1Hl1MfX/Lt
CzjvtXvQ7C3WH6MZO9+Db4Lzm45bjN8E/J4Ks++Eywv+TxDWs9eugPNNdXud
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
ie8nL57D+ajp1/bSFfz2OEtW0+0V43GvvOTc8x5a3jsPebcN4FCYg6f6PebS
su9+LjSAl5ud85yR0z+vOA/7oG3ePfr2XBZKfB3EeNTwZRZQNfwO0fBtbh7j
ffyMW1aNhJan7a/q+tDyVK59rvbm+pE9euT64T3u+u7qSPXDXLvg8uOoHyld
/mu+xt/4Ofi99zSv9DlQ8eXa50af65XV8coD+XNeeTj9m284Dq+/N81nwH9v
4tsQHo85t9y/9ftnoRfPnH6745SmB43e83NO4y757J2ej/34YYfl/rrT7ZcN
LxDO60w8+ueXDbJur0czk+c1+2HQ7IfOuXMUPI/g8wzN0su4DVgteH0h1xAV
Xubrg/lxebYgfx/Bfa8DiIZvNfYuqKjbm+vx/C29rwXC9ZNunm5Os3GgulJp
9l0J5zO2q3e+szZT53GetfsJ58GbKPTkuZrtokXNfrSqkQLOX5uxPhbPzS/f
Feo+/J11Xo8zdpKJu6eg3edq9b68VftMD97m3u7XTLxVjteLjn/QYHzr6hKv
P2Rn63mefv1kmqlPnB7785JzS34+xHfsy+NOm/Uwb4f9evbfbeAZeTszp7h+
ArB/Ei7nSv76qtq7J2vnCDU+fwle38D+fFO8d7yecB3xXQtuE5yfDaqVIr4T
psI+G824By+e3y/bp3+bFefnVbdnX57oAbP6dxznpOmcotPgvGK97tnNPvx8
26TifW/G+/j/veWqQ6Hlyf8oXFH9jpcPnUx1Zap5W4NzVc2H5dVxebqMNZsq
3be9upxqJh2Xu+L7ltP9+tiZ/Dp8mWo53u8vb5upPR7vz9+zeo1t/P3sa9rX
zo+R58hleO+D9Sp/HtVt5rOrPtfhWKdy7TiVzitb2q8JLZ278t/ZPvw3SL8z
/28LefzAvOj0icsnvR521WwDHu+zbredcdgO/fni/Lzj6B7nkRMLfjbpxQ8X
bjO6/kLi8qmGzsOcnOoGjPVyHuA9fsMFvEetoeYf4Fpw13Nl/F6oY7to61Zj
r88pnCEvH84zuhn7Qd1rJ9472WNHPjqP8xWXTz148t91yTydy8Cr/p93eT6B
OJ/4O2I7ViknB/vxE/WqefAKOE+7axoVtjcqTt+o8L1Rw/mR8lxdwnjCdOb2
nJGT8L6w4+ZKh/Pcn6cyO25WIpcHv/0KxHrYZcP751HHL+K8Yn2bwXzeTctY
fxCwnvx68XrMrd0wmb32cVcdefet19778MY0E08wfcxi/Abb228vlfHcc/9+
3Gr2mx3/j315wPvYp2+nSj37nnicgstZk2/0eCy/9Exd7hUBn+8lvDe7QMBn
z7PJZr6O/87WfXhm1s3p92YvndlfM0/zzlig67vs20afav3iv2Juz9+Xd9z0
Wm9eB/B6o+PHnyVi/FP2hietOBxe96v/OXzmtq+EBx9+5P/deuhveN//yev+
HT7/K1/7Rvi13/rj0L/zxtCy6Cfy39he8FKyjoQZTP38t3le/y0JxoNeL7N0
pSx7nqc7Az1m33c+6/g8edRqmFngx+byBdd/R33e9eVBu1/GWD90Hubj9Xvl
Hv0FwHhX+D1wRq/4mBLO688gn8kQYrnzz0uWDngaWAMx/XvszdezdGSHLWfn
Atbb/fPzWQMYjDvm58h3bzE+76shDr8VsR10w3h9q8f5GYfx7MtDTu/zcAjb
BeNxRr6k1atenzC+Z4xw3s3Ok5Zf99tfAzo9Y/015LUj7I6a/nL23l/nevWw
z27Fbjtnt1I5fevKPaE2Vyd6PmG92UEPvXrB+kJ/3uF8wvfVzN8xJ++QcPlW
7tnHWfo0ZxdxP+r0R1IJj8d98+uAt9c8eE7Hd5p+7ssftziPnruNxws4fzz3
7dmPT5o9Z+LKuQDwfa2M2UuwD1/z1zXj7u6ycF3Sr8WfrjhvOD7sCjGz85KJ
N1vDesV5yKmHHnuDcb6Pef288njw5WGfXnWAOcfrFestrwfNgefujJYxFVrX
Hg0tbdeE3//jj/xdrot54usxvuI+nZ8YeW7F7a+luYr870vP21wfR+bkFecT
j+eSvrxm2Xd6nJfdac16zI7Pl2bTSj1ug/OFLBzR7RfqWM+6/dCC4jzr98Pn
ZWZ+KWO8q2XN8Buz9byWgD4+0e715+oyZTm7OS+C/gZ/dszr8bP0WUR1nOe9
gTpX14UzdYnvc/bdQvWYU4LzqVfvcu/szvnZfJv8rXG6vc/K6Xd8vs/j/ET1
b7KA973E5Xstl8+9d+Lwib8zxjOXZ2wfC2ZHbYnPX7WPMPwZhPewp/ZpzONZ
z98DPjzo1wvOK96befqVyOst1reCht9KGfeyo3aVw/karwetnnNz0m1xb91h
5fbSs2cvHtehnJ1TYXDb2jxf30ZYr7g+mnfWbfA76GlObz3gOh7Rs78RuD3O
z9Xm5mm+TnCc+/ITmbub/j3n6GTOz3151O0Z980OWsl31blj8S0LzlPGfQHD
1ZsOfW3s0Rf8dobbs05P2Nrp/jZbzZ6y8Ppc9dsZOznXNnN2s+TTh/MB48fX
Xn0HcHzGiw7vz6tub2n58fBTr7j5csPcE1/V1/0Vv++ozruevOaoeEE6emfl
30gn/dsRjIfsO9Hqa7o95OF4jE88kX13bh5cPHh1z3lTLi9HwHPsq9c8eM3y
8DJei24vhVjPXF6/h3jwkb8b74Dz1/kZ+2H4GYYv0M98Xnr1eecNeuis/qF+
fOth7IIsnaWiAZyzGL8Ns/NOwy670xbnMd82ZuJEvz3r9dusVh8xvxP4fCf6
7wYQ4xHnSxhPOJ80QbeH1u2X19KsO7+rpoEY3008nq6jlh+5/pKI+ZtGyv35
hNP7gLNfo7y9trMOdtnwkXH/qjLOX8G8fmUpNyfiu2r3jPMm69Z78lYfMN47
xnnx5UkdSjl66LlH333OuKeMnMjpo49u3eHM63GHDWO7x/kNFc5vKMzWoTdv
/TGL9czrS1i/CTm+m6dLfflJ19OH3bSmL++4PXvsRKuftBjPeeA8l2T21tmd
X43eqVDv0U87PPe5d7yLHnJue33N6R565N28v0bw2vJ64fGyJxJ9+6jh23k9
ydwTHq++QM/rGeufvO5Y9e9vNHzxy3ddboh74ou+rpt9aWhp7JLfneA8ZStp
5h3/3sFbX5ulA/+d9OYh/45xHnmpOxZn5zyHFzz0vW6n3Tfrhxuuf560euDy
Q1CI9YTtiPN1fd5585r69PRxKRNfzlGAuzPObz8v12tzd27ebumg1Ubsbryz
ehkyctPlQf0d4Qx94vHbEeM5t/6k8PmUmYOYT767Gt77/jz36CUTh/PspxTn
PZ+XHr3vzwPOo9+eK+J7heEZ54/pnF2atTvqsvBGm/fn0ywd4X3EbtHxqRfP
HjzBe+7Hx902ey3mU38+47vn9Xvr/fmVtk/fipn2ftbOYz3l3iqnP0T4fhD6
9IcpP29E99mtxR02hPkJ6ycS1i9eP0L75keD9du5LLyE5+y/Bw8ezttTH97w
epmpK3jqN9m5+ZxzO0Xeu3HJwm1v5r8Tbn+CjtyvP1Hn8ajjG5y3u2lVr59y
3F732lidnueaPL+3HinNo50lnLe76gzW8746yMYzmj3yepOPP1c/L8D8vL4C
3htun/sWLU87FFb8xMXLDW1PfMHX8Rt+MbS0Xau/r37MTwZ8Fx5P/Vjsyw/w
rprTRreXmbrt0JtHvb42NwaafW1+DnR88dl7nbzA4z3Oi4Zveb7gPHF06dM7
/d5w+uL3h9euzdU7L77BfvLesVaPOgD4AbvEq1DS+alnv501fZ5bxKwCuG3w
rPbkByHjXnx4J/Nx6GLOwBmwGM/9ec6zZ8xv5rdvjvMwM484b3R7xfiOmv9u
3OK84fJHFdtpXw3fbnLt3ex85PRFv33Eb8b7FbSXLnH7a4Hb+5k6zsvZI89J
u2xkd+0u8Nw7nDfZ93bWrhX207aWevRUbdibl9IM/Dbnvct5uXkPLWN8K+Xn
yS76DXkOTmfsjrg+PWbbe+9d3lOHnL6dcJ5n6PPc/TEzg8ez8AnXN0KhJz/6
60Sf12OHeO4J03GeXnT7ScF9naXHmjRYL5q9cPmpzOWlIE+G931u8Rg/7XC/
MFMH2r3h9qY/jxycOL306KH/znsiCeu5V6/F/nvL9b3WX5+705+pZc1Y0lTu
vveByw1vT3zR1/WnXxlaOnYpxle/4w7ITWQ+HzPLdS7+pO3HDzC+c58edHvc
WbPN6s61wtn5klZf21FTwtaChs4Zd7E/v2PBefIuiCYvOO85vcF+zsthPt/E
h1fz4TOu+/MPvH0hc/shf54DmD50zp77DJU+R/Y/YJae8ni/x049d+C3p/yb
NCe/3fJ4q+eftLo9X2e//Vb04wHO96tu3ylcvoTzk6DdZx7fgRy+d8LxeML5
7mMyP292z8fbxXs3pnN1mxHnR9L1pnxe+vHXEnZfn/bR6c46t8MG5+e5f1/h
dd5Zy7to0Y+3t5yP57C+hvOrXG/ez9SvBq1esnGgrmZOr1ifc+85B5/31xC3
j5m4Fd4n/X690+4B59tQz98wJrje7nT7duD0rNFnbk84Lztote/OuJ88d5vJ
Uw87a+xM3bjq9cjnNyPOO6zfojjf8J48wXn210/RnLz1nmf8Zz+e4mE941b3
iKDvznvudRf9HPTlwW9POI+76HPe/bxwdJ6ZT1kWnJeDfJ61AJeJ34BzAj/f
z5rDkoj1T/qJ8MZ3/v7lhrcnvuhr+fDp0LJyNPD8ZQfmJkpmPWM84T1m2A8A
zhOX7/T7avyuNM/jm+G86ceX/PUX9LLB9gsFTo84n/14XbKPbsH25Ie8du/6
9sjtDadfKO/HMecbeP2C0/EXyucD9DP6vnzC+CGH76DfL0X+XuD1uqMe8+xP
a/9l6IbM4+PvfbvupNWC3XTYpyfffSrqz3dtdVy+XzE+8fmBS3D5XsZ61OvH
tczummPC7ztEzz9uZugaJucW8m67R/Ix+fcK++d5dv5pkHGf/PbXKbdPWH5t
PfOWcZ49euzPT3jOO+r35R685/XI51dcitOXfHh8G/Xphdcrtks+Du26awNe
nzT8tYD163imblQ1/I0R6w8TlsOcvOHymJ3LHJ5m5SQ/96jV7ZnXM8d3++bb
eTcNX6ZZuXbXi697705AOf2eZ++oLJcv7KQFnDdZJIbTZ/zWuXk/Q8c8HvaF
yQz7Jfr0fZxND575PsV4u9OO/6aDH1Y4vffvM5+fl3OJ2m479mjTnH3q+VLF
269YMRIaa46Gr979zcsNcf/gv551078JLYuvC0vg/E/0HtboaQ9dDedZq4+F
OTnSmz8tGGJnus6WMR5x3nN5xGrRsRFjCxp9EefBdy+zdH6ezuK4xXXo5TOv
d69XzMiveQGxtw/avrxOAefpczCz8kM0d4fzC+LDP0uvU9fquTffKb35eNSZ
+aTXR1999VpJh9+me2m6AN853xg5Pev2XQOI7fGyz8fJer3y+YzznaVc+16X
aQ843+H78pif08P4foyKMd5n2hPORx0/avvxvqJuf43l9LiHPuH97sztE5Zf
pxhfnJ3fA5Xx/grJuN2fe/DM65vtueE+/Urw5NUwXmfrEsaL7/6QLc63p8Jd
N+lIGn4rYX0rz9CnXfUncrZt9OYZ3g4Ybzz2quHjbPximY8/bjR8zLlF/V52
0LEeT5q98nnP2y9VxOl7Tjicb146V2c9+InTe17vc3KA03vMl2yyPpivF6xX
z73PwkMurz12naO3Wbisq3H+vXrsZaa+pg0wt5+V8wecyzLZfRUvaGnfGdb/
fwvhfR/69OWGun+QX5+/42vhzHPekPrysZ9l+zm0jwb9dQOg3SfcP505PPP4
Acb2U1arZ+8d7k4p6faQ3Wpx/bzl92aHXBPO7HvxzTx4w3luXTEe63z9uvTp
YaYOXsfM7PlMnGGP9ZCvG+f0zaz/Qqhj/Hnh7Uupf8+fjeXy4MVP5wCI8VbD
74Q5utyfZ4w/RXk852EHHXvvQbffhl48LezP2/w7X8Dn/Q76Zjjfa3G+o/d4
xnneNc/3oW4vPjzt1dcy8NJMXfTjjefrmw6Xcf5Kh/Gs0yPeJ26/T7n9VTvr
eL+CcH0F4bxcppn6hPf7JQMn76PfZ7k8ZuesdN57ycw5QJh/0PnxgNNDj75V
evTYk+e9dsjpac/tulyJ22+cTFifNXzIvC3253G27vHumgf/3cbj6rsjPp9x
eQr20Tls756oc3jx31nPvef1ZZzHXbRxrm5S83HAh9cJs3Wd6MuTXPtpg+96
HffN21n6TuOVxhxc1daNZl/MyPNzruTDxx69eS5799m7BzoCzmD36XlJ9Pa2
PGV/aLlqJAyPPC8cPvfqcPgsVbx87lVUr9bj2Vf97VX1miPxdc++0t33Srk/
Fd5WHUcKr8OXR87517nE8wrfc+Ssfz/+vZV+Dvxc8uc3Ip9hrpHzdPn8z6d6
xuSLQ1vPdGhpvSa0V8fkqUu/N8236zQcvqDXDyiP75R+PPjvkMdLjv0Zy+Fr
M92KT2Xdnq8jZju9Xjj1guPzDuNZux8u4Tzydpy3ozn6Yc2uM7o9cnqTpQPv
0Wn6/Lq13oKZHdD+fBf5D8Wn5735Q3VOX+/Rn9GjaPnguxukDD45RztNv2PS
6mE3rXL56Ncj7z3m5Ritnrm88+DV5uq8Zo/76E5kzh7n6qIfr7q/Iz0Osu1L
M3VbjsnMvObaHwEOT777bu7NjzTH+Zpuz7N0sNMmXr6KuH3i97uI37uddcjl
TXGvfq9iftwxL7jPvF732bWKB5/xHvT6VTA/D1jPOXhtV/McHeTgrT0Mmn3k
8cztI+aPCsabbLyI9RtPZG8e6vaFPJzI3Y1+LzN0mI1TwHk/N484v3nS8vu0
k5ZqM2C66cmjXl/X7ZtjPe+wsfp9R69iPGaMqn4/oxq+9+MBzqPn3nvfzE5Z
wFrV3jEnB/bVDkDJOcCcw3qnC2A/Xs4BENdRV7Aaf7wtYscV1eff8pTrQ8uS
nbnaY12Xj0v4cpNafK2WuX5dyn6Ry4vdY2uPL9XjuR+qHb9P4bltpdd9rO9R
+BnwZ5fP4lqqnbbSZ7oreeyk4vWle0PL2uOq30gvnvBdds/Na21Vnb5TdPrT
iu8e5+WI2W1ndL67iPXEU5vN0zl+63Vww5VrWA+cG7T7ZTsKXB7784XzAMbh
ZXhOgecQpYz9Yfd+5Ln+HMVxevTa089em50fKuH82UJlfE9ZuIN61FkImp0b
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
efXYdyGnl/01GeOXVrjdZXg88vnZlNfRGGDdkPA9+u4w374v75pXvR4vH1es
Z4yPGB49eDyPF7n95lHAd9xVN6oa/uZm+fa4wwY99zhfV8J5z+135n79KsT7
XcDjCxq++OvtLvpWvryS5+sOWKxPnvqDqt/j7vkCzsssPXvx1o3AEebs1o4Y
Pp9rzPL6eF369UdCLe8WM+1NHl4J7yHrNs3djeveGs6z5720xNnzrvoJy+Mh
B0c5O+ytq3ntC/13xHSD+5nHS/WUZ+c91iuf19n5BvBa7MUbrouc3vdi0WdH
2F303gvu2z6uxfc54vZWE2gIH7e9/Hjsov3lLV37woZrnhXmnvOGcONL/v9w
44vfHG686U3p+Mx4Ga5rvQkKb3tz4XZXN73Z3n+Tf903X/r5eP9Nb2r+nOp1
nxnvv0nvf+aL6Tp+T7leuO8S9Ux+vWbv9SXu8kvs5bPP/1fhx46+MLR07Akt
Vx9PHE+4fD9r8qeCzb1jzzXk3gnvAzzHvvw2xZkux+OXIv/crphVm5tHnEd9
G3NyDB9mjX1BsNvOtSPG8+MWXOatPrd2rpB0AMB46fUv1M8lato+f+/z+hoe
/02fns8h8jkDZ93j3J7iewHn3WXdZ5MxPr/uRcH0rlrPnnH+lOPyun8YOX2X
ycop8PnI37lHzzjPuD6Qc7myPj9ZrM60g37CYvuWcYvzwudJs2f/XuTym5HD
4/GI9uQTzl/Cb7+cfPMe6690/N5k4u10WM94T+cAsW9f8fDs0yMdf6XX7veY
Xn3rqr3OZw/7aZNuvz/XKt5HR166mIMjvN7P0QP2ww6b1rUu+3bdCPTmEefz
vvk2yMOT/fOR1wvWZ5xv50zbDcdqZXz25MtbLJ57t7eGcF0wX3bXMM5jIeYj
xpf4vdPk/cx8zxTh+ZTgecJ54PKJz/egXu95PHJ5zM7R+TmvYXMmjRxNPj3y
+znAetbo50GjL+i+BuetNx/1d8b6htttj7P7jcjjn/SMMHbuF8Ij3/7u5R4l
/wf79eZ3vqvi9YfDooj1204Tjz9F+Sduzyziu5mdO1PGeeHyOi+/lLlkTbdn
rAddWnr1bjat5HMTLASMHwYNHnvorNkP17HcPA/6+8zpazi/Y8G9ZoHjN8Ny
M/9X2pV7Tr8H/OzqVXQY73V7X4TzSwXj4/e+QTV8xvrBM067P5V32Gxjn/3J
UPPhYaZ9QbMXrGds5721ssPO6vadZt885OAlf/0E9ON96U6aPHtH/XzH3Rs9
RwTfG6Ynrzy+Oc5fm7FY9tB7rL8OuL3HedhRZ3Jzsid/0aqDqZDbK593e22Y
1yes53487qcFjz3p9jn3Lu6nydp7xnbu0x+yPXrOyFtLu+eFvyvOq+e+zunb
GOMTphOP3zSdvHltuLMO9tWYcvl3Zpbe7K85Lvitu+g5E3fCYXwB5zcXvHe0
o4699rU99H73fI9yd60puG1G8d7hvMnH8b1g06O1+n3Rc4++POmVz4vnynvu
anq9mbNjjLczWMX+L+4xpedH3Gj5oetDzzU3Xm6Ye+Kr+rr5P707tHTuC+0p
/06zTLtgboqzbzrNjln21Z+uY3sJ4/1eeZmv09LMN+zTX3CeO4/1oJNDL936
6oBrS1/e6fNmrs5W5uPQ22fdXXC+CYYPeTzHx+Bsne/N43lMfl4X/MxddC7U
ZXSPsxbnh8p4vzRifHr/N5Dn/rR69QZhlw378wZPEa8/JZk5eU6evfeP4bGX
HPtZmqenx/LtEdeTz06xvpaH18uZ9nFefiIXc/rI3TkXj2bg5XmJ1+v+WYv3
DuORzyeMP1wdDxf68/8Y9slzr56x/hqL9cuhV485OW73vPbtd+Y8nIj1keNf
pbm3OVM34/sVHusl+xbyb1fDnrpVups216GE9W1rRqkO56x79ONdDX48zsmD
3BzBefLd2xk7xfmE9Zx/t46wftNk3lEbebvZVwf8XvLwkNMfB04P3F520PJ1
2jMvmG95fdLzeW+NYD3guq+Uce989uyxJ4+d4D1iPOP8lhkqnaVTDR+4Pc6I
Ga9dfXY+XU7/ZwDjvYYufXTom/ucHMDqxgD67hHj2Z990uJ+TQPQ3n579X5i
n/h33v3hyw1xT3zRV/e+54SW5aP592cwnrNsCbcT1gO+l7i8XD5b5vLQm8+3
nbe9+drsvOfuHg8BQ4F/a3+dtfsFg8uK447DN8F/5fMO4wW/HZ9Hrb/G5Zv1
7eFcZtjjvOJ61zD68NiXd1Z79kOYN2h79fl7PdPO1tV8+NyjB07v/HcyO1/z
2c+bnjx78dP5IvD3PE+n2bfGU1/bQzsZGsLjeYcNz9Gx9+4Y3R9zc/K8XN5R
x4V8HnrywuVxH+1IwvgyzhOHj/r9lajfA7dvqt/vao71K8lzz/P2FTZfIdx+
t/ruV3g+jztqr7de+7inbtWBYl+e8b6N8T7idPLYRUznnv1hwHrnuV+HmfdH
xJPH3nrR8NlrX+F5G8/Rb5rJM3frxxyH5yx7OPIuG8nN4dl6PkbOPiX4jkfZ
Y4M6fsJ49eK1A7dXbD+hs/KYjwN9+KzRY9+er2seTr69wuLI53sy1mt/vuTD
s71504vvmwk4g6aPAb+cm21rOB1dc3BLvrq5JhhPGv6AYjzOZHU2wf+WNceq
vzVnwoMPf/tyw9sTX/Q1cuE1idN3ilavOr3uozmjO+hAs+/EPBzEecAQxnjb
o3d83vTi+Qh9+GaaPWbfEOf2WC34v0Mfi+cAOCdv9P6SFi+c/mKtD1Dz9Q97
HGf/3fmURWPm/IwW4Pn8guXv/HmYbJyz2q838/OM9YzxN9BnDzk5Zn/daeX5
4rmn/jxx+szn67trZEfdtjk4H6DHpblcxPaM71nLnwp277zz3aU5OPbb+x02
x8lnl/NzUr8+eeuPudn5sbL3Tvj8kTqf31TCec6xpx30XrsXjEf9/jrF+xrG
M87jfB3x+6jDV1gcj+rHd7tpuQjn2xK+u711MD/fZubpDmleTsLxUcqsP0Le
+sOw40a99q3Yqy/q9kdSj56996rfZ16f9tRtnsn9+g1HqE9/TI4W53nvrPrt
FzOPjzifOPokcPsJxXqeoyf/fTvN0+tOm8maP09wvgf5vHrxGsjrEetNz95p
9qzbA6+3GSw+K6es19tdtLg/jrk8Zt3Pyu45M98OM/QN7Lcz/osefzIY3R7y
VfB2c04AuN+y4khY8YwnNPv/l76OP+v1oaVjb8Z03EHDl1mrL+r2Z5S7e80e
8u98Xz7fljG+U3rzfo4OPWnnC1iIPBqzbGyPXbT7HRdTWa5/od6bx1k79NzJ
979IrwUYPwwYj/x/yJ8r8PtvhvHws/G5TPU9umrnOMzjsU9/3nF4Pgc4k5+z
45mA8ecszqfbrW6fZ+qoP1/VUu7jcJ/e76nbZvs9iu8z2Ye3lfJut04Hu8MG
cL7fc3mfac8V9fpjGff7c+5txPaUe0NHg/O+R78Z9Hqj2488DpxnrGf9vjRn
d53D/ALO42Xm82aWfmfuy1f4fAVl3vJ9JaxXzR532XjNnvbZSBZeXasXfk/5
dmleHrPxmPu77JxWzLtfr5n2Mmu3HjT8uH8+8vpNFUan/BzNxlm8AfbPQ/bd
Yof3Gc+niKs7f17C9vHyvppNfg8tztQXeHz3FFUhEyfq9kbPnwymZ7+FdHun
3/PtquHjnjo7E27myfvYzzIjeG/zcepZOeqtL8zGDViO7/NxGv3E5ZHDGy0f
eD3gf2v3dHjylSPh4395x+WGtye+6OvHTrwktDzlEPTbXYYt4jznnUtWqsu2
FS+e5fJLUbsnjJcMV+7Nmwy88/UsnGG43hTnnWYveH1Ry/XurXZPlyFHx3Lx
Epf3nJ/x3uH8Dn1MF/J8773HXL9Y8Zxi+ILF92Hu0Tvf/SDO3CnPT/14xvxB
9kmcleuq13uvPfXmKw6/VHbVnNIZOpm7AD++ePDy35b6njrF967Uj58u8PkT
thDnU09+Ij+WPfhbjlIR1lNp5u0l+vK+Ny84f6g5n+cj59b7GTspmK+7EvT7
hOF0NFk5u8FvvxvOA/Ylbh/z7/g+s9PGYD1p9qsh/9Zl4rVdDdwes3HWHBZP
XvbaR/weI54/Bpg/Invp0YvHs/TqvbeF+J/ycTbPJqxPuL/hOGTcq36fb2Ne
Py5zdaLZb+Qd9N6j91g76hyvd7vqlNNP2eohDx4cbd/e594TprOeD1XMfHE5
t7XdMJDdJucE4MNjrt8o9Orr+2kJ5wdKj2mi1buq3dc/n7ChpWN32H/m1Zcb
3p74qr7+7NO3h5anVv9ne2YF3ztLOO+5PM7T1Xx4MLc9CN47vgyeO+OzN9n2
jPMO3w3eOb8b43up/85Y73vxHvOHFuxzPJ5jX95weewhIJf3Xr18e5dgvJv7
q3kLGecXAN8V45nnG5wXrD+T7088/hxxd+LziePDjL2bp9MsvFOQk6CzdP4x
MleHufZSDuN5T93AFFUznJ8IpT20koOb+vaxL08cPvnwCOO7j2XfPer2yWcP
+Xebm3D5S/L5a2wtp9wb35s3GL8TjtijJ4xfWerV73KYT9crjF509eEK7/fb
PTcpI2+fztStgn20eFnm6aBnz/we/fWckyO76DPet607mirifusa5vU6Y9cK
M3bsvathvGTk0C47h/VLNro5uo11rE/3RYxPmv0xw+XFg2d20Bf21BV31bnc
HObxhO+M9Y0eu28W5+dr2I9zdr05x70hR8hXY2/elplgM9CA02O2G+G86eeb
fHvaH1/MxAHf/UDO0MGdtfmy89x5fb6k3Qu/P5l2nbdccU141Rt//XLD3D/o
r49XGP/UgVMVzh/OGMAz8sjrjV5/2mFBQat3XL6Wgef2y9d210hGDmK78+EJ
1qHXDXT7HQt1nEcuX5u7Q25/MfF15PTiu5PjRasjyPGiOyLGu3MC778fAn9e
Sb+I39Np911cPFsvvrzz1J8njGfMN9l4rNf7+cgCzjOP59xD2X1zyvXn50IX
7bHhXXVdidPP1KprYJowP/vrOxHn+xHnUaefSPieHps8eITtPE8nOH/UlOr2
wOVrOD9Sw/klJT6/3M/SMacH/R532F0JPjyZo2vmvd9V4bX34jPuU24Ocfsr
EtbH3j3P3O1TDx7N2PEem5pub2bnkdcf1Iwcnp2/Gnl+7NePEk8/mqo1Xk79
fNejX3/EzNEb/X4DYv0Rwfp20vBrWXcyYwd59kmbn87eOtlRO2G1e5m7c/p9
LRvP7q3rMDk5UzRHD3gPuN8QTu/y7XumAeNJrxc8n5bL0q/vnZYePuO8z8cx
e2n7NPfW7q3jXSaQL+80evHF9yO2W9+8zNn3K5Zbzz0/BjR7yVTN9y2tsKRt
/YnQ8kMHwsSNrwu3/uZ7wrs/8Mnw7g9+Kh//luuPmly+1OP+pq9/2ct/hvH6
B/Exnwq/+d8/FH7qZW8NT147EVqecjDltsjeePbhSe+dPXhujq62p6ag2bv8
O4/zko8Due06O08ePMF478cD7AROL/i+g3fRNcF4X4j18PiaB2/4UjjPddFy
fePNJ/981O5rOI+lmkWX4fSq3SvOc9498/yM8V0VxqfnJjx3u22KWA9z84OQ
fwfe+87kvTyV/1/XfHjK4bvcjrouw+enQbvH/rz13uUj6fTx9rQbe1I89h1Y
wulLOI+aPWbbQqa90ewJ55v67dFzR9cjHidtHnk9afXYnzc9+t01nK9hPGI9
5OSlObuo4189krl9xHrJxb1ee/WrLLdvI+6u13U/reyodbm3PFOXvHdp7n40
433Ed8L7VOvGIPue8u8J69WPN6Y8fgNn4rE3bzZ58xDrl9QybkGz3zRFPXvs
z+Ps/IRwe7/DxvD8bov9Fuc593Yqc3vOuO/2XnzK0PHYzv34XtqJRvtsNEeH
8Z72oSWcB1+9yW9Hbx6fA8xZPx5cxix5s69uYE61djNDPycYbXaeFHg9436j
33F63G1O+v3i6r22NPamXLyWpx0OLVeOVEeuw7aeerh821MLl+X+Q/X7n1p4
7FPhsbXL7vuXXuexXvtphddM1w+V34P/+Z46omU+nxH9zEpHX08brY6jCdtb
Fu8OLesnMy6Q366T985tBSxHvR7n6fysfM1r77B9O2r2zO0xxxW4qs+1NRze
4bzT7pvivPfZeZ1+R+byy5jL07HM3xeU3w87DC/O29XLYHyzIi5vcf6cfC6c
d6uXz2ctPv5OCeMjPi+lnDzZWWf20nt9RrNvO8Gjl7k9eughI0f22KBOj1o9
7pufdhV31cTivDvozW/JXL6Ts+4T7tO8/JZxy+EF5wHju6kA5+vz8pnbLynp
9tVjmvrwsAfv9XvszeNs3ZUl7R55u8f/Es5Xx1U0Qx91+7SXPnP7PF+3t+7F
w+ycq9GX5/bWEZ9vhTn6Ntljc1jn5tdo5f48e+uPUY0lni8477x5baDdt/m9
dZHXJ6w/YvB9ifTkyWefZuInidtPmJ58O8zOLwH/vdXvSxn3xOc3U/FO2lLe
PfN66r83tnifHfjtuEcPGXiYfc/PEz9+3HFC1zslx561evXi4+75Rh/o9TRb
V/PWIa8f4Lx75e9+Jl533AGGDyjW6216ROzv7Acdv+KOHdXlxdU5TK45uNyk
embcbTP5ttrt8bH58e3m/hmtdPsslH2tNnxNfA16Xrt5T6X3MGMf698nXG7H
x8v7jLfP5ffGz+n1n8ncY3xu1X29seZTLYmZCYLrp0l/PaVzddvsLF0n+u8F
4wu5OCbL3mF80XMPPN4U+s5Ls3SuN49Zt4Lvhf48+uh9Lg7gfNLtidNnfHU4
77NvDY+Hx5pzBKvnp/78Ds/fL9jXjlzeeBMuBuPPG1acZ60+nQckjL9gMH2p
4fG85+aMxXncOUSPSfgumO7n6JXLy/6abYTzW8Ff7/k84XupMs6TVp/OASgL
d8u4YjzN0wl/N+UxPh8R55cY312pN38oHy+F8zW8v0axW3rzhT59uh+Kcm4X
ef4u2L7b3k+3pZy8VZCHG/34Vx9KeN+a+vV7czbeatxRi8U76yynj3k5Ge9B
w2eMZ689ee9aKWcn9efZox/79wnr6Zj4OmfiHVGcX2931+RMvLF83Fz9vd44
kXk9+fAir1+CHrvksz8BOO+wHvbZ4Kyd7J0v4T1m3tf8ebyvLta0lM7OTYNm
b/V7v4vW+vCma3jPON8Ref0Wx+WN7768/w3n6u2uOsb0OcqZrt8uvXs+D4Bz
gFpWjuH48+TLd/jOj9+qGCN5bO48oOTxs/fp+UUX5blJ1bJ7nH/A6A3w80AP
AvsOl/IY+vfCr9Po9z+/fV5xBpGfN4A//yn9mfBzqS438DOR+/CYZ+HjsSHZ
dqeCzs6dEi7fuc3xeeTyzfbOiuf+TL0XD3N0gtfGf+f3z6LvHHEOPGsyu+Zx
3vXnxWfv9tVgf96dFyyV8wXGeJ6jcz57k5G3oOcEsA/P4PyQngN0GW8eeu8t
zvPnIJw+fa/ck1esP5/5esL4G/LrM+a7XDyZqxs8qxze5+dRNm7W7NlHDzP0
20/K3vkuwXnqzW+bFZzXzNsZwHzAedeb5/z6zPF5V90J8tfDvDzn2m9pgvU9
ntOP6d552UU7mvfZUNW8eEnLv9RcnS/S66+i/XPLrwk1vz168YTT79ZMe4ft
eqT8W5y5Szi/R7k96/ZXk5YfeX7Mwa94fRtge+bygPXGj4e7bA7KPnrW8TO3
Z/2es3WI26+F2XuTixcx/3iF68dzVs463mVXwPr1iPWzNF9PGv4G0O8jhndP
Z9wnnF+M+I44727LvfgJna8ze+pJz++ZUGzvZr2esZ2wvhvvU49eA+fqhefj
5fp1i/+z0MufJczPVdt5ShjecH16zsTj+fnOPpirg+zbenY9nAeIP89hYn8B
t2r4dbJ+37bs/WpsBTzqPxWWMGftnbO8t8DZ26vHRM6bjnQ581fPw0uvQZwZ
eby/v8jB8fFeB5hx39e9Djy/HV6vXfQH4uDpcv5Z2nvn9LNAjo6fEf/M8Lj2
3nmD8fHYGADujli/7bTV7E010ezFZw8ee6PN1/vyCctFs0e93uXZex5vvO3g
b6ejz6tlrC7P019wmr3tzSumOj1evPce0x3vN/k5yuW7RBNAfMdePnB5Oc+5
oL579OOh914wfgHyb10mnnD606Tbw2OGQMNH7Z7n5WlmXjC+kHXbtVW5fF27
B91+QDFe+/JZq8877mZJt2d8n3A83vnukMuXOH239uEbjPGA85bTH845O8Tr
i/n2l8L6lHG7G3bVFXCeOb348RzW+zn6lZeqnIt3xSo+7sn9+phhHz10koe7
H/rz+7P3DjC+bTVk5bFmz3m3uI8e5ulwzr6VZu1buWS+TjX9iPVtFTdnvr94
nffg49666J+b0349z9fFih777knq3/NMHfTlI/ffCNn2iPmi3cORcR72zDM/
Zw+e2XnT4/v29Uw8i/PTdZzv1cu8t1ZwXvx5jO+k47usHNxHK9guej577i1u
1zhvfx3nTRYucN+6Fw/8eYDv2APg+7Q3fCrxjLbq54rZbC1POWD7zNyP9r17
09N3xc+r9b19Xxz65c1684/ntpp34BL+gNpj6T2XevFXjtif019vevtofp32
PaFlxdH0tz3xeNlHh747p9dvAx6PvdvtZ0JxXw357+r9eOfD43k6ngnzObcm
zx7Kz9CZHDzMtnE5N95nV8q3ZQ0AtXvEeY/5iMfYwzeFnF978l04S8f+gpoX
n3He6fo7su++C859ugTjn0n9gDOQiXfOaPXSk69l6uCuOrenLhVhO2K8ybvN
vL4L+/OC9QX/neD8pGJ85O7VcxtbZ0i3Hy9ifEN21jTR7Gv9+TGH81AlnOfe
fdTui/Pz2HP3GbfN9Huem2ecx/02iPMFDR+9d8zh5Yh77NCHR8eI81ePZvyO
fvzVrkcfsZ5z7aFfL3173mmDvjzKxzEavvTqHcavzby9df2YYH7Ov41z8eM5
Bydi/jrnywOsz/36yeoy8/pjSbNfwhl4G1nT9/o94/oJi/c8bydeuymoaToy
hhd22CG2E77b/bVun41o9ui9mzY4b/bYpscqf5fevcH46v9JL9es+O6Nx97j
u/TZ52W/LO61QS5f0/id987m6NR99r4Y5yOnXzp8LrSsPpZ8ebPPeUPyhGe/
uPOQ1/zkl/KeP87HFTzz/3c99J+iauadL93nL3tffb7tXe/5WHjZG389rPzx
i6Hlhw7mv+u1XjxjvpuV33ra4rzMXp0tYrzk4hTy7A2XR4+90e3ZZ++8aGZ2
7rxyecibrenvOzzOL9TxfwgeC4+3OXegvdfm5Qs9esPvbzCafxdifRN/nnoO
UcsH/316nQvB+PASxl+knrtq9YLv20nDl922zN0xt9DO1RmcR/8dYzzsou0y
vD7i+4zDeO+zdzgfe/Dxuak/j7N0nIszLliv+2iZywOn72mG84T1PYj1HuNH
s8+e9Prco2+Wk4NZttcp9uP8fOL0OwtY7/bXoX7ve/Peg7dij2r4Buthtw1l
3Uv2fcTvNTnbpm119ue1XQ29+TUHSKNnvD8oPnzF+UOC8W0uHyfze+D065xu
T8fWdezLJ90+8XjG+/HM83Ev/YZjaddNW8L6+bA49eLHdG9N4uyUhQNl99Vh
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
tF4nvL2z6c5Zh/GGvyPe8yzdWd0x7/vz4L2r7ZnH/Dvjs7/gcN1hI+C/zMcP
N8P5S+2eRT3gougCmcczv19Q7K7toy3o9ITNy/wsvdHyvbfP+wHgHEB8fDeE
rh03JN0+efqqy8t+9Ccz5rOWD3m4NgcfdtfK5bNajP0xGwfOBToHT2vu7SCf
B2Qtv2s77KIHb14DzgUajO/peXOpJ5/21khRHp7fSyvYD1q+FGbm+Hx72GXj
+X2Pn6OnSrcz5o9UGKBafnGubnnBh1fj+Xpd/PNJs99l+/TC63cH67vnPXWW
1/tZuoT9TrfPvXr25O3XSrjPtT/36RO3p7xa4vU6N38oaA4u4z7snpfzgBGZ
q5N+vNs/z9k40Wsnc3XUg28jD34b4/3GiTw/330ytHdnD156bNx1s3k6HzeS
pp/0fe+pPyF4396teM/zePF66tfHPn039+yn3Vz8tPrvMROnwmDMyZHcnC3T
9vZaLt6MqYa73OC5ec693eI0fNOnn5U+fUfvjMF368fnLD3bm1c9Xi83pIdv
fXiI08jNG+6+Wm5OzbM3H568bqL6PzUdHnz425cbBv/ef/3o+E2h5UcOW4+9
5NdjNhrO0J2tc3jA+K6CVt+Fej3157uQzw8hzl+wnB75b43TOy7v8VwwXjG7
nGl70ej1eltVTyfMf/pF4vZay3a46+DBy+cJ1mNvdAHBdpe9s4O8AL6n73J1
mctnPx/l4SS//UXi9zfmcwDBeZi7S6Uz9NqzZ90ecu3Jh6e9esD07dZvrzP0
s6Dfz9Ds3IzqAP3T5K+neXk5wmyd4fLov6Prfarh5948c/mjwc7Uec1+TPfW
eL2+e4y8d4eEw7MH75K6fcl/V8rE4dsTp9+l+O5xXrB+V537o+feYP0ewXTE
eu+/z/356wnv6biatPrVpNszZ0+cf7/07bVPT/35qzEzR3fctLEXf6168bJu
rztrF6/jy7QHh7X5jcd1ni7O0KX9dTOZ33OOXrpvIlfabXdMtf34fL+XHvJy
RcMXzx7l4W7Wo+j53SfqPXvMuo0Y3u25PfN3nbm3eXnI3UvZuIz7sw77C/p9
H+O79uQ7+lCv1520DeLyko3nPXe8k445Pe6sk103Tbi70+xr+fas2w/o7Y0K
c6IPb/afvuFyw+Df6693/PZ7Q8viXaF9wGN8IfOuNCtvLoNeX8vFAf8d75kf
ukQuDuO8ybb1WO+xr4Tzbm7OePFwj83Fwv2Qhb8D+P3T8/WlO/R5jLvC/d33
XQqvp+cmrEfw7QWdfgjPYTA/wPXowe/fxTvlI37H6xH/JROPePtw1PR53g7n
6E7l/PtBr9mfElzvrM3SzdW0e9ubp1586t2fJJ1+Mu+ZHyhgu+Ht1fl+M81e
9HrEeezLg/eOcX4z8vdCzi3vtBF8/2vifC0Dp5SJc53y+NSrd1x+ucf53WGR
6dXz3hrl9YtkZl65+xXI7+Gy9OTj/Lxgfc7DWyTz9Ptznz7h9xGajz9E3J59
eZyBewi0/bznRjF/RLk/Y/36MdHwF1OJfs+zdILhkadPEb4fVe0+ee5PEK8f
Ew6/mHfUs08f99PzjN1Gna0THx5hOmsA+fKEzcLprvvxeDd9h/jspwDXXY+e
NXyTh8s+PPXcczUK2n1DzgOmRb9vQH/engPYvXao4+cMHc3CLXFtMxM/MGe4
fsl3bz345futvp+PMQuupWNP+CcvvTl84ct3XW5I/Hv19eDDj4Tf/YM/C23V
/6MnrxwLywaBk4PvrlM0e8b5wi46xPnS7ln02G8/X/fXF3Nx3Cyd9LC999xy
eoPVPvdux4Jq+Jx1ywXcX3i49OYXrA5A/XrdiVM/T1gq/YIFwXN/TlCbu7tU
X5531BrsP094vZDuS5+9nO+ck9vy7cT75XVYz6/r9XZv3Wnoyc8Tzlv+3mWw
3uP8dOrPy576iPvkr+8aaLKXLmI6ePHKOD/ucP4Y4DzXmNPmPZ9nDg9Hzr3b
jN47xvmDj5/PM+Yj7l/l8nASp3f6/VW7mnN47O2vgB5+zYu3N3jPvfTyV+c+
vs7Ykfeecu8XrQZev+aA+vESfh/J/DzddlA1/LWQmwPcPun4sHve7LFLOD9G
83ScfcvnAeOE7yeybi976p0PL/bgkfdvyj35fH/Getb9a7m3G/0uesi9FZz3
WD/psL6+txZxvUPy7/E8ALF+Wmfttri+vd934zV+8twprs/Cddhlz7vs+mZ1
vh44vuyxZ2+d693jHF4pn73owRso4H8/Zt3b++OMV8yejV7wuJ/+2umXhtGF
10qNXKBaeE11rCrd9pomVd13no4LUHz/eX7cL1C9Jhw+/xp9jn8tfB26PgqV
rvP7vOT7+pvV4Uv9nFKvMe9jtLoejwfOvDqs/sc35sy9NeMZD3DX7FbQ6RHn
t5+p47vZVXOmkF9vebzwyZq3Hvz1yOU9ntfm6Vxf3vfVh+s4Xr8d9Hp4ruD9
pXAeewCI+05f5+/lMV45fsF/t0Px3Off6r4a0u8H4bwpfU56LtVl/Hfn9T0k
L94pzb7DGXrW7ofOpN580u0HTwnOd3kun2oWsnGy3y4/7hTN0bPH3u+syXvp
OrkH30dz8/0njAevg2bp0G+vRXo9995Fsy/hPOj13W6GLnH8w4rzmx3Ob/xr
4HwzPl/y31/ldXvnvV9OPj2D8xbvpT9vMvFYq8e8HJqtgx02ot+nfNyM7Ysg
N0ewPeXVj5FuH7NzyGvPuC49edg5T/15nbUbsXtqU43kGboK3yP3SJfX5b12
i8mzJ3geL286oT16xvqk1U8Sj2ftP3v52ktY7/bZmbzbTSckS8dy+Emdre+2
XL9DsN3ie8ZwzbsX/z378Lph3g521De21PX9Bvnx84wdZORJ9r326xH3OzA3
Dzx6GeMJe4XnE35DTm5nn2ryJq8e+H9D9tY0w3/7PMvx89+Jlup3HzNzWpZe
H1q6rs97azt97S1cx9v4uVDx9i56bKNJdV5f/158u7wGvqfr6b599e9l3o9/
v/y6zQrvLzyvAd+7Ez4n/zMv3Z9yBtv75g1md5ose7dXvtSLN348u6uGH6u9
+XO5JFvVYfwQ4nxpXt576xcs7oH+rXtnL0JefXk2XrEen+8wnDNwPd57Lj8M
mkF6b7w3FrV51Pvxfuc18F4EnpuHvbSyxwb6H+nosN/33xNXB7zP2TiUjUTe
Otbsu2ieLmJ859Ap6tXT/vl0nM+FXD7ieeTw6TEnFd/NjnnA+L5JwXrFeeby
tG+ecb6G78frPL6nmdeOe/Kwh5ZxnfV6j/GE87FXH7Nylmw82BznPXdHnf6q
ne5xOC+/G/R7xPldDufrnH4R4zzq9SvLxb159ue3rr7eePJaZb6e8J9wfpHM
2O1POfh5Fv5Y8tJLJh5471tNbg5r+XAusG4EdtKPZB/ehojZkznvPvbtmeuv
U84vs/XM3ZPGj/38o6TfM8+3Gn7eU1/fY6Mz8252Hni9maHfjFwesX5SuX3a
Pw/a/RbMySto+92I55CT4zz4iZsb/73iOfL7BmXl4Y4b07Pn2xlzIR9XZ++h
n98/qzjfb/l8fdcaagC2b2/z9uZrnD/tW5NZXt6VdVp32g0U9rPBjjbe04IV
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
L15/RI6LPdYzl5dZPM7HPWYxnjE/+e9POKxXj56dt/P6/QnD69uN/9715f2u
G8H6KcvpIQu3A2brNG/H7akt7KtrGL+95feYm5dwnbN1eK8t8/j+WeHxHU6z
5zwck5ULWC++PI/3fYrVzWbqdA+uXvdz99qnP0n+YPV/1bB+gPr5A8R3q9vb
Nk+n/fW//l/ff7lH2v6Pvh566JFw7cSLQ8sPHQhLmYcP5J/VYnoJ30/rrBz7
6mtcnfvzbmbOH2W3GeC74fCA+U29d8zhQbcv9eWR33pPuujyrNMvFPbQ+Z11
nGfjcB7x3ZTDccfL9fwAsB16AbXsO5rl85p+2XtXwnjy3mG23bDLuWNsFy3e
5eBglj3n3A4Sr2dfPXvxCfOzfh+5e8Z3yc9J2TgzweyrSVieZ+cbiOcD3oOX
dfrstef5+Xy5A3x5ScfvnTC76Uoe+5xtPxYal8L4bsi27TnSBOPtzDxjfFG3
F/zG2bnr6hy+1qNvgvtJv3+s2TrYZYd9esH16yXr9gq+Tnn2aX/NSuL1K/fn
cjjPGJ930O9PWL/oathnU9WiCvsXrcGdNrSjPnHzY+LNjxjfSp69Nub561jH
18yc7M/P+feLGetxh91G5PKco8ez9sdsL15m76Yyf/dYjztqKRu/nXNyGN95
rp5xvtv16sGDrzP3uM+uOc6r3766vMVeN3tuXAZ+A/BcdtxgD5+w3/L+nKHD
vXvEd4P1dL2O9dGjNytzdrrzFnEeM3fq83NWw/e3nzQ438AsfZnlLmE9+Nm2
5b9FMdf12a+65XLD9N/K1+1fvSf1ExZ1zzbl8OKdN9ivGn2n6cVjDg705D2f
NzN05yzGSyHWK4+XPnItF6eQYz/sMb7Uq16Qx5g+udk5V+fxywp75ExPHrX5
p1+0c/KI6ebcwJ4LyLlDgcvXeva13boO180OH/bwX5Csm1zal0ec76Q5urwj
KO+vs5k4NvOOcV731USsJ84uz+P7yEtfy8Zxu2e3Yp4t7pkH710feu9yhm1H
5PEwN58wPun444r3MkOPO+oyxjdKGG+y7HlPzYjuqSnweeTxzXH+Oovxf+Pi
3Ta7AeubFHJ20egpz56vx+MK9ePx4xTjryefPeTgci7e6v1mnl40gKsPSI/e
HhnraU990udPVMcTGc9lBn8kc/l15LtfBzvuWLunXTeJ268lzE+5OBOQlQM8
vhnWbzxG+2zIm284/bjNzNmU83I1Bw+yc2DPjcH0bszGxz69zsp3yPVJ4PJw
nfDZ5+eZ+fmaDx88eA7X5bL096kfj3P23JfvnwU8dzl6qOPz3jvU8vutjq/z
9jqHl4o0/EbNp+9m8wz+K85LD377GYP1DfbnbdP+9RXdM+GKtePhti/9/cna
6Tv4/IT1XeC3w+os4XvJa7f1NGj1ZyzGN9tDV+TvqNezVu/y673HfrCA8z4T
x/SuS75053sXLo++O8flm+E8cvViFg568S7a5+BjYDa+vncG/Pc1Tg/nNLUi
D306NzgXlg7BbJ1wee7NA84nTn9e8uqX8n55v3fWYbz10VMfPvbl0+/0Qvbb
FbPvcPcsa/Mzqt0LzsM8Xd+kw3nMrCfNXvbKg3aPmXiE9x29tKvO9OZHbaU8
HLo99eE9zh9yfB5x/kAZ500+zuPE9eWK74uq4yLB+utEfzc5eNJ/32t89YL5
ot1bH37m73vFj6d8nnfS42wdz9MTrju9n/33iu3A8dcezPr7epq5S9r8aNbs
Y++e/Hyq2Y/onB3vwVl7RObvF8teu1HS4setli9YD/N2GzzWH4fs++Og2yvO
s4a/GGbp2zcVeD1w9nbMyoE9OJ7ny0w983rg+TJbzzi/ZUr9947PL9nisX7a
aPemN7+Fd9pyNg7hvtlnZ3fcRFzvID9+Rz/06UHT7wDuXsqs10wd9O3P1TT5
Bu2obZhevdX402NonkwexzgV/7YV+vYtq46GFdf8ZPj+o49ebnj+W/saf9br
k5+wq+SzK/TiO32mrdlRQ+cGl5iTT/eVtPpBr9vb+bmi987n23qPvdlFC1q9
YCZ470oYP4QYv6C8nrPo0f9uuPzFOsbXuDwfbwicobPU4bw/j7C76MGf15TL
O/1ikGbm0xwd5tSfd1xeMV4y7CO2S88evHdmt7xi/NJB4PKQdZfzdM5m/I+9
+e18js19+WnV7QHnFeMZ5ydVt+9DrLdzdB3M6Wu9+WNwJK2+h2oL7qT1+2iB
y7NeT776JWaW7hAVXXaafRHnzTwdcnuH+Ss81kNmXrp/V6j551f87/bOZbmq
LDnD5agjSucm2p50cbgUEkhC6IIE9tTRUBRQAklIQoiLQAgJVc89cnjiiQfu
saMHHvoR/A498gN44klPHB74AXyN471y5eXPXGsLt10R5XCIiBVnn4sQRVD6
9p/555+VI3k5o9KT1wGdn/144LkfoRdPmA9eez1PuG8PnIf8e+K89ucf5959
8ttf38n76Mh798T23hDTt/McHvv0dO8Na/oJzr233BzJsM+sJzbrPD3P1Et/
/sZ20aen/XeyA4920O5zvv2u7cKTzPubqO0xR+eF21GvvfnZlz4/R9iue3F8
/d4d8OVpTl6s46NvL+6qn/fzdjEHV315icupVi9z+HofIP57r+G1fg87a3z9
/i179zBPB3bhqI4vvfmuvs+zfM5vzzk5uP+2T/N1R8SdvrI/c19+jg0gv404
f32v+fn7cfwv//pvPzWef7RfDw//gmYGrFbfzvhin7xm2+LPeeA5c34Qdfxq
pV6Pel50/KrxvbqLDmv2hccsMB53ywfOV/nuOA+MB2+8cLeYo3P5OG2chyP7
6OP9BtTund8P+V5jfBvvYVbeevCZ8bpXXvfSwQwjZ9iSlr977HvzBeeF9TAT
n2ryd6Rmf0RzLjZP9xpm5T9kvz1oeK/jYQ/dImp4PGFW/vbuuN2Dtw2H6/XE
eq7Zp7zbW7JzTvbQGuu7ev0M8vCE+evAeuO8ZOS06/kWP/3PI9N/EZieT0c4
PQqeuhH26u+DthfWfxvuC8CH5zJ0UMPjeeRY7/Pxnqiun8C6/ZXs1e9IZg7t
sn2er6+yzv9mnXfcPTP/PTF6u/TifWOsn5jeMM5zDV/r8TJ3R3186M2Thhfe
+102F3SnzQuq3yvreQeezNnFXv1XjuswdzcLuv5mrU8v3IdM+1DD7zHjLQO3
nLsrfHhub/1+1uxYn2cN34NefPTf63Ul7/7Mo7xnf3xgvGP+bdhZr9fo4Yu7
cw60pq8evWWZo2e9viw5NqD5Vw5Bd2Y+dZvPpMy4v/nb3/zUeP5Rfv37f/zn
eNj8nf/e9J5m6Lg9M5Jt18r7D2Pfjz80lhf7aaxWP7hT0e/6GGbllfE861Xk
2J+MXbZtwflKvR5m6ZzPvdgvK4w/zbl00QcnWh776nFXTXEfAD37wHlf87cz
FXlPnJfMHPQYnJTMD/V6qtmH+bqhzM8J5+9aTv0UePFI04N/fkq9d/KI9fr3
5KlPfM8aXnpinIFTZNknTz1/lvLrxZO3Hxj/CvbMlqwvavaSfXe7tme2wvlb
gfPYm4c5usT4LjJ+XnbX8P5ZeX2upueftHAe9XrMt2emf80sH9W0+H3+2rDD
Ph3useedN5XZeeB8BzPuLwX+x1l65Lzo+ZHv0+cavu2tVU/elbzfZqJhbuda
Ok+hbw9Z9zo7L9n33+cdN9d55yxl4Sb+iy8P/Xib1LPP/rvdvKtGfHmSpTuN
NXzpz29XeZ9n7bIOF9ZLT17yc2znTem/x8y8ScjNy58Jun5OdP1+i67fN20P
Pj3ifI31Re59/nx/nvV8eqTrN6rhax599e8R22HWDnm/4L14PdHxwvnbXuNH
3z3y3d8HlBl57nV51Ho95t7E3Dvg/sp7NzP85ZWdcXfm5fi3//jPPzWm/9e/
fvlnf001e6lbDKKO57y7AdTmtSYvtXvNwQH2F/V6y7pThsc5O1e/j4wHzkfG
O47B/Jj6zYHtwV9v+jnU5deC545fN03t59wKjR7Zjx4/3VMXPof76aVO4HwA
p8Bz5rzz4WHdAjU//N3cM3/9EOYRhq5Wj3tpQv6d+O/Udy/9+EpfXubkZNc8
cH3osuwx05499sT9A60FmIbnA9ei4UnHL5j/DjV8vWYv+bbM+Xms3Uef/UY+
0pNPu2bJe/e0/czxqdXyP+e3v1TqdOW58F29dqFmj3P0YY6O/HMya6d1fcm7
N23vOf8QnmNf33baqP/+SthJj3480fVXci4u5ec0bJ+4tkkZOrr3RhgPefed
a5iTA/k56ZpYvsP6/hnvuGNPnu6+eZb77py5ZzX7TeK+ZeRZr/4C+vEi55sz
OfuSuZ731vqcvJibg5n4ez4vL3De5eWxL092209yPd/zfd/V8Hui829VcvFx
jx1wvwtavner+f+NTn2mPs/gS5ZOnKkPWXqQg5/79Xnmvq/a3Obeo24v6vkh
81aZHmr8bneO7MXD/NmYAYvaXvJoU/Y6zZ0/Hl/6o0/j3/zd3//UqP4f/fqH
3/7T+OhP/oqy7NPf+xT45gaB8Xlu7oPz27XX9iX3pi3zruK1a73O9wSaWV/L
vZNdNS4HpuI9q8zQTUEevZ+fC1r+njD+xFgZ+/Kx767P4eBnoi8Psu3Vd+cO
MN7l39Z68S1+vD8Uf/2x9uaHquXDzjnoy0u+7dQaz8qnfyf6XmZ83inPfXnJ
sU1sp97Xe+b4gfbpbc+8cD/48GT/HDG/+X935V3Ow9O9s7aXLvflvc9+0DB+
4Fi/wx68Fs7jPJ3j/CboefPfZS2Ps/LPQk+e9fusafiu5N2etZe2prMv3a+w
u3Yd2Y7P+b5AfHdfhzm6mJMzwseHOV9P6gGR9Thbd6XSo8ccXMrI/T6zvTkd
4jvn4EuvnmfqskdvnRjvtPw3vK+W5+o06z5xfnqX5+6fqidP99UnPk/bLruv
NEvHTqHrHet3IBt327jclnuPzC+8eZCXI5wvMvBLT55p+obNs3FvHRxmv8/N
M/0ec3X0/YUD4rzsvpEd9VqvF7br7D1qeL/P1n0etHwP5+u59t6T/ntgt+Ti
G8Mr9f2o92teftH2Oj9Xy7l95zV+w7Spe8fjL77eGn9xdWd87/mfjp+d/mq8
0Ry3v452u+XXN0//svq+fuZT/b1in51+jeyv+xV/fb6W55vpnNh7epo/wx+/
/nPaO5N0fLe5N5qieeYPXsOvANMxu97l2IqGr8zP1XbW1ObpYhYOzszf+Wj1
+LZ5edw5q8xDzYt8xrp2ZqDslJ1yvJc6vel8/VrpybtcnKDbz+J89N4HXV/r
CTj/nfbkT43jjv+o4aW2cWz9hoLxULNHHb96xPdWouEh50D312D2je2Vp4wc
9uhbVr1xfYj7Z5dD5u0SeuybnxWLrONphv4gMz+9rkzP3B/wXrqBcj4fqdXL
qdbr54HzkI3TR8YD54nxcedsodftUD8e5+q4Zt+78bjC+fvM9ZZZuXj08/eh
rt/2uQdF/b5D/fwa2/1OeuzP2156yMgbhdo98J7ycNP7qVZ/LWXaC9/jnN33
wHjz4ndq9ftvRM/D3lqq428y63fy/LzM2vFeeurRS36OzNJPxyPZuJCDG/Jz
5HXS18T0nVCv33Wcn7xhNX3bV78HNfw99tzh/puXRQ0fX0t+QGU9evJkv82c
efS66sV/5ffbaaZOekyMT733XMfP70md/lXJ9lu460Zm8DEzF3fi+Jk7n6Vj
vXpjPfbw48wdePXcXF6Y0Yv5eJKlE3U81vahpt/n99LPuk7z5//i55t5b5s7
j/g8hsfHvOPtkX8tnrQXDnfpDb8r98XR5/DE/XnhPfx+f7A+/uLGfv6ZDnz3
HK/MzBVZ9Yftmj3yPup757mLPjybpytybePeWZwJDwx3x83RGQe93+6TZeOA
NvfMPS1YXMzJVTV+rXcfavZy3wD3B74fHx4lxw9n6vQeJ84YfHJaHjPvZC8t
eu7imQqc1548/Rs6NM5LHUAyb5x2t/y7oTC+NjNfcF5Y/zJfc849XQPvjfVR
z0fOR8YHzpP3Lmj5ee7DzyfOP2fm1+r1JeeL2fnkwZv5fH++U3jqA7fjdWR+
2+eTtifW45xd4PqohfdOywe/fdGn5+eJ4deesreO+U73Ak90vo6895KH3zx2
OC9XWX913bQ9sp5r9GmfzcR12G1HdfndvJee99RSfZ9q9ptwtuyk+v0MaHrc
b5fq+DfywWzcybSnljx5OFu36+r3yHzJwp+c3YWZO/Hbi65/Ybm4ju+1fNzM
9MnCf1/ZaXcr9Ok1U+dN1vDE8X2n5XGfnfnw33A+nt9th7q+H573hOELb+1a
e/dvssZfPFC2S23fWB5n64XjotfzPUO50z7O24VcHcf+d07bD6HOL/vbBsI8
9O1Bhkicz9PXcdbcZfTEr/kw7sPXUu77ypHTzYNl8RRCHX35sPgeRb1da/My
L3cI83Oo6w/D7yH8PvL++jNm6tpn6MI83Z2g3WMuzupJ4Nln/PVO639i/92J
9eLX4Brq9VOYL6/a2nviyn1z0XtX89edjmMNoPT1wfcCL0H53+X787IzTv8e
9PcQDW9Z9lOq7aU3ArV7ybUlTS+eu+CvT7Ug3i9L1+lrtDf/Lvvq7+CO+cj5
WK+X3HrLsnWsT5l26RDv026b1/l18N4NFtIRzu9o3b6o2c9DXx4zbtVjb6ev
nGf+g5bvKt/PZn304FX1vPbm4YRZuk7B9M8wH/v8Wr9PzH40ru2nTTzvCNcv
A+MvPwTWwy67YraO6/i8myb75nLG/cTIvPil995m6mWPTYfr99KzL7S95OVc
x548aPs0g5d22DVsvUA+PajZu2zcLZut0xr+c6ft/Z4b0/iZ5Xsu7z7X7kPu
vfj1bmDPftf0e3XfjbDd766fLLx64MkPnC9ycsV/d6vCeND5lpf3yvvvtCYP
j+zHy7V73HtjO+qtZw8z98z3HtToUdfLc5+dI1570O5L3IuXGbuiDh88d8D4
YXM9bK6HKR83nRX2ozPrdUcrPTfmqz7m/DzH2DCPlPZ9XGyuL3I+uHx+sHJE
J3Iz73VpPt880lnNZ0rz/I6Mw21cx/yb5cD6mIEjvHe++kp9vuapi6/X+O76
8vJZqckj5ytZOJh3V8t3RRYGv57LsnV63nr0XsMD70XTE4v9nJ3nfI33ZT/e
+e/ufvL1Asi+83+umpZnzjPHbeduYLzLwqnM0jnO53+r6r/j3Lsp8dyl1+5K
7v3heIg7ZmUnHTJ+GWr2oSffX/L5d4W3fgkz61nHoxefPHmJ8Tum5xd22zmv
rK/MyCvjNxrGN0cZv8Vsf2a59jpDF/NxKoxnznf5lHX7ioZH3iv/z2J6fC3u
qoH6/Sj67yuafhRZXzuSmfdt1upX81450uUuA/eJzdpdMd4L57F+32HO6y4c
zdJZh913T91MnV3brB3tuqHDmp779sj5C9ObWrPPbN/KmfdxX73W8vPsHfX8
m2tj+U5Zp6eZuxfK/kLfN9q+27a7XnU9ZOTNep0/WfC9vM7ePNthm3n/ttH4
b7SO320YLvn43fnX9Bz32mIN3++/sT11mJOHPjx97bb17P2uO8vXcX179d97
P73cH+isnWM+5uAFXb/InjyZ9WbO69fSTP1x5h7U9fUeQLW+Hcvjkbo/6/Q7
MqOUGC8HOE/3B0chT9b4OyV8T7xfzbw3zoP/fQXuRSS3FrNt3S559NN/rPvt
3H3EGadNw7fqd+n/fjTGu7x67McHf30tC0fr0UHv62ePy+x67csjS08961Hb
F/66MzR8jfWhDiAavuA89uSjvy5ynvh+AvV58defFH35/Hf0EXR99N/ZHJ2r
18teIqzRr/E8PfXmkfHvxgNgPPXXVcvH/Ls3kF0vuTis5ReZ9Ut5hg5z6vOM
PO+l48z79P6gyLfDev1zz/bqfjrR8Rt66H3V8aE3f7OSizMrffnI+cfK+irn
ZTbO9emR3/iZ5owC50PvvnMJNX3IukP//ddwHzB6EGr18TGeb7OOv8q19VR7
p7x78ec9Nn+ect5m6uOxDJ3M+7iTHn16ouk7kIGrzJ/eyjV88enRfrvn9DzP
0G/knr3qe9PwttvmudXvi1n77dCr3/W6nr13X+meepitdz370n/vNb0xfjJq
e8nQhYxc8eFPNo+T85iTm15PHD9ozhuXoSNevK7rzQPf5TXsyeseO+Q31+dF
uwPn1XcPM/X4XjVPB+r5ro6PHju8XvIZ93GvHXG4YUma7cY9eFnXc37O0ntm
eP49hfHD5Xfhuexu9zWDftqNy6ynw56mi7ST1ervfamDL1kNfrCc/ezE+bX8
+SnJ7VONjf125Pj7wH3jv7ufAE0/QMY7zle0ehvvaz67mv+OdtXFGXnMwYlz
8jAj31avr2W6rx4Httu17a9jxtd0tfL+xDMevXxFHb/OdttX4+8NCh8e6nJ8
Lt47qGPk/bL83wt5OFnnlx576cnXOf+B6vU+x/4w/ztdTTX6Y9498z738CXj
tsp48d8J47Oe7yvj5WCN/tUYZ+gGBefDjHzS74nxnJGXX9/mE7X8ttfwt2p7
6TaU9ZqNozo+sr7is58VtiPnn5zN+a9/EXgetXzkfXyt7dR2zz4wP13cUcuM
71Dd/oFq+c5lYD9p+/wesVvq7GlmbgS76mq595fNg6f9eTqg8a98rzX8Dp+J
yh57mbMTzsuh/Bzqy29ATX+Ldt1Rf534LrznOfs4Xwe8zz7+55arcwNq+Teg
fs87azUjx9XucXetr+1jXp734r8o6/iq5S0nn67n98e+p59Z372VWL/HOv2A
tb3wHzLxQ15e91bFi7dQ6nqbqYfcHOE/1+Mj23viw0fOO9bj68GTp1n2WLeP
vfmDKuclQ0f1uXCetL3X91TPV+0Ozyuc1zo/7sNZYZZzr/1nPLskvfw++d6M
+3nPK+t5vi+4KP4o5az00t+XmTfLh9XX3Px7zLJ1PvpaVk5Lzb7NT9/yOMB+
fMzBkXq99OSR/WtBs9cyckJm3sV0kPEh967genFO2GP/A8zgnXo9X+m9V316
6vM7gV78qf9edyuMh1r+FNcltC+/xjV78fDFvDvZFXDXvA5uls7tnA19Jsqy
PVJvfuL7AGboqG5PXPc1+6FyHr13ifN5Tr6vnI/9eNlLx4xfkpm6yHnU9ale
v5Nflxp/0vM4J1+r06v3DnfN8xyd1PCV8Rt1LR9r9bNBxyvnE+Mft+j5s1j9
u3C9xvhQmxfWy76aYrYONX3w4cl9QMPkL69lBmff/QPOvH/k8+5HMmv3ROv1
8t6E6Hep31/FOj7W8LlnT98vs75zzfx5HZixI19eys1Nh2bsODdHZupl59yM
aHuo489sWb9+2mt6ZTxq+hmbsXf1+9ifvyn1/Mj6F7rzrou8x7n65vRmoXcv
/Xnt0ds+HPPf4Wz9y1yjp5m5rOtx353uvcHce+H+QrnbVvjfD7pesvLUn4f+
O9eb9317zMqP3Hc78KSfr/P0b20nHXK90PJwfwDXouGL+j2+Ht5X5nMtf7Ds
6/fC+8xb861dbH5m5h67eO/CvlfMp2leSztkpS9f1NBRgzuuR1/dh7H32OFr
h6rdir7+nQrnax77Wo2+zXMXe/HVGbowJxb78XfhvfgIubgl281jX83AKfR8
9rnnfvwPquWtP39ar9cj/8M+upoPz9Xmi5696PlT0/ZSs+f+fK47nIzd/Jzs
CNB+fCXLXrJwHOdzBo7cg9muuUPdO6u9+hXQ88veY+8YDx48x/ilfaflB0uw
q0YYv7hnfI/1e/HfiY4n3u/l/XS0Xz7W6rcqfXnU89yXn0MNHzjvavUwR1fj
/A3j/GTNhzfCOjvU3kdns7z8GszHu0/8LTU9aPe0c/aSZN0+rPBdDn+esmpZ
Z195pH498+Mx6yUHF/LxJnhXve6wu/x4XHjvYZbe5u3WVcPr9776lD34OR+3
88267rDLjN9UL/7Eddtbm+4FiNWJu7TLfpO0ve68mdlknm+F/fTA+pngzZP6
veypp731kJWjfnvh+x4fX9PXDPyb1puXWn6v5terZuTtG//TIca/YV0PdXyd
p8dM3Mz3vubZ59Nlzd4F1ndhny1peZqtB56j/057+JHzoOn1694G1ovON+9e
n3Ps6XFJMm8j7wP7mf/DyHj+rD0e+NcX31WeW21f2c51+/xe83NzSRiZOf/7
a1nTF7yU2oByHPvzov+N07aHBnbSuPsF0faV+TnXj694+CC31u4vWubia7Nz
tWzbojYf5uWxLy89d5d7Bxyv9eTBu5c9dxUtj7rZMRW99ieOtdaT/wG0PLC+
YDz67cIOHPf95PnJuKjXF3l4oWYv/jv+vY3x4r2DfnzBeajXp1r92pFl3a0d
WSZu3FWD2TgpFwfm6QYwIz/kI3zvwxxdv8ivB74vWb3ec174Drpe8nBux71z
23mXjdwfEN83Wb9jTz7smSfGM/eLvrx47ddhd43V7bEv39WMHOP8ZAvnO0WG
bWS25OL99zR8J+bpjWBePtbvk/++yLd9CHx/APPuj4n16s2//JDr+pKJV8nC
1QzcSta9ZOHRThus41tuzgTU8Ceumb4vZ+vXme9bwHzbb3MBeE86Hufi5fUZ
P0/v+vQzVtMv8nTQf0/XO7rDzvXnxaunvDc/vmp6ycpF1rOu783tccZ9Yj96
85D7XMdPfjuqze/x8Xoe2S4ZuE7bB13fZdbL6WlmnrEdM/BV94MnH/15Nd/e
Z/PxhfdLxvneIuyyqZ0lyL1HlkutXnU7nyWs52e2o9YfLNnn7D4gsZ45upRP
Zi1wHuvw2G9HlkOd32oAWIcPPjt9r43pNa9fmBGIe2bbcnDEM9+q3eX6ozE+
ct7tooOe/N2gz/WEnj766qUGID15naUzn311t030w7lH20lrOv6Hse6ciz35
Wh6e8/pVegQ4L6f195rO9315uy841XuhYdGXP3Za3nNe/JAfjO86W380ru2k
w92zlJezemh8xyycoOP7MEeXZ+NCfr3unT2D8a5e7zmPe2aJ87d4Bx3P1Pfo
M2cxfsMYj1p+rtaXL+v2OC/fhbl58dlPzjwmTX92Hl4Lu0ch034U7gNqX1fs
o6vsuuE98x3ZTSczdkmrk5fu+4btT/hzct9g9wMd6dkr71N/XvT8I1e7nxgF
D95V0/fCeNpHf1U0vnjygPWo7wPnO7wLh16Xnn1iPXB+grPyvuJaft49x3vp
KU9ng3bcEfNnYs2+ru11rl7YPY277EN2Tujd2y77xHPs2TPng67vQb++52bv
+JG88gfku+vNBd/+PO64BY0vrNcM3Fe+pi81fMi906O1e9b2MIuH7/Uc6yFD
J9TszduHvXrYc6s7b9+Ctse9daLhc60evXmi5wfA7+GSZ73N3ImON95jLX8Y
7gXU786aXjQ1cf7ux4bzH43xquuR9/k14vya1e3VRyc+uxXkO2TXxvq+7ItH
7Y4751oz7o7saGb9GXPxxWx8O9+Hcdcs8tzxP/weoQ/v99eJjg+cdd67Sq3e
9cbzZ9t78r/kczr2ebllDT8yupqDd69WnweWg0dviP479NcD14eg5dV/p/l3
wneo1VMP/wRycA65Xo+cR13/bix59rqfjvvyZR7Oa6vZu72z4LsTzi+2cV7Y
bn15zcS5ve33ydOOWd4zK+wWjU/+vOeVej177+YlD2djXM+/exr68WWtXvU8
Mr456bGs238bmF3uqem0crvt/qA2Nxc5L3NzjzgH54H27skPlxhP75V8d6y/
DKy/8h3k4gHvw/660mePh2fn4bnO20nt/tpTOKl2v8FaXrLxn9mO+ut1XZ/P
M56Xy8zN2ffM+ri/dibX8i9AD/8C5uKT/54zcSEbv8jNc716qOHP+vr9pLB+
tmR9L87YUw0gzci9Zf6/YO2fvXiyx15eQ+ZHbW+ePPDpFdm25tGLPXr15kne
js7dx313b32tPtb2nSfPduPka+C78B6y8Po4W7do9wPeaw9eu8V3Tuf7Hn24
Br9evg94DzP2h+rJE84nxpOevwPsZM98OlMF5z+SDy/v+PzAzDZP/cBpdezd
R/0OnI+75pDrzmsH+t7lAgnHj0rGu7k5y2Qpc+7CvPzaZz6L2Xig35H1quHX
8MS6eGXvq2blfrJ7BanPx/sGYvoPzHrw6MW5+uL3/+Tm8cv7i1Cfd/m2zPdV
YfonX69nj4KyPXjsi9w71fBSA8i6XnKWBsz4KdhJp9for6c8+8j4t57tfIqa
Pc7KOy0v/rsXLUcycbyWpx49cj7W6hfyPQEd0e7pSB7enGTXt3E++u7WS77j
3DzreGF9nfOyS6bSS6+y/4zXVfvX5ugrR/z31INvtLvyPfjsL3umo6bvXJbz
HefZP9JT1vF9DR9999nD73mPc3Yd9OGLF4/22mxlrjudX2G9aPribLK23uM5
ug3z582gPy/sqqd8/efGeZqN34M8Heb8jLB+x2t716vPml73290MvnvW7Mr6
OeF985j4nmbm4B4g1fbzDD377rm+35sP/fqib2+sF+9dV/fVi+Z/rY/Od4/c
XwB9D9n3pO11D07gfOjr24571PXMdpm/C337wdKBr+XD3J2bvUNfHtT0B+4a
PPWJ54vGfb1X0Nfeqx8uPx4R14jziVky0ybs5Nq7efEPrT+fPNOrOGcPGT2S
a1fJri3za/lneGT7WZ76kPenerDNc7eKObYfvV5XXh8Fj32F54VfL/jw3aN5
7dCD59kZtHzw26HnXfU73i8Av+0aWB/q9XE+4GKN79EvIK9V8oBsFt60vOO8
eurLWTqXhUM9ecnKg9687JrTDCes2R96xt8BzqcDjO9Drd5xfhk4D7tmMRPH
c76F9QuWb9sTvsshHb/Nnvst8N/xrBz16re1vp85z/35uXpf3uXj3LSevHF+
vdT06rPnU+F8p+Z9C5zvBPYXdXznscPHeL8QevQ8P59Y+iX557+zr70MPXhg
fXFGULfX3NtH3LOPe27k+ol68Sauxjk7yM65Jtl4MkOP83Y5Q0e0fIf33JGe
dz78Z4UnLzJePHmZ5S9y336aawAtfXv15E2X9XvaV5uydGZ2lPWq72/uOE++
9eshLw/m7XSfHWTmZdazH58Y/zo/lx5+1av3Uuv9ou174t+T51S/h9o7aHu/
w97n5eWePefiAuvz+288+4Xjyv03Qb8D12G/rXH9ne/dI+/Ro1fj/SJ694zj
A9Txi1afHyjjzYNnj+bz0/elR8+z64lnP7t7TNz2njb0whlzE98ukp6X+abg
n3de/TArL/cCun/mUL/HwPUJoC4PnrvBSmA7evMqO2cHXKun2XjsCztWH8EJ
bJeZej1x/k68+DYf77U8zJ5J7m2Rlxdr5ujlg3q9cL3Q8qee9VjHRz/9vcj5
2I+H06rl7c/kNLvW8aEXrzV6zLY99lp+9YNpePHSC9+lxrN6qJwfxL58yrXl
bFvLwmHWLx+MsR/fx/x6ZLzsqkHO4046qde36nlk/LbpeNTy88/rnA+z8vSe
9O7nPsf5tnzbCuOB85M32uv25+f8nJ/zc37Oz/n5f3l+/X/gz3B+zs/5OT/n
5/ycnx///Pq/ANOICCs=
    "], {{0, 366}, {506, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{506, 366},
  PlotRange->{{0, 506}, {0, 366}}]], "Input"]], "Text",
 CellChangeTimes->{3.7893878325404525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8e42fb48-26f5-492e-a1f1-374a7df010bf"],

Cell[CellGroupData[{

Cell["\:5b66\:4e60\:76ee\:6807", "Section", "TentativeExample"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f53", "Subsection", "TentativeExample",ExpressionUUID->"25c20067-d5a5-4c03-883b-ff47fa3dc37e"],

Cell[CellGroupData[{

Cell["\:57fa\:672c\:5b9e\:4f53\:6846\:67b6", "Item", "TentativeExample",ExpressionUUID->"25878cda-6782-49ba-96f7-424aee14f9b7"],

Cell["\:67e5\:8be2\:5b9e\:4f53\:6570\:636e", "Item", "TentativeExample",ExpressionUUID->"64ad93a0-e0e8-4721-896a-ce3e712c54f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6570\:636e\:96c6", "Subsection",
 CellChangeTimes->{{3.776515771873722*^9, 3.776515778594734*^9}, {
  3.7765774794575233`*^9, 3.7765775017605886`*^9}, {3.7765775520261393`*^9, 
  3.7765775803962517`*^9}, {3.779797244963832*^9, 3.7797972466330547`*^9}, {
  3.789798803595317*^9, 3.7897988051731405`*^9}, {3.7897991597481213`*^9, 
  3.7897991608885217`*^9}, {3.792141686859185*^9, 3.7921416879635506`*^9}, {
  3.792141893010954*^9, 3.792141895219811*^9}, {3.792992808496008*^9, 
  3.792992809979046*^9}, {3.815931563437195*^9, 
  3.815931565774794*^9}},ExpressionUUID->"1d270db9-4b91-4420-92b4-\
29d2f598296c"],

Cell[CellGroupData[{

Cell[TextData[{
 "\:521b\:5efa ",
 StyleBox[ButtonBox["Dataset",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Dataset.html"], 
    "https://reference.wolfram.com/language/ref/Dataset.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Dataset.html"],
  FontWeight->"Bold"]
}], "Item", "TentativeExample",
 CellChangeTimes->{
  3.8110740645706263`*^9},ExpressionUUID->"bcc76229-e178-407b-bf53-\
b1678a017d95"],

Cell["\<\
\:6570\:636e\:96c6\:4e0a\:7684\:5404\:79cd\:67e5\:8be2\:64cd\:4f5c\
\>", "Item", \
"TentativeExample",ExpressionUUID->"b312a2e4-a663-4ff4-b33e-b6a71cf65922"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e987da67-27a8-472a-a5ae-092021e656f2"],

Cell["\<\
\:5b9e\:4f53
\
\>", "Title", "TentativeExample"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d7ed9e27-4dfc-41d2-87bf-66d5d0adddea"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f53\:6846\:67b6", "Section", "TentativeExample",ExpressionUUID->"72815f90-ee3b-46dd-81fc-8b9d7ec2cbf1"],

Cell["Wolfram \:8bed\:8a00\[Trademark]\:5305\:542b\:53ef\:901a\:8fc7\:5b9e\
\:4f53\:6846\:67b6\:8bbf\:95ee\:7684\:5927\:91cf\:73b0\:5b9e\:4e16\:754c\:6570\
\:636e\:ff0c\:4f8b\:5982\:ff1a", "Text", "TentativeExample",
 CellChangeTimes->{
  3.811848303677442*^9},ExpressionUUID->"b618bc2e-fc5e-485b-b71b-\
2a5c9d90f6b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{
    TemplateBox[{"\"Earth\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
      "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
     "Entity"], ",", 
    TemplateBox[{"\"average diameter\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
      "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
     "EntityProperty"]}], "]"}], " ", 
  RowBox[{"(*", " ", "\:5730\:7403\:76f4\:5f84", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.790499950520034*^9, 3.790499969350852*^9}, {
  3.7905004165241976`*^9, 3.790500423229175*^9}, {3.811848315208199*^9, 
  3.8118483206178627`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b1f1e9f4-a310-42d4-b369-11885ed68713"],

Cell[BoxData[
 TemplateBox[{
  "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8187017208628683`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"b2e1ec54-75c0-4882-8d67-1caf0108a9bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"population\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
      "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
     "EntityProperty"]}], "]"}], " ", 
  RowBox[{"(*", " ", "\:4e2d\:56fd\:4eba\:53e3", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7904997277131267`*^9, 3.790499752083822*^9}, {
  3.7904998503069334`*^9, 3.7904998527169676`*^9}, {3.790499888767952*^9, 
  3.7904999077686057`*^9}, {3.811848327739366*^9, 3.8118483335067253`*^9}, {
  3.815914764692412*^9, 3.8159148120883923`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1e266165-eced-488b-80c3-8bc116c1c984"],

Cell[BoxData[
 TemplateBox[{"1433783692", "\"people\"", "people", "\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818701725422797*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"4aa5c352-0b79-41eb-82ac-ea2b73322d3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{
    TemplateBox[{"\"benzene\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Chemical\"", ",", "\"Benzene\""}], "]"}], 
      "\"Entity[\\\"Chemical\\\", \\\"Benzene\\\"]\"", "\"chemical\""},
     "Entity"], ",", 
    TemplateBox[{"\"structure diagram\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Chemical\"", ",", "\"ColorStructureDiagram\""}], "]"}], 
      "\"EntityProperty[\\\"Chemical\\\", \\\"ColorStructureDiagram\\\"]\""},
     "EntityProperty"]}], "]"}], " ", 
  RowBox[{
  "(*", " ", "\:82ef\:7684\:5206\:5b50\:7ed3\:6784", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.790500287814782*^9, 3.790500326483964*^9}, {
   3.7905003731227407`*^9, 3.7905003739229975`*^9}, {3.7905004355447235`*^9, 
   3.7905004457452183`*^9}, 3.8118483546406937`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"eee3c74c-ac99-485d-b087-502cb3b12cec"],

Cell[BoxData[
 GraphicsBox[
  {CapForm["Round"], {}, {
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{{104.33, 284.1}, {79.33, 240.8}}, {{95.67, 289.1}, {70.67, 
      245.8}}}], 
     {RGBColor[0.4, 0.4, 0.4], 
      LineBox[{{{79.33, 240.8}, {54.33, 197.5}}, {{70.67, 245.8}, {45.67, 
       202.5}}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{100., 286.6}, {75., 329.905}}], 
     {RGBColor[0.4, 0.4, 0.4], LineBox[{{75., 329.905}, {50., 373.21}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{50., 200.}, {0., 200.}}], 
     {RGBColor[0.4, 0.4, 0.4], LineBox[{{0., 200.}, {-50., 200.}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{{50., 368.21}, {0., 368.21}}, {{50., 378.21}, {0., 
      378.21}}}], 
     {RGBColor[0.4, 0.4, 0.4], 
      LineBox[{{{0., 368.21}, {-50., 368.21}}, {{0., 378.21}, {-50., 
       378.21}}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{{-54.33, 197.5}, {-79.33, 240.8}}, {{-45.67, 202.5}, {-70.67, 
      245.8}}}], 
     {RGBColor[0.4, 0.4, 0.4], 
      LineBox[{{{-79.33, 240.8}, {-104.33, 284.1}}, {{-70.67, 245.8}, {-95.67,
        289.1}}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{-50., 373.21}, {-75., 329.905}}], 
     {RGBColor[0.4, 0.4, 0.4], LineBox[{{-75., 329.905}, {-100., 286.6}}]}}}},
  
  ImagePadding->2,
  ImageSize->72.00000000000001,
  PlotRangeClipping->False]], "Output",
 CellChangeTimes->{3.8187017282378683`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"776db471-250a-44f9-a6e0-7cf9371f14e9"]
}, Open  ]],

Cell["\:83b7\:53d6\:6570\:636e\:7684\:5de5\:4f5c\:6d41\:7a0b\:ff1a", "Text", "TentativeExample",ExpressionUUID->"4fda156f-20ed-44a1-b126-3258bcc70773"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
5dIz8qTLMgBAIoKxcV01jmTadF2n000klAz1V93IVte9lU/ieyuM3uz0XfZW
evPNu+uMrQfrsfj5KbxruXRZBgBIRCow5t09p0itTOumEF+5a302amTeSl9a
guPHjELqV6LPA83Q9qzhrRPCO96WLumyDACQiFBgdHoCxRZ+7O3x7bpGbwvU
yVATKWJk3ipewYclmJ3XURk2L/Whlm9L85E97JxLE9u/VbosAwAkIhIVu2Hc
GJP91SP9TboT1Jybn+qZVO62jLcjqucj3qlSjay/2Wkpn5hsLAb7w64vOvur
KofaXvHSHHtNGb9q521m6LWh48vOqZb9gSjNmNP10inVuJMuywAAiUhExaTR
FEvzU5NeMG+6g0DSdnxzQ/r2irZyckFvrBK7MbX0hI9xX+F57uy+TXPbX71m
ozOSxL20be2vfa662wLN6VySI1WkyzIAQCLlh0RvNGPMmCLvp4ydeJrRRHyn
yL67iNltr0w3wkNBYseELSZsUlF3Cze+0q56ELMrPjeyS7osAwAkUn5I9LoE
o2aXMOzf0FjrNaPCBlHgG0C3OdaYmvTbjI0prf8wOCb+zm7Vd8Z0s+tdV+pV
D252MhMApcsyAEAi5YfEBLNzmnsZA3u05eW4SZHhPYtfGLo6uzbnvI9b7N+y
611+6lVjdgAABVF+SEwxu8wv3ZackR7u8Az3PVehb6kGMLvuiJfePzN0Y+pm
l3jVmB0AQEGUHxITIrxxRMrSfIIRbDtDHCf9sR/FjsfIbXYR+85rdklXzTs7
AICCKD8kJo0Y9AYuajMOwnPKNIVnhReu3GYXcaUcZpd61YzGBAAoiPJD4kHi
WzZ/zUkfr4USGZnpj+fX8dcVSRnGmdUvukaWOuLFS6p3jDcLr5vapjOVwB1k
st1cUhbmDXcJW6HmR4lXrdni6vpiRv/K8eqzcEmXZQCARESiYmJMbi4tmzon
o/7V1ObWabjWM4TZxcdGmtp34V/3pvstuoMw3Rnurn8pu1zST6iO7M3Xmwj5
XcJVH3ivAvvNr9fFCioAACaEzG64tTFXDLsCqRMKLgtZDbE2JgCAGcHgPOAq
/aphZXTJlaWszZ+aSnJt7a6kyzIAQCKi8XmQ0RS9fdyWtrV1KbdX5pYrsHup
YE46+yWxnx0AQALSUdqZi513JefuisrBy69G9ldaNVVFdnuXLssAAImIR0hU
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
d5XHdb76nNZczfj/hw5TcQ==
    "], {{0, 541}, {591, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{481.8333333333346, Automatic},
  ImageSizeRaw->{591, 541},
  PlotRange->{{0, 591}, {0, 
   541}}]], "Input",ExpressionUUID->"c0295fa5-f9c1-42b4-bb82-c2310db237d4"]], \
"Text",
 CellChangeTimes->{
  3.790500488086051*^9, {3.790500547619759*^9, 3.790500552692564*^9}, {
   3.7905007380334225`*^9, 3.790500742713545*^9}, {3.790500914798479*^9, 
   3.790500918633568*^9}, {3.792836448536285*^9, 
   3.792836465203068*^9}},ExpressionUUID->"30599e4e-99aa-4466-810c-\
762105610854"],

Cell[CellGroupData[{

Cell[TextData[{
 "\:4f7f\:7528 ",
 StyleBox[ButtonBox["Entity",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Entity.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Entity.html"],
  FontWeight->"Bold"],
 " \:521b\:5efa\:5b9e\:4f53."
}], "ItemNumbered", "TentativeExample",
 CellChangeTimes->{{3.81184837839542*^9, 3.811848379015663*^9}, {
  3.811848409463826*^9, 
  3.811848410296069*^9}},ExpressionUUID->"9c807d67-f6ce-4f03-8745-\
475048cf47c8"],

Cell[TextData[{
 "\:4f7f\:7528 ",
 StyleBox[ButtonBox["EntityProperty",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/EntityProperty.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/EntityProperty.html"],
  FontWeight->"Bold"],
 " \:521b\:5efa\:5c5e\:6027."
}], "ItemNumbered", "TentativeExample",
 CellChangeTimes->{{3.8118483893799267`*^9, 
  3.8118484132593803`*^9}},ExpressionUUID->"861d5e31-43fa-4f8b-8b19-\
8c96689e831a"],

Cell[TextData[{
 "\:4f7f\:7528 ",
 StyleBox[ButtonBox["EntityValue",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/EntityValue.html"], None},
  
  ButtonNote->"https://reference.wolfram.com/language/ref/EntityValue.html"],
  FontWeight->"Bold"],
 " \:83b7\:53d6\:5b9e\:4f53\:7684\:5c5e\:6027\:503c."
}], "ItemNumbered", "TentativeExample",
 CellChangeTimes->{{3.8118484013171253`*^9, 
  3.8118484162830887`*^9}},ExpressionUUID->"20a5a19d-bc31-4bf0-b5eb-\
cb32bf8ae4d2"]
}, Open  ]],

Cell[TextData[StyleBox["\:5730\:7403\:7684\:76f4\:5f84\:ff1a",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7905007572988873`*^9, 3.7905007612790766`*^9}, {
  3.81184842780267*^9, 
  3.811848433828946*^9}},ExpressionUUID->"2137eb34-a978-4570-b48b-\
4d7ec996022d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<Planet\>\"", ",", "\"\<Earth\>\""}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Entity", "[", 
    RowBox[{
     RowBox[{"<", "\:5b9e\:4f53\:7c7b\:578b", ">"}], ",", " ", 
     RowBox[{"<", "\:5b9e\:4f53\:540d\:79f0", ">"}]}], "]"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.790500769406813*^9, 3.7905007856551113`*^9}, {
  3.7905018603336306`*^9, 3.790501897648218*^9}, {3.8118484494370947`*^9, 
  3.811848459005628*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e111147a-8f24-4c56-8735-35726855f467"],

Cell[BoxData[
 TemplateBox[{"\"Earth\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
   "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.81870211242635*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"5942219e-768a-4e5c-9f96-f3adb5c4a919"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<Planet\>\"", ",", "\"\<Nonsense\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.818702215467636*^9, 3.818702227726815*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"81f8dc00-e60c-40c6-8bee-788746dfb486"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\<\"Planet\"\>", ",", "\<\"Nonsense\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.8187022307285633`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"c50c5fac-8196-4925-9f5b-368f14e3a796"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityProperty", "[", 
   RowBox[{"\"\<Planet\>\"", ",", "\"\<Diameter\>\""}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"EntityProperty", "[", 
    RowBox[{
     RowBox[{"<", "\:5b9e\:4f53\:7c7b\:578b", ">"}], ",", " ", 
     RowBox[{"<", "\:5c5e\:6027\:540d\:79f0", ">"}]}], "]"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.790500788545023*^9, 3.790500806865523*^9}, {
  3.7905018890143733`*^9, 3.7905019095876393`*^9}, {3.811848464031555*^9, 
  3.811848472663126*^9}, {3.81591465437562*^9, 3.8159146854646606`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"53e6b2f1-9334-4d5c-aae2-00678dfaaf12"],

Cell[BoxData[
 TemplateBox[{"\"average diameter\"", 
   RowBox[{"EntityProperty", "[", 
     RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
   "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
  "EntityProperty"]], "Output",
 CellChangeTimes->{3.8187021455410223`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"faf1bbe0-7110-4706-b6d4-33e7172ea1cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"Earth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"average diameter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.818702167454008*^9, 3.818702187497464*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d89e243b-362a-4b72-af98-b15d0ec29eb6"],

Cell[BoxData[
 TemplateBox[{
  "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818702190999188*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0ae82c43-e842-4f83-8dd4-6e87948f74e7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{
    TemplateBox[{"\"Earth\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
      "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
     "Entity"], ",", 
    TemplateBox[{"\"average diameter\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
      "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
     "EntityProperty"]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{
     RowBox[{"<", "\:5b9e\:4f53", ">"}], ",", " ", 
     RowBox[{"<", "\:5c5e\:6027", ">"}]}], "]"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.790500809636016*^9, 3.790500821056222*^9}, {
  3.7905019037771473`*^9, 3.790501922315771*^9}, {3.8118484823740997`*^9, 
  3.811848486824553*^9}},ExpressionUUID->"b2f48a12-b3b5-4619-8452-\
3baaee33ce90"],

Cell[TextData[StyleBox["\:4e2d\:56fd\:4eba\:53e3\:ff1a",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.790500957269699*^9, 3.790500960916462*^9}, {
  3.81031553192523*^9, 3.81031553249708*^9}, {3.811848494346561*^9, 
  3.8118484968841467`*^9}},ExpressionUUID->"a1708a53-bdb9-44fa-8f82-\
7976807e5dc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<Country\>\"", ",", "\"\<China\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7905009667598286`*^9, 3.79050097792056*^9}, {
  3.810315534612965*^9, 3.8103155351061163`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"dfeb0be0-1629-4b0a-873a-ce22e161dc32"],

Cell[BoxData[
 TemplateBox[{"\"China\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
   "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8187023242923117`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b7dbbe93-cb20-41b9-a4e8-95bc8204ea23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityProperty", "[", 
  RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7905009805403476`*^9, 3.790500989121049*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"fb829ddc-d854-4212-b297-9e152683c46b"],

Cell[BoxData[
 TemplateBox[{"\"population\"", 
   RowBox[{"EntityProperty", "[", 
     RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
   "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
  "EntityProperty"]], "Output",
 CellChangeTimes->{3.818702341004908*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"de7dff2f-d284-4b67-8218-d33b5bdb4a64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"China\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7905009913431206`*^9, 3.7905010113115664`*^9}, {
  3.8103155506834717`*^9, 3.810315551130455*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"aa9cdd13-1b12-4609-b0b1-af6c88e775f5"],

Cell[BoxData[
 TemplateBox[{"1433783692", "\"people\"", "people", "\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818702349874205*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"7db7f40f-2154-42d8-a6de-ad1ca5c11a31"]
}, Open  ]],

Cell[TextData[StyleBox["\:82ef\:5206\:5b50\:7ed3\:6784\:ff1a",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7905010313421497`*^9, 3.7905010372744565`*^9}, {
   3.793355271157311*^9, 3.7933552713335257`*^9}, {3.811848520989915*^9, 
   3.8118485318912992`*^9}, 
   3.815914882189867*^9},ExpressionUUID->"55f0c379-8ad3-4840-8922-\
257578b4524f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<Chemical\>\"", ",", "\"\<Benzene\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7905010428824067`*^9, 3.790501056122813*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"d9957879-2052-47c8-b70e-257cb53952c5"],

Cell[BoxData[
 TemplateBox[{"\"benzene\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Chemical\"", ",", "\"Benzene\""}], "]"}], 
   "\"Entity[\\\"Chemical\\\", \\\"Benzene\\\"]\"", "\"chemical\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.818702361109853*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"79dc85e0-782a-4bc4-8a93-619ab270fb78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityProperty", "[", 
  RowBox[{"\"\<Chemical\>\"", ",", "\"\<ColorStructureDiagram\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.790501059582919*^9, 3.790501083433335*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"824c3228-4222-4b15-a135-76e370e79967"],

Cell[BoxData[
 TemplateBox[{"\"structure diagram\"", 
   RowBox[{"EntityProperty", "[", 
     RowBox[{"\"Chemical\"", ",", "\"ColorStructureDiagram\""}], "]"}], 
   "\"EntityProperty[\\\"Chemical\\\", \\\"ColorStructureDiagram\\\"]\""},
  "EntityProperty"]], "Output",
 CellChangeTimes->{3.818702377244347*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"aa7fc956-9951-4dfb-8d50-a692f408a3f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"benzene\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Chemical\"", ",", "\"Benzene\""}], "]"}], 
     "\"Entity[\\\"Chemical\\\", \\\"Benzene\\\"]\"", "\"chemical\""},
    "Entity"], ",", 
   TemplateBox[{"\"structure diagram\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Chemical\"", ",", "\"ColorStructureDiagram\""}], "]"}], 
     "\"EntityProperty[\\\"Chemical\\\", \\\"ColorStructureDiagram\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7905010868434615`*^9, 3.790501105668079*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"8d496e9a-8b0b-4ffb-91b8-fd57c7f34d79"],

Cell[BoxData[
 GraphicsBox[
  {CapForm["Round"], {}, {
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{{104.33, 284.1}, {79.33, 240.8}}, {{95.67, 289.1}, {70.67, 
      245.8}}}], 
     {RGBColor[0.4, 0.4, 0.4], 
      LineBox[{{{79.33, 240.8}, {54.33, 197.5}}, {{70.67, 245.8}, {45.67, 
       202.5}}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{100., 286.6}, {75., 329.905}}], 
     {RGBColor[0.4, 0.4, 0.4], LineBox[{{75., 329.905}, {50., 373.21}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{50., 200.}, {0., 200.}}], 
     {RGBColor[0.4, 0.4, 0.4], LineBox[{{0., 200.}, {-50., 200.}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{{50., 368.21}, {0., 368.21}}, {{50., 378.21}, {0., 
      378.21}}}], 
     {RGBColor[0.4, 0.4, 0.4], 
      LineBox[{{{0., 368.21}, {-50., 368.21}}, {{0., 378.21}, {-50., 
       378.21}}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{{-54.33, 197.5}, {-79.33, 240.8}}, {{-45.67, 202.5}, {-70.67, 
      245.8}}}], 
     {RGBColor[0.4, 0.4, 0.4], 
      LineBox[{{{-79.33, 240.8}, {-104.33, 284.1}}, {{-70.67, 245.8}, {-95.67,
        289.1}}}]}}, 
    {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
     LineBox[{{-50., 373.21}, {-75., 329.905}}], 
     {RGBColor[0.4, 0.4, 0.4], LineBox[{{-75., 329.905}, {-100., 286.6}}]}}}},
  
  ImagePadding->2,
  ImageSize->72.00000000000001,
  PlotRangeClipping->False]], "Output",
 CellChangeTimes->{3.81870238404665*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"a19415c3-4f9e-4779-bd83-41a4cb54105f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4c7dc298-f762-4d03-893b-fc7396342962"],

Cell[CellGroupData[{

Cell["\:67e5\:627e\:5b9e\:4f53\:548c\:5c5e\:6027", "Section", "TentativeExample",ExpressionUUID->"ea35e031-86d0-45b5-ad42-60de315efb00"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f53\:7c7b\:578b", "Subsubsection", "TentativeExample",ExpressionUUID->"4d4f2999-c2ca-49b0-9d27-74b78e455fe4"],

Cell[TextData[{
 "Wolfram \:8bed\:8a00\:5305\:542b ",
 StyleBox[ButtonBox["\:8bb8\:591a\:9886\:57df\:7684\:5b9e\:4f53\:7c7b\:578b",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/guide/EntityTypes.html"], 
    None},
  ButtonNote->"https://reference.wolfram.com/language/guide/EntityTypes.html"],
  FontWeight->"Bold"],
 "\:ff0c\:4f8b\:5982\:ff1a"
}], "Text",
 CellChangeTimes->{{3.790501214320932*^9, 3.7905012373402214`*^9}, {
   3.79283704846732*^9, 3.792837048472335*^9}, {3.792931912686552*^9, 
   3.792931953133378*^9}, {3.7933552802296677`*^9, 3.7933552806377907`*^9}, 
   3.81184858009958*^9, {3.811848623637877*^9, 3.811848634390511*^9}, 
   3.811848678292019*^9},ExpressionUUID->"790ba03f-82f4-4fb1-b535-\
d3a558695285"],

Cell[TextData[{
 "\:5730\:7406\:5b9e\:4f53\:ff1a",
 StyleBox[ButtonBox["\:56fd\:5bb6\:3001\:57ce\:5e02\:3001\:6d77\:6d0b\:3001\
\:5c9b\:5c7f\:7b49",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Country.html"], 
    "https://reference.wolfram.com/language/ref/entity/Country.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/Country.html"],
  FontWeight->"Bold"]
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.8118486982432528`*^9, 
  3.811848742053708*^9}},ExpressionUUID->"3c764cdc-6281-4e07-9f88-\
f6b88166c11b"],

Cell[TextData[{
 "\:5929\:6587\:5b9e\:4f53\:ff1a ",
 StyleBox[ButtonBox["\:884c\:661f",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Planet.html"], 
    "https://reference.wolfram.com/language/ref/entity/Planet.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/entity/Planet.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:94f6\:6cb3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Galaxy.html"], 
    "https://reference.wolfram.com/language/ref/entity/Galaxy.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/entity/Galaxy.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:6052\:661f",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Star.html"], 
    "https://reference.wolfram.com/language/ref/entity/Star.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/entity/Star.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:8d85\:65b0\:661f",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Supernova.html"], 
    "https://reference.wolfram.com/language/ref/entity/Supernova.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/Supernova.html"],
  FontWeight->"Bold"],
 "\:3001 ..."
}], "Text",
 CellChangeTimes->{{3.7905012631747117`*^9, 3.7905013780063505`*^9}, {
   3.792837001695509*^9, 3.792837012783409*^9}, {3.793359170199601*^9, 
   3.793359192646899*^9}, {3.793359232460711*^9, 3.793359235332712*^9}, {
   3.793359296957637*^9, 3.793359360554545*^9}, 
   3.811848763596225*^9},ExpressionUUID->"1c1af029-1a9b-464b-bb79-\
e4a8ae6d120a"],

Cell[TextData[{
 "\:5929\:6c14\:548c\:5730\:7403\:79d1\:5b66\:ff1a ",
 StyleBox[ButtonBox["TropicalStorm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/TropicalStorm.\
html"], "https://reference.wolfram.com/language/ref/entity/TropicalStorm.\
html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/TropicalStorm.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:5730\:9707",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Earthquake.html"], 
    "https://reference.wolfram.com/language/ref/entity/Earthquake.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/Earthquake.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:77ff\:7269",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Mineral.html"], 
    "https://reference.wolfram.com/language/ref/entity/Mineral.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/Mineral.html"],
  FontWeight->"Bold"],
 "\:3001..."
}], "Text",
 CellChangeTimes->{{3.7905012631747117`*^9, 3.7905013780063505`*^9}, {
   3.792837001695509*^9, 3.792837012783409*^9}, {3.793359170199601*^9, 
   3.793359192646899*^9}, {3.793359232460711*^9, 3.793359240901149*^9}, {
   3.793359379461615*^9, 3.7933594069721107`*^9}, {3.7933594838551826`*^9, 
   3.793359483859158*^9}, 3.8118488882142973`*^9, {3.811848962151964*^9, 
   3.8118489691172256`*^9}},ExpressionUUID->"eaaec0a5-7af7-4d23-b9de-\
3f3e3021adc7"],

Cell[TextData[{
 "\:6587\:5316\:548c\:5a31\:4e50\:ff1a ",
 StyleBox[ButtonBox["\:8bed\:8a00",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Language.html"], 
    "https://reference.wolfram.com/language/ref/entity/Language.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/Language.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:5b97\:6559",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Religion.html"], 
    "https://reference.wolfram.com/language/ref/entity/Religion.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/Religion.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:7535\:5f71",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/Movie.html"], 
    "https://reference.wolfram.com/language/ref/entity/Movie.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/entity/Movie.html"],
  
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["\:97f3\:4e50\:4f5c\:54c1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/entity/MusicWork.html"], 
    "https://reference.wolfram.com/language/ref/entity/MusicWork.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/entity/MusicWork.html"],
  FontWeight->"Bold"],
 "\:3001..."
}], "Text",
 CellChangeTimes->{{3.7905012631747117`*^9, 3.7905013780063505`*^9}, {
   3.792837001695509*^9, 3.792837012783409*^9}, {3.793359170199601*^9, 
   3.793359192646899*^9}, {3.793359232460711*^9, 3.793359242668782*^9}, {
   3.793359580080997*^9, 3.79335962147876*^9}, 
   3.811848985213688*^9},ExpressionUUID->"a2b4ed8d-5a53-4fe4-9c1a-\
f128485d491f"],

Cell[TextData[{
 "\:53ef\:4ee5\:4f7f\:7528 ",
 StyleBox[ButtonBox["EntityList",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/EntityList.html"], 
    "https://reference.wolfram.com/language/ref/EntityList.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/EntityList.html"],
  FontWeight->"Bold"],
 " \:67e5\:770b\:5c5e\:4e8e\:4e00\:4e2a\:5b9e\:4f53\:7c7b\:578b\:7684\:6240\
\:6709\:5b9e\:4f53\:7684\:5217\:8868\:ff1a"
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.811849093676653*^9, 
  3.811849094196375*^9}},ExpressionUUID->"26941ef8-a4d7-4982-a92c-\
415c4d28d735"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityList", "[", "\"\<Ocean\>\"", "]"}], "//", 
  "Shallow"}]], "Input",
 CellChangeTimes->{{3.7905014039020405`*^9, 3.7905014179926214`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"0a09494e-3ac9-4470-b9ae-ce965562c4e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Adriatic Sea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AdriaticSea\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AdriaticSea\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Aegean Sea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AegeanSea\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AegeanSea\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Akashi Strait\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AkashiStrait\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AkashiStrait\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Alboran Sea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AlboranSea\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AlboranSea\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Almyros Bay\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AlmyrosBay\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AlmyrosBay\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Amundsen Gulf\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AmundsenGulf\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AmundsenGulf\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Amundsen Sea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AmundsenSea\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AmundsenSea\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Amurskiy Liman\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AmurskiyLiman\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AmurskiyLiman\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Anadyrskiy Gulf\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AnadyrskiyGulf\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AnadyrskiyGulf\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"Anadyrsky Liman\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AnadyrskyLiman\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AnadyrskyLiman\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   RowBox[{"\[LeftSkeleton]", "237", "\[RightSkeleton]"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.8187162732862797`*^9},
 CellLabel->
  "Out[41]//Shallow=",ExpressionUUID->"b2bdcf36-3c0e-490e-8aa2-6d6b41a6aa93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", "\"\<Planet\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7905014218925924`*^9, 3.7905014296026506`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"77ac99e6-19d4-4e94-882a-08326a4c7ace"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Mercury\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Mercury\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Mercury\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Venus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Venus\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Venus\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Earth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mars\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Mars\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Mars\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jupiter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Jupiter\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Jupiter\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saturn\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Saturn\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Saturn\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uranus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Uranus\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Uranus\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Neptune\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Neptune\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Neptune\\\"]\"", "\"planet\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.818716285865711*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"4541a70b-30ec-4d68-aebd-83d06111053a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityList", "[", "\"\<Mineral\>\"", "]"}], "//", 
  "Shallow"}]], "Input",
 CellChangeTimes->{{3.7905014310424585`*^9, 3.7905014409530687`*^9}, {
  3.790501603587191*^9, 3.790501639677865*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"aa726876-e945-40a7-aa41-70bd36115f33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"abelsonite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Abelsonite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Abelsonite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"abernathyite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Abernathyite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Abernathyite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"abhurite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Abhurite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Abhurite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"abswurmbachite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Abswurmbachite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Abswurmbachite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"acetamide\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Acetamide\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Acetamide\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"achavalite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Achavalite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Achavalite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"actinolite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Actinolite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Actinolite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"acuminite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Acuminite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Acuminite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"adamite\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Adamite\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"Adamite\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   TemplateBox[{"\"adamsite-(Y)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Mineral\"", ",", "\"AdamsiteYttrium\""}], "]"}], 
     "\"Entity[\\\"Mineral\\\", \\\"AdamsiteYttrium\\\"]\"", "\"mineral\""},
    "Entity"], ",", 
   RowBox[{"\[LeftSkeleton]", "3868", "\[RightSkeleton]"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.818716294919498*^9},
 CellLabel->
  "Out[43]//Shallow=",ExpressionUUID->"44470cfe-3b5c-44fb-b917-698af9d19130"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityList", "[", "\"\<Movie\>\"", "]"}], "//", 
  "Shallow"}]], "Input",
 CellChangeTimes->{{3.790501649648403*^9, 3.7905016590186367`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"d8887b39-0ec7-4899-b9f5-5de1aa995fd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"-30-\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"-30-::w8rqy\""}], "]"}], 
     "\"Entity[\\\"Movie\\\", \\\"-30-::w8rqy\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"00 Schneider \[Dash] Jagd auf Nihil Baxter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Movie\"", ",", "\"00Schneider-JagdAufNihilBaxter::999vx\""}], 
       "]"}], "\"Entity[\\\"Movie\\\", \
\\\"00Schneider-JagdAufNihilBaxter::999vx\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"06/05\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"0605::57jmm\""}], "]"}], 
     "\"Entity[\\\"Movie\\\", \\\"0605::57jmm\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"08/15 Part 2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"0815Part2::784mc\""}], "]"}], 
     "\"Entity[\\\"Movie\\\", \\\"0815Part2::784mc\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"0:0 (Teko Efes)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"0:0TekoEfes::45h7s\""}], "]"}], 
     "\"Entity[\\\"Movie\\\", \\\"0:0TekoEfes::45h7s\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ten Thousand Saints\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"10,000Saints::7bk7z\""}], "]"}], 
     "\"Entity[\\\"Movie\\\", \\\"10,000Saints::7bk7z\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"10,000 BC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"10000BC::n7x57\""}], "]"}], 
     "\"Entity[\\\"Movie\\\", \\\"10000BC::n7x57\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"Different Kinds of Rain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"1000ArtenRegenZuBeschreiben::g9k7t\""}], 
       "]"}], "\"Entity[\\\"Movie\\\", \\\"1000ArtenRegenZuBeschreiben::g9k7t\
\\\"]\"", "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"1,000 Dollars a Minute\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"1000DollarsAMinute::5z93q\""}], "]"}], 
     "\"Entity[\\\"Movie\\\", \\\"1000DollarsAMinute::5z93q\\\"]\"", 
     "\"movie\""},
    "Entity"], ",", 
   TemplateBox[{"\"1 0 0 (Alexandras 173, Athina)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Movie\"", ",", "\"100173AlexandrasAveAthens::bj9wc\""}], 
       "]"}], "\"Entity[\\\"Movie\\\", \\\"100173AlexandrasAveAthens::bj9wc\\\
\"]\"", "\"movie\""},
    "Entity"], ",", 
   RowBox[{"\[LeftSkeleton]", "54331", "\[RightSkeleton]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.818716298888135*^9},
 CellLabel->
  "Out[44]//Shallow=",ExpressionUUID->"d6717d04-4c6e-43cb-ad9a-06396d572492"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5b9e\:4f53\:5c5e\:6027", "Subsubsection", "TentativeExample",ExpressionUUID->"92bc9bd3-a363-43e2-8704-45bb75416ec6"],

Cell[TextData[{
 "\:53ef\:4ee5\:4f7f\:7528 ",
 StyleBox[ButtonBox["EntityProperties",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/EntityProperties.html"], 
    "https://reference.wolfram.com/language/ref/EntityProperties.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/EntityProperties.html"],
  FontWeight->"Bold"],
 " \:67e5\:770b\:4e0e\:5b9e\:4f53\:7c7b\:578b\:5173\:8054\:7684\:6240\:6709\
\:5c5e\:6027\:ff1a"
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.811849114042039*^9, 
  3.811849114607686*^9}},ExpressionUUID->"a7031658-6fbe-478a-abd1-\
be593f899ca0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityProperties", "[", "\"\<Ocean\>\"", "]"}], "//", 
  "Shallow"}]], "Input",
 CellChangeTimes->{{3.790501752215925*^9, 3.7905017632712603`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"9ca98ff6-6e12-4d15-9e29-597068a6315d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"ACICM491 code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"ACICM491Code\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"ACICM491Code\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"Area\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"Area\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average depth\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AverageDepth\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"AverageDepth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"basins\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"Basins\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"Basins\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bordering bodies of water\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"BorderingBodiesOfWater\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"BorderingBodiesOfWater\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bordering continents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"BorderingContinents\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"BorderingContinents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bordering countries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"BorderingCountries\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"BorderingCountries\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"center coordinates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"CenterCoordinates\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"CenterCoordinates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coastline length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"CoastlineLength\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"CoastlineLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"countries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"Countries\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"Countries\\\"]\""},
    "EntityProperty"], ",", 
   RowBox[{"\[LeftSkeleton]", "24", "\[RightSkeleton]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8187163123394747`*^9},
 CellLabel->
  "Out[45]//Shallow=",ExpressionUUID->"42b8d60b-85cb-4ea7-9e5a-c6d12bcf1b8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityProperties", "[", "\"\<Planet\>\"", "]"}], "//", 
  "Shallow"}]], "Input",
 CellChangeTimes->{{3.790501771045923*^9, 3.790501787031966*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"3a69b27c-ef9c-4b24-8319-557185da5b88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"absolute magnitude H\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"AbsoluteMagnitudeH\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"AbsoluteMagnitudeH\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Age\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Age\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"albedo\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Albedo\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Albedo\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alphanumeric name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"AlphanumericName\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"AlphanumericName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"altitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Altitude\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Altitude\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"next maximum altitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"AltitudeMaximum\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"AltitudeMaximum\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"angular diameter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"AngularDiameterFromEarth\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"AngularDiameterFromEarth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"angular radius\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"AngularRadiusFromEarth\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"AngularRadiusFromEarth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"largest distance from the Sun\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Aphelion\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Aphelion\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"largest distance from Sun\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Apoapsis\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Apoapsis\\\"]\""},
    "EntityProperty"], ",", 
   RowBox[{"\[LeftSkeleton]", "122", "\[RightSkeleton]"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.8187163241719303`*^9},
 CellLabel->
  "Out[46]//Shallow=",ExpressionUUID->"2be7e467-4abe-42ab-be5d-ba7afe2fb6db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityProperties", "[", "\"\<Mineral\>\"", "]"}], "//", 
  "Shallow"}]], "Input",
 CellChangeTimes->{{3.790501790721937*^9, 3.790501799814389*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"04d78000-1142-4990-ab8f-58a995742fa3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"2V angle\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"2V\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"2V\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alternate names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"AlternateNames\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"AlternateNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"birefringence\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Birefringence\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"Birefringence\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cleavage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Cleavage\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"Cleavage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"color\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Color\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"Color\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"crystal system\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"CrystalSystem\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"CrystalSystem\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Dana ID\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"DanaID\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"DanaID\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Density\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"Density\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"transparency\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"Diaphaneity\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"Diaphaneity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"discovery year\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Mineral\"", ",", "\"DiscoveryYear\""}], "]"}], 
     "\"EntityProperty[\\\"Mineral\\\", \\\"DiscoveryYear\\\"]\""},
    "EntityProperty"], ",", 
   RowBox[{"\[LeftSkeleton]", "26", "\[RightSkeleton]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8187163390135*^9},
 CellLabel->
  "Out[47]//Shallow=",ExpressionUUID->"e3b5362c-3444-4068-bb48-00202cfdd612"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityProperties", "[", "\"\<Movie\>\"", "]"}], "//", 
  "Shallow"}]], "Input",
 CellChangeTimes->{{3.7905018026026373`*^9, 3.7905018100173225`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"1465137e-99d5-4fcf-ae3c-7a102932b33c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"rating advisory\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"Advisory\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"Advisory\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cast\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"Cast\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"Cast\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cast and roles\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"CastAndRoles\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"CastAndRoles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"company\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"Company\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"Company\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"director\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"Director\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"Director\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"US box office total receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"DomesticBoxOfficeGross\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"DomesticBoxOfficeGross\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"US daily box office change in receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"DomesticDailyBoxOfficeChange\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \
\\\"DomesticDailyBoxOfficeChange\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"US daily box office receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"DomesticDailyBoxOfficeGross\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"DomesticDailyBoxOfficeGross\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"US daily box office rank\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Movie\"", ",", "\"DomesticDailyBoxOfficeRank\""}], "]"}], 
     "\"EntityProperty[\\\"Movie\\\", \\\"DomesticDailyBoxOfficeRank\\\"]\""},
    
    "EntityProperty"], ",", 
   TemplateBox[{"\"total daily US box office receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Movie\"", ",", "\"DomesticDailyCumulativeBoxOfficeGross\""}], 
       "]"}], "\"EntityProperty[\\\"Movie\\\", \
\\\"DomesticDailyCumulativeBoxOfficeGross\\\"]\""},
    "EntityProperty"], ",", 
   RowBox[{"\[LeftSkeleton]", "32", "\[RightSkeleton]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.818716342778329*^9},
 CellLabel->
  "Out[48]//Shallow=",ExpressionUUID->"5ad6e829-4d80-421b-9411-52ce4a03da6a"]
}, Open  ]],

Cell["\:8c03\:7528\:68c0\:7d22\:5b9e\:4f53\:5c5e\:6027\:503c\:7684\:65b9\:6cd5\
\:ff1a", "Text", \
"TentativeExample",ExpressionUUID->"5937ba01-a11c-43d0-a56b-dd0f950dd363"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"Adriatic Sea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AdriaticSea\""}], "]"}], 
     "\"Entity[\\\"Ocean\\\", \\\"AdriaticSea\\\"]\"", "\"ocean\""},
    "Entity"], ",", 
   TemplateBox[{"\"average depth\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Ocean\"", ",", "\"AverageDepth\""}], "]"}], 
     "\"EntityProperty[\\\"Ocean\\\", \\\"AverageDepth\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.790501937585809*^9, 3.790501956416218*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"02ed52d2-2695-402d-b45e-292252042370"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1456.6929133858267716535`4."}], "\"ft\"", "feet", "\"Feet\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818716359047523*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"a78fbc0d-218d-4958-bc66-e8d0e5606704"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"Earth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"largest distance from Sun\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Apoapsis\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Apoapsis\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.790501979559151*^9, 3.790501999257318*^9}, {
  3.818700339255711*^9, 3.818700359220604*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"4d5f146b-b237-49aa-9bc9-a8d30ca24893"],

Cell[BoxData[
 TemplateBox[{
  "9.45091296531527158988990683`8.933541465906867*^7", "\"mi\"", "miles", 
   "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818716365441708*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"0c621d0e-4339-4750-8be8-4f7cd1625985"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ba665b35-c74c-4e56-9ea8-161fe87ccfbc"],

Cell[CellGroupData[{

Cell["\:67e5\:627e\:5b9e\:4f53\:548c\:5c5e\:6027", "Section", "TentativeExample",ExpressionUUID->"7c507519-6b2c-44e9-8f1a-c829bfba74ba"],

Cell[CellGroupData[{

Cell["\:81ea\:52a8\:8865\:5168", "Subsubsection", "TentativeExample"],

Cell["\:5728\:586b\:5145 Entity \:6216 EntityProperty \
\:53c2\:6570\:65f6\:ff0cWolfram \:8bed\:8a00\:663e\:793a\:53ef\:7528\:5b9e\
\:4f53\:7c7b\:578b\:548c\:5c5e\:6027\:7684\:5217\:8868\:ff1a", "Text", \
"TentativeExample",
 CellChangeTimes->{{3.811849156832288*^9, 
  3.811849165097959*^9}},ExpressionUUID->"2cc49d25-ca19-441f-95de-\
ccfa378bbe7d"],

Cell[BoxData[
 RowBox[{"EntityProperty", "[", 
  RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8187179658158913`*^9, 
  3.818718031381678*^9}},ExpressionUUID->"fc3f5079-788e-4e1d-ab65-\
ebc203479abd"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQeAXFd97t1kyzYGg43NS0IJAduQPBJjMDwexRBaKCEQCHkBjG2w1Vdl
1XuXVtJqpe299yJtkVbbe++9953d2T69l++dc2dmi+rKktmr4f9LPqy99dzZ
nd/933PPzP37dzb/6r1HHnroIdfV7H9+9fau727b9vae/3yW/fAbF9d1a1ze
/fO/uWx/d827277+zqNs4sMPP/TQ71keY/8GQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRDEXylWWCBDB0aRiwlUQYF6aFAH9W0iQzHG
UHTfIkUZZoV917BtF0GyjHXGUYJhdQrSIl3wzo9/iT9u34bY5lRhW+N3WG8S
FWw/tVCinB3z8va3nIyj9P78Tkyz6M31ZMf1c/zq129h+8kkdLPf02hZKHb8
4Cf491//Cfs9r6Lfel92RxDEXwgrTIIr2sz+yMv9Fd56+xV889//Gf/6qxvz
vV9+Cd/9jy9hR+451JnD0IVgtN9jWq2BKJo6CK/U3+Cdw9/A7nI/DCLkDuuF
oNMSgLyy/8HPP/cQHnroITyy6jF86U//jhhlAgZusV4HW6/ecAEpLZuwy/0b
+GPQeqRPh6DvjvtbXvj2JSi4MdZCSOYqMTRSgaHRRZkox8j8cvmYYucy4Xdi
nkLT5c14iR3XQ49+HF/9dy/mWz0aotfiFTbt4VV/i3/9czj6V/ZPhyCIu8QK
M6vLytBpDEWa31fxj8/b/HWrPLp6Nb7v74YqUwx6EY7Oe0oYGmaOYtdvPo7n
P/khPPW3L+Bnif6sPZF3XLfbGo7KDhe89+OnhXY99tzz+LnbehQikXnoxuW7
EIEeYxCSY36K7732YTzx1GP4xO/+B9GjERhm8+7tOBZyUxcbwtCcXoDSrUUo
28HiWoyybcWoOH0NjaYAYZk2BLHzTLrtd2KeQ0fOAXydv+aP/R2+8aso5mMz
+tIP4wePsmmrXsLP1qWxOp0giAeJxb5ND2K+feHOvn3Dzw2Vxvvh21DUje/E
W5+ybfuJF1/Af14OWJZvO5kjO4z+KOk6gLDULQgrO4T8mUDBqzdbvotts9fg
h/Djr+Hz3FmPrcLf/uH3iBuPvK++vWn00WgJrUbRT+pR/ItGlP6+FqW/q0H5
tjw0qkJY28JZbRyGIVy1/U4sWgyWe+OXT3C3vozvu+bCwH5PAzlu+MVHeds/
h39bl8KuSwiCeJC4wbcf59ewj+GFn/4ERy/tQkzRLoTl7VyUHUgfC0SrNULw
RCfi2Ps+iW0jEaOIsnkN8ezffBpPArtmjrIv63BfPKT2dXqkR7DuFbtvP/EJ
/L/sGGiQYl83iW07ntWrYcxHjnWjWR2YbF8/mdV4qZhldeEcLrFlo9n8sCWu
62D7HmT7mWDbnDJEIvns1/HKaptvP/nnPyFjKgVyth3H/oZZ+7vZNnpYu8fm
jyGG/XxzJ/fOL5PIlr/FeYL7NrwKxb+sRdm+bLSMxqG1NwGtQ7FoMzvaudi3
BozWhOD3/Hfx1D/ix0fL2VQTerNO4mcfYtNWfxm/PVXOHEwQxIPETX372OP4
zPo1yJyJY16LxQDzzeL0IUKoI7sszBUNf8R3f/QK/uWbL+P/JZ5HD7s+vuL1
Q/z+2y/hK996GV/93o/x54DTaBJcyJY3BaIq+z/wj69/Dl/59st49eufwidW
O/pgV+H5f/w8vvbGy8K6r33zJXzvze/DZzSZeZC51hqJ2v69OPje3+ALr78s
rM/z2rdewr/8n2/gPc8DqGH+d9TdfPm+8X3Yv/N1vPzaP+Crb7yEl//+GTz5
MNvfww+zevpFvPL1V/D6d2zbePUb/4A/xZ9ApSUeVyO+gR/+4DP452+8hNfe
+zPSZ4OZhxc7l/3bEI4Un3/C1779ebz6nS/iq2f32abfyre/qkHZ6XShn5ef
FxafG5b6Vo+hikD8mr8uj7+CH+7IF+5rjpeE4K1P82lfxf+4Va3wXw5BEHfL
rXz7aeaY1KlIVhve6lo7At1mNi/3x/jYM4/i4ccfx5c2/Qk71n8Wn3v+Uaya
74NYhdWf+BS+GniS1bms/jP6ozT8K7fts5gPc+JHv/gS9nddhoT70xKFyqbN
ePvV65d9GI+uehHfddnMjiSBnQ9s7euyRqO/bxPe+snzy9rfI088gW+e3odi
UyJaM97AP7z4qLDtJ575AnbX+KDFcc6w9wd3yA9hw9+twiN83SefxDdDvG7e
n7HYt6cymFtDb1hmsW/5b8WgmkBPTRGKKxvRMaIUpppUUxhoLkBRVQu7LlCt
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
QfSNTgv3d1a6zc4U8i0hRsi3H0x47TowNo1jYRl41y0CVytbmX/VwmvO53UM
juNiQi7ePh6K5MJ6wcfc0SvdbmcJ+ZYQIwu+5c/Hodyv8Hs2swo18uo64eqV
iN/s84N7fDaKGruRWtqI95iDf73PF97JBegenrCvs/LtdpZo6PO8hAgRfNst
Fe4vcOdS7l94HavWGdA+OIbAtGL85x5f/GKnN/6LuXejezTyazsgmZGxZYzC
72Gl2+tM4a8p+ZYQG+TbDya8j5b3J/ikFMCH1bBNPaPIrmrD4eA0+F0qEvp0
8+u6cCQkHQl5tVBp9cI6K91uZwn5lhAj5NsPJrwPUTIlF+ra3x70x6bzMbhW
0Sb02zb2jMDvciH+64A/3nOLZN7thFJDvr2fId8SYsThW35/gY8Rp9y/8DEH
crVOuFe29kwUfrXXB0dC0+HqmYjf7PWFR0IuOoakS8boU+5PVORbQoSQbz/Y
8GfDa1nd2tI/BvfYbPx8pyfePBYiOHhOqRHGJfDva13pdjpbyLeEGCHffvDh
PjWYrZiYU6G4qQd13cPCNJPFsuJtc9aQbwkxMu9bnUnow6V8cOF9uhbh82Ss
pjWYV7w9zhzyLSFGHL5V60xCjUuhOEOU5FtChCz41gg+RpxCcYYodQbyLSE6
yLcUZwz5lhAjC9/HyMfoUyjOEa2e+hMI8cF9W9Ixhvr+KTQMUCjOkfr+SZR2
ja/024sglsC/f1Wm1WNOTaE4V+Raw0q/vQiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIFaU/w8XHMm/
     "], {{0, 257}, {348, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{170., Automatic},
   ImageSizeRaw->{348, 257},
   PlotRange->{{0, 348}, {0, 257}}]], "Input",ExpressionUUID->
  "74cb8f22-f065-4ccc-948b-e7084cc5b942"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQd4HMX5xnGh2DHVpoMpIQQCCUlIaIGQkJBGSOikQEhCCyQ0QwCDwbh3
y5Js9d577713narVezu1k673u/c/s3uqbsgifxnf93uel9PNzc3OzuHv3Sm7
c9M/33nqteXnnHPO+xew/zz1j49+vmHDPzY+fQl78+zb77/x+tuvvvLbtz94
9fVXN9z3zxUssY3JYdk556xkryAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgjgLkKER
nYhFhzEGLboTSM8+tyaiG6enHiQxJaDdFIt2y8nz9iIF5RX/xTM/uhsP/O53
8KzzY99NYTp5uR2nKPfLqMscd4JzT0I/q0PvIsv/eom3bTK6rHFoM8Wx19Mt
J4G1WzqssDCZFyArYLVisNgFv/3hD/GjH/8R/vVjGKr2x7PC++cQ2aZZ6n8+
BGG3DKMcR63O2PLiBTj3/OU474JjteaGq7GnOQBd8EbTguSDFvihqPdTfLD9
Adz20yvwVpYzi0k+J8zfZnXHkY9vwTnnnINzli3Dw1veQIU1iJVzbLl57R/i
rU0/xrceuR6flriyGHWick+tDqsXot3uP7YNrrsI9/7r93DJ2INq+KL1NMv/
eskHzbw98v6Op166Ed/+2y8RO+qHjtNuX/57Bc5SAFrU4ajPS4MkPhWSBPYa
k4b6gXDhsybWzjIcFbxjqNoJ32P/LyxbcQ/8uibQX7Qfd7D3y1ewOo3olvqf
D0HYLSOoQJPVBZufP1eM18fRstUXY1tjMLuG9EPzguTPYrI/orwfwZW8nFWX
4q1MFxbj/U/4HR5bKno+xkdv/xL/2Pw8ogddWLwOOE65fgjcfy8u5OWuu4Z5
hzv6TlLuqdRp9UX0kftO3AbnX4W/+XyKegSz+pzeMb4+8kerxRkf/+ZCdu7L
cOmjv0bceCDrn55++84V86bBaJS9U4W830lQ8GwV8v9QgfLUSMFnjsIL46w/
zMwD481B+MUq1v4XP4a4QR0mG0Pw6DruJb9Dwph+qf/5EITdMu0dfzpPiJFr
H/oJtgb9B47hb8LBJseEDchW+ttiZgDaWXxvZ688prcJfwfOSvOfjj/tCEIv
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
12jrH8F2vyS8vMMX7exvPj+01HU9E8THOsk7CML+oPs7jpVKZ0BhfTte3+OP
V3f542BYBv662QPvOoahpr0PWoNxyet4pshA3kEQdongHUqdcA2pM5D4OExr
rxQxeRI0dA5gb1Aq/r7NGwGpJez9IILTy9EtHRfyLXVdzwTxsTvyDoKwP8g7
5oqP31c09eCNvQF451AosqqaBc9IKanHyzv9WFoYmnqkQsxc6rqeCSLvIAj7
hHvHOPMOPv6gNZC4+B5TvG+xwz8Zz29yw3vML/70mRu8EwoxMqGCke83dQbU
80wQ73/VkncQhN1B3nF8GVgsVGmNSGb9jf8cDEZxQyem1mEtdd3OJJF3EIR9
Qt5xYukMoldM3c9BfY1jRd5BEPYJ944xhU6IAxo9ibQwcX8l7yAI+6NlcJJ5
hxZ83alGTyItTLwvRt5BEPYH9w6+zoruDSSdjujeQIKwT5oGJtDUL0PniByd
wyTSwtQ1okBZ+zDM5B0EYVcodUYMyzUk0mlrTKkVnh1JEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEATxv+b/ALaWr3I=

     "], {{0, 218}, {399, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{213.5, Automatic},
   ImageSizeRaw->{399, 218},
   PlotRange->{{0, 399}, {0, 218}}]], "Input",ExpressionUUID->
  "0bec68f3-6d94-4ed8-bfa0-bd8859a98fb0"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQdYVEfbho29xZgeU4wxvedLjGmaHlOMiTFqVKR3KSJ2RVBEVFSkg/Te
i4jYQQUBKYL03nuvS1l29/nnnN2FpSkaoyT/PF6vC3vO9GHn3pl35ryksHGF
yvhx48Ztnkr+WyG//RtdXfmdf84mv6zS3qyuqq2s9LP2FmVVZd1PFSaQN8uI
/Urun0heQUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVF
RUVFRUVFRUVFRUVFdVsJyL8xrDGdufupMd5O/xIJBIJhf6aiGksqw0WUCMJR
jitoRBRaRmF1OItSnEHJPbRSEmcFLqAGkSQfV9GAc6NOo5TcW8w7hYQEbags
XoRFn36Gtfv0cLElhFy/fTzlJN1qRJA0o0jaF8jv97ZsAy0CzSPW7VU0kes1
JM9l/2ge/v9ZGc6jCpdQz7bxRVT+Q+ncU3HzEO20Dcs++BALP/kGv/xpgNMN
ZDzpjcaxr7/EN198hgUfrobJpRLU8vqD/d3RhttWh5SA/Th4yAQmJpJ2EEb7
PHEpuxodfzON/5S4uYhy2IpfRe20dNU+hDeSduBexdEvF+PrLz4n7fQXjkSU
oo53++jubd44aAgrRdqWLKTsyEWmZRUaOSRvnc0o3pWNVL0cpGwvQHkOF1y+
MMi9xhWBgI+WknPwPHYUJgeNYRsQicLWjiH99MqVK1i9evW9TZyK6h4qB+7I
hhsuhf4AWYV38OXvH+C7FSPZ++zrjlhb3Oh1IuEckXkPLAvOSOPbIaJmD6xC
V0NZfwFUzxxHuoC5drvwwnyktOjD4LeJmDRuHMYxNmkilrvtw6VON+SNmK4T
Gz627QDcoxShve99SHvuxvkmBxLG6Z6UTTKfWQJ7ZN+UxrJ1H+Kb5e8PrNvf
38PX8p9itZUsHFItkM33RvE9z8P/T2P6V3znYfjEq2Gz8UeQctCGX4UDCv6B
+i0nvFuBy8QiB1pPNMrr41BSFouS8rgBViZxfxnh9U7yjUSoIkQeXYvX2T49
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
//xj1de+9jWUllcoY1ns6zVrcYt5iYiI1OoL/3u7LNYnFPMSERGp1ULlJZvD
+alrsa/TLHUU8xIREakV55dYainmJSIiUivmJZZainmJiIjUinmJpZZiXiIi
IrViXmKppZiXiIhIrZiXWGop5iUiIlIr5iWWWop5iYiI1Ip5iaWWYl4iIiK1
Yl5iqaWYl4iISK2Yl1hqKeYlIiJSK+YlllqKeYmIiNSKeYmllmJeIiIitWJe
YqmlmJeIiEitmJdYainmJSIiUivmJZZainmJiIjUinmJpZZiXiIiIrX6YvOS
Ezb3VM9u2FRwjWapp5iXiIhIrR4nL1kcbkjedpL42XNlcynbbJ+wf4ckwSK3
d7hgtxuhbU3AgeUrcSClD1qLJPp91OupnLDE/h75/Z9/2cQxfdzV3fZFjNHx
0X6dLqfnXH+m/YrPaeozllzTn/EXcUzMS0REpFaPnJecbjhMw+gsz8H15Cp0
WoZQdecqkmsnYBbX1YmySBw/vAPr163DmtUrsXzFXlxIrkOf3IlT8mQtmwYj
93fg5d/6Lbx8uA6jRgmS8xHmtRx2mK1dKIgtRJvZhkkx1sWem7KJ82HSjaA+
KxLhYaEICRUVEoKLGc0YM9pgf5Tj+tQlkqOtFXdjLyNM9Bl86SLOJRThQa8R
Lrfrs2Ulsxaj9XmIvVaCDmkCD1LjkFQ5BI35cbIt8xIRET1ZHjkvuQD3RCPK
4k5jnW8yGowPcX3neziWrRP5BeiL/Dm+8cy38Hdvr8G2w4ex4iffxZv/+P+w
N6EevRLg8N6Hc2urcP1CEGLKRmAQfU/NW1hEBpg/ZeJ0ea7hDuXnKlxaEoxS
+8wclzxmi13swyXPgMxrKzLaVLaQt83ft+Scm33mbnfPHLfd9dG2Dkm5r6jt
b0TGySXYcfoGYuPiEBsbi8t57Zgw2ZRsIYaqHLdrzp7dsNmnMqhnzmx6m8g6
Nnk+zjFzvqaPZ/qciONyDKLmushmITGIihH9xlxBRFoFHg4YxXa30q/8fvtU
Pw7POZCUY/LMGTkwt2+HOB8WscFh6EdX6mks3XodD6VuJO5eAt+UfoyYHHPO
GfMSERF9lTxWXhoXeSn+Ijady0ef4SFu7n4fl6rcSl7qj/0FXnp+GU5Vjyp5
xtkVA59/+Qt8+43tiOoBbJpW5Mecx4WwOMSnpKJqyIlJ+9Q8kbieOzXoqCvD
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
66z29nntZ+eeOft2uma1dSp/E+UT/1aIw/PeT/xu2bx+Z/Yzsz7JOvtYHN51
W/PHO2dMM+P6jedj1pin+1rErMS8REREarYg9+NE25KycuTfL0RBYdFjVU5+
vjIPIl/XF/t6zVrcYl4iIiK1Wqj7cZ8FsxJLLuYlIiJSq4XKSyzWZy3mJSIi
UivmJZZainmJiIjUinmJpZZiXiIiIrViXmKppZiXiIhIrZiXWGop5iUiIlIr
5iWWWop5iYiI1Ip5iaWWYl4iIiK1Yl5iqaWYl4iISK2Yl1hqKeYlIiJSK+Yl
llqKeYmIiNSKeYmllmJeIiIitWJeYqmlmJeIiEitmJdYainmJSIiUivmJZZa
inmJiIjUinmJpZZiXiIiIrX6YvOSEzbXVM8u2FRwjWapp5iXiIhIrR4rLzlc
sLvlpAPYJRck8V+ny9PO5v74/dslydteZCW7FcaROmTcTEBGoxZGm2jnWPzr
9OdRci50ut3ivM49f5Jy/j7nrDj9Obk/8jmpuZiXiIhIrR45L4ntdqsR4wPd
eNg6hHGbEQNtjWgenoRFZCHjQB2Ki/JwNzMT6RkZSE0vQEXrCLQiNzjkzOBw
Q7JpMFK4C6/81v/AK0frMWqSIDnVfx1/7KzkdEPb34y2gTGMm52QvMdvsxgw
2t+GuvYxmD6v45azktWA8f5uNCifkwH9yudkhsW++OeGeYmIiL6MHjkvidzj
nmhEWXQgVu+5iWpjA67veBf7U4cxKQF9kT/HX/7RH+G5r7+IV157FV9/5s/x
43d9cLXVjEmRH+ziMuh0mmFoisKaN3+KVbEd0JilWfMvTpEzXJBcbm+55s7N
eHPI9HaRN2bmaH5TW5HzXHPnc+T32me1t8kZwzWz79n9yu9Vtk/v3zV9rjzt
5u/bDYc4r513j8D/0k1kN+qVuTfJ7YS2rRhJZ32wJ6oS4xD5SRnb7H5nfQbz
xjT/fHjGNbu9d1zy5N/EQ5RcDsTaffGoNtTj2o73cCB1BJPyfJ4KchHzEhER
fdk8Xl5qQnliCLYH3Ue/oQG3DqxBaLUbZhEQ+mN/gZdeeA+BFUOwif1q7x/B
mteexqv/fhS3JwCXzYiRvm509A1jRKuDweaatX9x3Zes0Ok0GBoeweDICIbG
tZgQQWz6fp0Yn0k/hqHRUWX7wIQJRqukZAabZIPRoMWw0nYUw+MaaK3eHGM1
YWxUL/qTYFEyjgSTeO+E3gSDVc5BEswWI8a8bYdGx6GxOGf6NIixmo0Y10x4
xjYq2hptYpsdkyYDxsaNME3nGDv0mjGMGx1wYRDZpwIQEncftZPihJhbUBIf
jmN+WegRv0rK/i2YkPsUNSj2PWaywyyCpXxM5kkDJsY9Y/rIMYky6rUwWMSx
jY97xjWmh85sh1VkM/d4A8puheDDS4Xo0z9EwsF1CKtxY9LOvERERPRpPFZe
0rSg6k4k9oYWo9/YjOSjWxD1wDmdl15+4R0cK2jHiLLnfmQeX4Kf/e1b2J0v
ru0dydj/nf+Fp595Gk8/9QxW3LYquUSZMxGXSJeuEokXfLBh2QqsWvk+Nhw4
g8uVRsircOQ8ZTJqURiyGhvXr8HqlcvxbmA6HvQZIS+bchobkX81AB8sXY6V
YtsHOw/gygO3aCdyTX8qfJZfwL0RPfTyMUCP0iuHcSkqBcXD8jgn0F51A8eX
vo+Va1Zj/abNCC4R+UtkC3ndT11sIFLyruH0cV9sfv89vLv+GM4nN0KkGXQU
xOHQ5mhUiffZJDm79eGO7xoE5QxiwApY6mIRGBqD+GoNxuvTcTXEDxFVZjEI
l5KV9LpChKxdi/Vr1mLVinfhl9SGDi2UYxqsjEfYwaV4f+Va5Xg37TqE6FrR
j/c+XkXoQSQVJ+HE7h3YuGIZlmw8g2tFXeLoBE0zKpIjsT9cfE6GRiQf2yo+
J5fIYsxLREREn8ZCfD9OXtvcFzM/L3Uj0+8dfPvP/wn/dblFeUWy6TBWdhRv
PPcC1qVM5SUnnNChJOICrqeWoNEs37ebtW+nG5MGDYqCV2JlaKUyhzIzVrfI
Fv0ojA5ByLk7qLLInYyhtzwWBzYGIn1Uzkz9SPX1wa0mLcbtYruhBNHBCUjM
64IZdnSWFCA5NBkNYpPDaYFBX4rgVWEoMdsg7645fhe27Q1GSv0IRATCYNl1
JMYFI70P0PUU4LrvdkTVy+vaxbgG0nA4vAxDE2ZIYtxOTKIm/jSig/zgF5qO
iLgqaOQhOm3Qa9pw2ycC5eI4zA55BXgDru+KQFpVN0bhnX9S5qDEuGyj6C69
Dp/NsagR26wim9VErcXavddQNmiAfFidd08iLjEFhQNyHFv87MO8RERET5LP
Ly/1IOPo2/jZq29hZ5Yy6wHJ/nF5yaFc77UVsTi7ZxlW+l1FRptDeb9DXqPj
NEM7UYSQNT5I6LLBpNyvmpnzQm82Ll9PQHh+n9LGLl7TDbcjJ3gTImo92aLv
jg+OJLei3wSYKsJw6UYmsttEr85eVKWcx5Yl72HlmjVYs2Y1Vq9ejRXLDyGh
24pJN9BwbRtCM+rQOOH9jpnNhkmL2CaGKOn70JkdjA1xTSLfyBnGFwmtemis
3nkzeaKoNx/XTm7ChuPRyOr2fDfObjdgojkeB5avwGqlX7lWYumvtyAotw29
8uFP1CAzygdLl60Q21Zh5YoPsHnnDTyA55iqIlYjKH8EgyaXspbLYrWIz9Km
zCEtdu5hXiIioifN55aXpBrEfvgT/PjHK3GhXn5B/n6cFqMfk5fk+21Wiwla
gwn9DzJEvtiM93efwoW8QdHOAu34fVxcEYkKeV2PY9Y9JTmPdGUi8kYSIpWb
a25lLIaxXhRFbEBoNTzjs4q8dTwTLZohlETGIqP0IbrlIZlbUZx2A6eC8tFj
0mJkdAzDo+MYGddCZ3Uo38l/eHUbIrIa0KyZmvdyetdMyeu/9RjpzsbZD+JQ
i4eIOHATjTqRWxxTa8nlTrqRfyUGUSE5aIX8XUGRl2w6jDcl4sChO2iaGMPQ
mNyvqDENNCKIOTCE8usRCD+fgDwR8nSGPrTWZ+HSpliIQ5rOSyFFExg2ub3f
v/OMa7EzD/MSERE9iRYyL730/DKcrBpR1v1MFvlg5d9+HT94Owxl0725YGsI
xE9EXtqUI/LH1Gsigzhmjck+UY3MxGj4XSiGVvxu0g0iy38dAoq0yr6nyM8y
gr4C8RdOwT8sH13KqxaMP0zEsQ0Hcavfk5fssKEo5DQKatMQGJWL8oZhZT9u
kUtq7oYiYPdF5GrnnhfJO+8l56XwOXlppuTvxunGupB1YjWu3L6KC5lakQFn
P1NKvl/Yh6LYeFwNL0CnvF9JXmNugmb4LgKXb8ONjrn9upTneXYjLyIIIRez
0Cz/ahKZK2gzNm+7Pmd+KbhwHENTeUkFeYd5iYiInlQLlZd6I/4vvvHs/8af
/s138fqbP8Ir3/13LNt7GcW9RpFgjOitj8OOb38b33/tz/GHv/3b+ONX/gE/
+MH3sSOxH0PSCMqvh+Dk3v04cPgwfA/4IODCNaS1TsLqdsNqt2C06wb8P9gL
n0M+8Dm4H7uj7qNpyCyOwA5tbTqunj2EDXvEtgMHceToeVwtH8So1XtM4hJs
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
HVU3cXxnGKrsc9u6nS7leFpFXoq+nYXSIbE/57xzNutA3IMVyE0MxPoDN3C/
eUycP7cy7k/7eXzZaupYmZeIiEitFiov9UT+K77xzP/BT9fvxbFLl7B9xS/x
q//aiDPJLRgTiWW8rxzxR33hu/ln+Prvfg3fXxmAI37+iK/WYMKuR3t5Ae4m
3kZSWibupiYg/tpNxGZ1QyfGaDZPor3wBHyOxuBW0h0kJ99GQmEr+rV2kXlG
0ZQejeBT53Am/i7Sbt/AjcggnI0qQIPB5RmfCC9DGWdwMegAdl2pQG2PVfm+
nl2ksaGmu4g/fQzHQzOQkpqC2ylpSM5rw6g4LzaRl2qvbMCl9Ho0yHlpOvM4
YXNZMTFQhrSzh3DkUjqSU0TbOylIvNeIPoNVyYwtST6ITMhA0eDsvOQUWckG
o7ELpbfFsYg2dzKykZ0UiYvRhajpM2DS+x26xc4xX3QxLxERkVotRF6S51sM
ZSHw2bsRy5YuxZJf/xd+8UEwbtZOTSzZMd6VjoD//CXeXrYa6z74AKuXv4u3
f/UWAvP0GHFMoCopGpf8TsD/ZCCOHz+PqKQStEuAJOcdyS4yWQ/unT+DUydP
IsD/BI5eK0Xr8KRnvsnUgwf3YuB3/ARO+J9F0OVMNNrl+2dT43MBgyW4EnwO
10v60G/yPF/AYpfnkQwYbLqHsOPH4R8YiIBTZ3HyShn6xEb5flzX/SvIetCL
XoNo45h93G5IkgWGgWJcDvBHgBhXoGh/PKwALRqzsla8vyIRueW1ytyUNN3W
6VmTpXuARP8ABMrt5GM+EYmcLj20kvzducXPLsxLREREMxZkfkm0zS+tQUl5
FSqqqlFeVYOKyjIU3s9HVlY27t7Lxb28IhRX14ht1bOqBgW59zA2ocPHXSXl
5yPN9ON5RtGc7eLaarZJMEuYuZ/nJUlzx2ie7sCtPONoZpsLtvk7FmzKNgny
rTaXe36bWdnnYwYurwWz2DzzU073/OOYOmcfPR7nV3ReiXmJiIjUbiHykrz+
+R/+4cd46aWX8devvPJY9Wd/9meorH6gfOdtsa/XrMUt5iUiIlKrSZs3L9k9
32P/tPVZ2CX3Z+qb9WQU8xIREanVQuUlFuuzFvMSERGp1VRekp9TZBbXLBZr
sYp5iYiI1GomL8nXLInFWrRiXiIiIrViXmKppZiXiIhIrZiXWGop5iUiIlKr
qecJSA7P33Jjsb74cirPt2JeIiIitZLzUm5DP+p7J1DXO85iLVrlNQwwLxER
kSpJThf6J0zoHTehb4LFWrwa0JjgdLkX+38JIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKiL63/D2e56VM=
     "], {{0, 226}, {588, 0}}, {
     0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{245., Automatic},
   ImageSizeRaw->{588, 226},
   PlotRange->{{0, 588}, {0, 226}}]], "Input",ExpressionUUID->
  "420626e1-4e51-4d63-8eff-1c74f4ae4e97"],
 "\n"
}], "Text",
 CellChangeTimes->{
  3.790502373450367*^9, {3.7905039547535295`*^9, 3.790503961781517*^9}, 
   3.792837837950468*^9, 3.7928380174025726`*^9, {3.7928381651764545`*^9, 
   3.7928381692988896`*^9}},ExpressionUUID->"50a70e73-8809-429f-be5c-\
d8572ddd1e69"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:901a\:8fc7\:81ea\:7136\:8bed\:8a00\:67e5\:627e\:5b9e\:4f53", \
"Subsubsection", \
"TentativeExample",ExpressionUUID->"98697887-67c4-49e8-aae8-ab26c138531b"],

Cell[TextData[{
 "\:4f7f\:7528  ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztm79r61YUx0Nb0o5vzdCh/0CXLF1r3tJFhFcKhi55pumjHlLQK5Rmy2Te
IjIIHp4MqQhEixcPhmJaVKpBiwYlEYnTiFSJlVwSvyEhGfLj9B7HiiVbtvwr
sqXcA9+ALkfK1UfH5557dfVF5udXP340MzPz9jP659XrX7/m+de/ffuCHny3
/PanN8tLP3yz/MvSmyX+q8zHtPFLqkWqT2aYTYvV63Xw6vz8HBzHgaOjIzg8
PIydtre3Gzo9PY1chJAGw8vLS7i/vwevhfE/Oztr9H9nZ+fxHpiGl2majWdy
e3sbyh/90N89d3d3FyzLmngsxy3+UcfHx7C/v+9jeXV11ZU/nuP67u3twcnJ
CbTnpDjJvZdJGzI/ODho9AVzysLCwvft7Ofm5j534x59MfdPml9S+KPhGIDj
KPZna2vrBnl7+W9ubv7txn0S2E8bfzR8Bu7vAHm77GdnZz+lbXfYHvecM838
0TAXNft15/JfXFxcdseHSTNLOn805Iz9cvkLgvA7HmOdM2lmz4E/cvbyX19f
/wOPsWabNLPesiGfScF8imo+C4odT/5ubezy39jY+DMu/MX0PGWPSkOF8Q+V
Y5lgGAaVCc444t/Dn8V/uBSBa/LiQuOV8R8/f1XM9M2L8Wf8o7CR+RMbdLUC
RVkCSZJALpZANfy1K66/Esf0jZcl6mPT2stqinj8nWabTZpttgmVoty8fgVM
h/Gv1wkohVVIzbsM/EplcqBUCdQdBdJdfFpqjQeOKj62C6oN1YrY4Z/XnEj4
X//3D6ytvoO1tbXh9I6eK2twM3b+Fkh8KoQpSgB7QP62hz+fWwl4vhnQSDTx
f6G/7+MeQ/TyPXwYM/9WHn8Qx4ug6CZlbYOplmCFe2jPlc2Gf1WrQLkseZ4D
B2KxTNseVCpVoEo6+XuZ50sKaDTPyUW1maviw/9inPytMnCe66dzJV/udsdG
VTXa2h06X/XwcoI5dfBPrYJOgnwjyP83F0BqNajh+DWEavRc8uG6578YlL8/
9lfAGHO90s5f0slI10vW+EtA9uR9Xjb6ZD8k/6wc8Nt6zvwtELlWbIq0PnlK
/mlRHfl6o/C/ITrIWPPK8nDCc//aHWP944CUbcW/oAyyRj0Ef0GZKP/pq38i
jn/GvyP+vfk/W9ATzR+uSeP91Cj6t9ar+hy8/tHy3vqHB30o/hwUzeC6Zqr4
R2Cj1v8pXgI7IE/JdO4qabaPV2v9h87NKsG5a1j+z+n9iyKm/TmO40Gi81Pd
0KFSzEMm1fp9aI/zLALFFe+aRQYkRQeDzo0LYgF0Z1D+/rGIz5eh6nSbKySL
P8Zef+s/aSh58oyjFbr6Coo9IP86lFc53zW4Hv7J4v8Qz6osQDoVzDObk5vr
xH7pxVywf0HreEaZfK/6vw7ELPnX9tKFru81k8e/9Rws0wBNVUGh0nAdLnC9
xiPHonmH+ivob4Bld88boXJMUBUFVFUDw+xeDyeXfzwUF/7x2f+TTP5s/1u0
1r7/je3/jNba93+y/c/RWdD+ZzS2///prdv+fzT2/cvTWtj3L2js+6+nsX6+
/0LDPrPvHyf3/aM3FzXHgzv3XKaRdIc8g3JOL8O6CGtTnB/gHA3nyUz9CXkh
N+SHHAfhzozZc7L/AeCbvlA=
     "], {{0, 46}, {96, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{52., Automatic},
   ImageSizeRaw->{96, 46},
   PlotRange->{{0, 96}, {0, 46}}]], "Input",ExpressionUUID->
  "1475638d-6ded-4823-ad8a-063f77cda63e"],
 " \:6784\:5efa\:5b9e\:4f53\:ff1a"
}], "Text",
 CellChangeTimes->{{3.790502084039707*^9, 3.790502148090639*^9}, {
  3.7933559770659437`*^9, 3.793355979865378*^9}, {3.811849191518012*^9, 
  3.811849208339613*^9}},ExpressionUUID->"7f752346-ae52-422d-b0df-\
fecbb7e4f5b3"],

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "paris", Typeset`boxes$$ = 
   TemplateBox[{"\"Paris\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
   Typeset`allassumptions$$ = {{
    "type" -> "Clash", "word" -> "paris", "template" -> 
     "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
     "4", "Values" -> {{
       "name" -> "City", "desc" -> "a city", "input" -> "*C.paris-_*City-"}, {
       "name" -> "AdministrativeDivision", "desc" -> 
        "an administrative division", "input" -> 
        "*C.paris-_*AdministrativeDivision-"}, {
       "name" -> "Surname", "desc" -> "a surname", "input" -> 
        "*C.paris-_*Surname-"}, {
       "name" -> "GivenName", "desc" -> "a given name", "input" -> 
        "*C.paris-_*GivenName-"}}}, {
    "type" -> "SubCategory", "word" -> "paris", "template" -> 
     "Assuming ${desc1}. Use ${desc2} instead", "count" -> "14", 
     "Values" -> {{
       "name" -> "{Paris, IleDeFrance, France}", "desc" -> "Paris (France)", 
        "input" -> "*DPClash.CityE.paris-_**Paris.IleDeFrance.France--"}, {
       "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
        "Paris (Texas, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Texas.UnitedStates--"}, {
       "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
        "input" -> "*DPClash.CityE.paris-_**Paris.Ontario.Canada--"}, {
       "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
        "Paris (Tennessee, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Tennessee.UnitedStates--"}, {
       "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
        "Paris (Kentucky, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Kentucky.UnitedStates--"}, {
       "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
        "Paris (Illinois, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Illinois.UnitedStates--"}, {
       "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
        "Paris (Maine, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Maine.UnitedStates--"}, {
       "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
        "Paris (New York, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.NewYork.UnitedStates--"}, {
       "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
        "Paris (Arkansas, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Arkansas.UnitedStates--"}, {
       "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
        "Paris (Wisconsin, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Wisconsin.UnitedStates--"}, {
       "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
        "Paris (Missouri, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Missouri.UnitedStates--"}, {
       "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
        "Paris (Wisconsin, USA)", "input" -> 
        "*DPClash.CityE.paris-_**ParisGrant.Wisconsin.UnitedStates--"}, {
       "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
        "Paris (Idaho, USA)", "input" -> 
        "*DPClash.CityE.paris-_**Paris.Idaho.UnitedStates--"}, {
       "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
        "Paris Township (Michigan, USA)", "input" -> 
        "*DPClash.CityE.paris-_**ParisTownship.Michigan.UnitedStates--"}}}}, 
   Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
   Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    2.1621402`7.786428845052318, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{183., {12., 28.}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{3.7905020405484037`*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"7c34bb30-4dcb-4667-bfc6-8ff8f6a3260b"],

Cell["\:8bf7\:6ce8\:610f\:ff0c\:6709\:65f6\:53ef\:80fd\:96be\:4ee5\:4f7f\:7528\
\:901a\:5e38\:7684\:8bed\:6cd5\:6765\:521b\:5efa\:ff1a", "Text", \
"TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<City\>\"", ",", "\"\<Paris\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.790502183713416*^9, 3.790502208547114*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"453e72b2-d3cc-4447-8033-8e9a4dcb6851"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\<\"City\"\>", ",", "\<\"Paris\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.818718353872096*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"13ed565a-aa37-4012-a54c-03c124705aa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Paris\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"City\"", ",", 
        RowBox[{"{", 
          RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}], 
          "}"}]}], "]"}], 
    "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \\\"France\\\
\"}]\"", "\"city\""},
   "Entity"], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.790502215462397*^9, 3.7905022169526763`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"75a6f18c-9486-4697-8156-506edc4f0c01"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<City\>\"", ",", 
     RowBox[{"List", "[", 
      RowBox[{
      "\"\<Paris\>\"", ",", "\"\<IleDeFrance\>\"", ",", "\"\<France\>\""}], 
      "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.818718375241012*^9},
 CellLabel->
  "Out[57]//FullForm=",ExpressionUUID->"cbfa0fce-7a9e-4a68-8145-f10462c25e66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<City\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Paris\>\"", ",", "\"\<IleDeFrance\>\"", ",", "\"\<France\>\""}], 
      "}"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Input",
 CellChangeTimes->{{3.790502226422969*^9, 3.7905022380134554`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"5232b563-e56f-46a7-ade9-22239c7a10ce"],

Cell[BoxData[
 TemplateBox[{"\"Paris\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}], 
         "}"}]}], "]"}], 
   "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8187183886734867`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"b7c0db6b-bcb7-464d-aa08-b93230511d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"Paris\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}], 
         "}"}]}], "]"}], 
   "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""},
  "Entity"]], "Input",
 CellChangeTimes->{3.818718399095296*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"207b27a1-f5e0-4462-9a67-ca8dc4002bb3"],

Cell[BoxData[
 TemplateBox[{"\"Paris\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}], 
         "}"}]}], "]"}], 
   "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.818718406305283*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"f06e4553-d6d1-479d-976e-2fc3f2524974"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{"\"American Airlines Inc.\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Airline\"", ",", "\"AmericanAirlinesInc::24y82\""}], "]"}], 
   "\"Entity[\\\"Airline\\\", \\\"AmericanAirlinesInc::24y82\\\"]\"", 
   "\"airline\""},
  "Entity"]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<Airline\>\"", ",", "\"\<AmericanAirlines\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Input",
 CellChangeTimes->{3.7905025279102173`*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"bd7ebf69-effb-4c50-8a7a-bd5405a4b46e"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\<\"Airline\"\>", ",", "\<\"AmericanAirlines\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.818718431897126*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"b8d6ab63-318f-4b91-b6f1-4709b9d36e26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"American Airlines Inc.\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Airline\"", ",", "\"AmericanAirlinesInc::24y82\""}], "]"}], 
    "\"Entity[\\\"Airline\\\", \\\"AmericanAirlinesInc::24y82\\\"]\"", 
    "\"airline\""},
   "Entity"], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.790502498029384*^9, 3.7905024995743313`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"cb7b1b98-387f-4e5b-b323-8f2cf2a78f27"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<Airline\>\"", ",", "\"\<AmericanAirlinesInc::24y82\>\""}], 
    "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.818718438848997*^9},
 CellLabel->
  "Out[61]//FullForm=",ExpressionUUID->"bb316436-17c1-4c24-9617-43e417c0e549"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "american airlines", Typeset`boxes$$ = 
   TemplateBox[{"\"American Airlines Inc.\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Airline\"", ",", "\"AmericanAirlinesInc::24y82\""}], "]"}], 
     "\"Entity[\\\"Airline\\\", \\\"AmericanAirlinesInc::24y82\\\"]\"", 
     "\"airline\""}, "Entity"], 
   Typeset`allassumptions$$ = {{
    "type" -> "MultiClash", "word" -> "", "template" -> 
     "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. \
Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", 
     "Values" -> {{
       "name" -> "Airline", "word" -> "the input", "desc" -> "an airline", 
        "input" -> "*MC.%7E-_*Airline-"}, {
       "name" -> "Financial", "word" -> "the input", "desc" -> 
        "a financial entity", "input" -> "*MC.%7E-_*Financial-"}, {
       "name" -> "Company", "word" -> "the input", "desc" -> "a company", 
        "input" -> "*MC.%7E-_*Company-"}, {
       "name" -> "Country", "word" -> "american", "desc" -> "a country", 
        "input" -> "*MC.%7E-_*Country-"}}}}, Typeset`assumptions$$ = {}, 
   Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    1.678014`6.676340573407834, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{403., {12., 28.}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{3.818718450782709*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"ea126251-57e1-491c-8116-51797c2ccd32"],

Cell[BoxData[
 TemplateBox[{"\"American Airlines Inc.\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Airline\"", ",", "\"AmericanAirlinesInc::24y82\""}], "]"}], 
   "\"Entity[\\\"Airline\\\", \\\"AmericanAirlinesInc::24y82\\\"]\"", 
   "\"airline\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.818718457904482*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"90cafd33-d124-4de2-aa66-3411349a301b"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<Airline\>\"", ",", "\"\<AmericanAirlinesInc::24y82\>\""}], 
    "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"11a3a5e0-3753-433e-bf17-f45b83630adf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"52dfc0b4-42a8-47d3-ac12-ffdebd9b26b7"],

Cell[CellGroupData[{

Cell["\:6709\:5173\:8bed\:6cd5\:7684\:66f4\:591a\:4fe1\:606f", "Section", "TentativeExample",ExpressionUUID->"f070cb82-46a5-4417-9988-d2cc36f502b7"],

Cell[CellGroupData[{

Cell["\:5176\:4ed6\:8bed\:6cd5", "Subsubsection", "TentativeExample",
 CellChangeTimes->{{3.8159180283858643`*^9, 
  3.815918031037328*^9}},ExpressionUUID->"579d01c8-6bd1-4a9f-8b03-\
9407b632b552"],

Cell["\:60a8\:5df2\:5b66\:4e60\:7684\:8bed\:6cd5\:ff1a", "Text", "TentativeExample",ExpressionUUID->"3a95a2e1-f6b3-4244-b40f-16bdca7672bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"Earth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"average diameter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8187192143831882`*^9, 3.8187192153366737`*^9}, {
  3.8188072246923027`*^9, 3.818807226869486*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"890c6c35-2482-48a1-aba5-f5041ab93b47"],

Cell[BoxData[
 TemplateBox[{
  "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818808356436466*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"fed9a369-386b-4fc2-95a7-68e5cba18bed"]
}, Open  ]],

Cell["\:53ef\:4ee5\:4f7f\:7528<\:5b9e\:4f53> [<\:5b9e\:4f53\:5c5e\:6027>]\
\:6216<\:5b9e\:4f53\:5c5e\:6027> [<\:5b9e\:4f53>]\:ff1a", "Text", \
"TentativeExample",ExpressionUUID->"26c4de56-f29c-439f-b4ea-26ab6a68a993"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Earth\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
    "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
   "Entity"], "[", 
  TemplateBox[{"\"average diameter\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
    "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
   "EntityProperty"], "]"}]], "Input",
 CellChangeTimes->{{3.792838829860692*^9, 3.7928388377177205`*^9}, {
  3.818719218271035*^9, 3.818719218621804*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"3ae4a66b-525c-49cd-93c3-569863bea6e2"],

Cell[BoxData[
 TemplateBox[{
  "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818808370090913*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"e9e7b655-03a9-4be3-a5a9-35569c984d5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"average diameter\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
    "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
   "EntityProperty"], "[", 
  TemplateBox[{"\"Earth\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
    "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
   "Entity"], "]"}]], "Input",
 CellChangeTimes->{{3.7928388662980413`*^9, 3.7928388720084696`*^9}, 
   3.818719224952331*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"60940f05-ee22-4579-9e44-4539be87152b"],

Cell[BoxData[
 TemplateBox[{
  "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.81880837983971*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"426f371e-e0ed-412e-9707-94875d0a88c8"]
}, Open  ]],

Cell["\:89c4\:8303\:540d\:79f0\:53ef\:7528\:4e8e\:5b9e\:4f53\:5c5e\:6027\:ff1a\
", "Text", \
"TentativeExample",ExpressionUUID->"a64860c9-39b2-458b-aacd-157cffc5012e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalName", "[", 
  TemplateBox[{"\"average diameter\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
    "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
   "EntityProperty"], "]"}]], "Input",
 CellChangeTimes->{{3.792838893979072*^9, 3.792838902503442*^9}, 
   3.818719240012322*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"3628bdd5-0d99-4783-8c79-cbcaf6fe1de4"],

Cell[BoxData["\<\"Diameter\"\>"], "Output",
 CellChangeTimes->{3.818808393445191*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"657b4b79-3532-4e51-b887-70e9ab9724b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"Earth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
    "Entity"], ",", "\"\<Diameter\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7928389102439194`*^9, 3.792838913276876*^9}, 
   3.8187192647759237`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"208dd4b0-b714-46fb-a142-60842d509ac9"],

Cell[BoxData[
 TemplateBox[{
  "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.818808416084278*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"157caa9e-4099-469a-89c5-60712801c1bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:591a\:4e2a\:67e5\:8be2", "Subsubsection", "TentativeExample",ExpressionUUID->"e4bf24f5-4bd0-465c-a288-61159492be33"],

Cell["\:53ef\:4ee5\:540c\:65f6\:8fdb\:884c\:591a\:4e2a\:67e5\:8be2\:ff1a", \
"Text", "TentativeExample",ExpressionUUID->"77d67edd-9f3e-453a-a208-\
e0cd12a65898"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"Earth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
     "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
    "Entity"], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"average diameter\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
       "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
      "EntityProperty"], ",", 
     TemplateBox[{"\"largest distance from Sun\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Planet\"", ",", "\"Apoapsis\""}], "]"}], 
       "\"EntityProperty[\\\"Planet\\\", \\\"Apoapsis\\\"]\""},
      "EntityProperty"], ",", 
     TemplateBox[{"\"mean density\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Planet\"", ",", "\"Density\""}], "]"}], 
       "\"EntityProperty[\\\"Planet\\\", \\\"Density\\\"]\""},
      "EntityProperty"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7928389808363934`*^9, 3.792839039359252*^9}, 
   3.818719337589271*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"2c87b976-73ae-4ad6-b008-d7a3a4f96ea9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", 
     "\"Miles\""},
    "Quantity"], ",", 
   TemplateBox[{
    "9.45091296531527158988990683`8.933541465906867*^7", "\"mi\"", "miles", 
     "\"Miles\""},
    "Quantity"], ",", 
   TemplateBox[{"5.515`4.", 
     RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"cm\"", "3"]}], "grams per centimeter cubed", 
     FractionBox["\"Grams\"", 
      SuperscriptBox["\"Centimeters\"", "3"]]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.818808448652074*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"45a9eae9-5d4f-43dd-aeac-0d3b5ab2bb26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Earth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
       "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
      "Entity"], ",", 
     TemplateBox[{"\"Mars\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Planet\"", ",", "\"Mars\""}], "]"}], 
       "\"Entity[\\\"Planet\\\", \\\"Mars\\\"]\"", "\"planet\""},
      "Entity"], ",", 
     TemplateBox[{"\"Jupiter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Planet\"", ",", "\"Jupiter\""}], "]"}], 
       "\"Entity[\\\"Planet\\\", \\\"Jupiter\\\"]\"", "\"planet\""},
      "Entity"]}], "}"}], ",", 
   TemplateBox[{"\"average diameter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
     "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7928390855785923`*^9, 3.792839099536539*^9}, 
   3.818719340463896*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"919cb125-07c9-45c5-b272-d47e2020c57c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", 
     "\"Miles\""},
    "Quantity"], ",", 
   TemplateBox[{
    "4212.3084519738061116159`4.3082903053785016", "\"mi\"", "miles", 
     "\"Miles\""},
    "Quantity"], ",", 
   TemplateBox[{
    "86924.8588244651236777221`4.091435216875118", "\"mi\"", "miles", 
     "\"Miles\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.818808505619589*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"2ae1a614-d582-4cee-8b63-027c0c8252e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Earth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
       "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""},
      "Entity"], ",", 
     TemplateBox[{"\"Mars\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Planet\"", ",", "\"Mars\""}], "]"}], 
       "\"Entity[\\\"Planet\\\", \\\"Mars\\\"]\"", "\"planet\""},
      "Entity"], ",", 
     TemplateBox[{"\"Jupiter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Planet\"", ",", "\"Jupiter\""}], "]"}], 
       "\"Entity[\\\"Planet\\\", \\\"Jupiter\\\"]\"", "\"planet\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"average diameter\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Planet\"", ",", "\"Diameter\""}], "]"}], 
       "\"EntityProperty[\\\"Planet\\\", \\\"Diameter\\\"]\""},
      "EntityProperty"], ",", 
     TemplateBox[{"\"largest distance from Sun\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Planet\"", ",", "\"Apoapsis\""}], "]"}], 
       "\"EntityProperty[\\\"Planet\\\", \\\"Apoapsis\\\"]\""},
      "EntityProperty"], ",", 
     TemplateBox[{"\"mean density\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Planet\"", ",", "\"Density\""}], "]"}], 
       "\"EntityProperty[\\\"Planet\\\", \\\"Density\\\"]\""},
      "EntityProperty"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7928391212189116`*^9, 3.818719351299136*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"7508944b-583e-43ae-a012-0a4ff9b46804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "7917.522626196346591628`7.503178180323586", "\"mi\"", "miles", 
       "\"Miles\""},
      "Quantity"], ",", 
     TemplateBox[{
      "9.45091296531527158988990683`8.933541465906867*^7", "\"mi\"", "miles", 
       "\"Miles\""},
      "Quantity"], ",", 
     TemplateBox[{"5.515`4.", 
       RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
         SuperscriptBox["\"cm\"", "3"]}], "grams per centimeter cubed", 
       FractionBox["\"Grams\"", 
        SuperscriptBox["\"Centimeters\"", "3"]]},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "4212.3084519738061116159`4.3082903053785016", "\"mi\"", "miles", 
       "\"Miles\""},
      "Quantity"], ",", 
     TemplateBox[{
      "1.548635528538179247738867945`8.731581328303081*^8", "\"mi\"", "miles",
        "\"Miles\""},
      "Quantity"], ",", 
     TemplateBox[{"3.934`5.", 
       RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
         SuperscriptBox["\"cm\"", "3"]}], "grams per centimeter cubed", 
       FractionBox["\"Grams\"", 
        SuperscriptBox["\"Centimeters\"", "3"]]},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "86924.8588244651236777221`4.091435216875118", "\"mi\"", "miles", 
       "\"Miles\""},
      "Quantity"], ",", 
     TemplateBox[{
      "5.070895068286747153048702208`8.834877674399586*^8", "\"mi\"", "miles",
        "\"Miles\""},
      "Quantity"], ",", 
     TemplateBox[{"1.3262`5.", 
       RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
         SuperscriptBox["\"cm\"", "3"]}], "grams per centimeter cubed", 
       FractionBox["\"Grams\"", 
        SuperscriptBox["\"Centimeters\"", "3"]]},
      "Quantity"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.818808513012659*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"c29089a6-458d-4954-ba19-ca11a5e6b1c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9a74d70c-08a5-414c-a531-2d86b25b1fb0"],

Cell[CellGroupData[{

Cell["EntityPrefetch", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.739095135785624*^9, 3.739095139109222*^9}, {3.739095245002616*^9, 
   3.739095250872656*^9}, {3.7798127916901293`*^9, 3.779812794992652*^9}, {
   3.781126594861667*^9, 3.781126598642011*^9}, {3.7904996127295322`*^9, 
   3.790499616084558*^9}, {3.790501142838915*^9, 3.7905011474075127`*^9}, {
   3.790503999177026*^9, 3.7905040028749723`*^9}, {3.7905040692235994`*^9, 
   3.7905040711764483`*^9}, {3.790504197806122*^9, 
   3.7905042133167295`*^9}},ExpressionUUID->"215fcccc-2ce2-4a78-b6d8-\
3954e90422ec"],

Cell[TextData[{
 StyleBox[ButtonBox["EntityPrefetch",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/EntityPrefetch.html"], 
    "https://reference.wolfram.com/language/ref/EntityPrefetch.html"},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/EntityPrefetch.html"],
  FontWeight->"Bold"],
 " \:53ef\:7528\:4e8e\:5c06\:5b9e\:4f53\:6570\:636e\:4e0b\:8f7d\:5230\:672c\
\:5730\:8ba1\:7b97\:673a\:ff0c\:4ee5\:52a0\:5feb\:68c0\:7d22\:901f\:5ea6\:ff1a"
}], "Text", "TentativeExample",
 CellChangeTimes->{
  3.811849308709354*^9},ExpressionUUID->"28cb8849-258a-46e3-89af-\
d48c47570f73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<Volcano\>\"", ",", "\"\<Baekdu\>\""}], "]"}], ",", 
    TemplateBox[{"\"elevation\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Volcano\"", ",", "\"Elevation\""}], "]"}], 
      "\"EntityProperty[\\\"Volcano\\\", \\\"Elevation\\\"]\""},
     "EntityProperty"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.792840398279473*^9, 3.810319960475972*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"e60d5a73-3963-43f9-b779-d96e52a747f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.813828`", ",", 
   TemplateBox[{"9002.62467191601`", "\"ft\"", "feet", "\"Feet\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8188105721489983`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"d5f4d5c3-7931-48a8-8e38-36bd3f517067"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<Volcano\>\"", ",", "\"\<Kos\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"country\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Volcano\"", ",", "\"Countries\""}], "]"}], 
        "\"EntityProperty[\\\"Volcano\\\", \\\"Countries\\\"]\""},
       "EntityProperty"], ",", 
      TemplateBox[{"\"latitude\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Volcano\"", ",", "\"Latitude\""}], "]"}], 
        "\"EntityProperty[\\\"Volcano\\\", \\\"Latitude\\\"]\""},
       "EntityProperty"], ",", 
      TemplateBox[{"\"longitude\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Volcano\"", ",", "\"Longitude\""}], "]"}], 
        "\"EntityProperty[\\\"Volcano\\\", \\\"Longitude\\\"]\""},
       "EntityProperty"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7928403610139456`*^9, 3.792840376849412*^9}, {
  3.792840432405055*^9, 3.7928404326124954`*^9}, {3.8103198952809877`*^9, 
  3.810319897724834*^9}, {3.810319956517984*^9, 3.81031995689832*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"f1791c91-6855-4682-b806-6a66cd288d51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.712622`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      TemplateBox[{"\"Greece\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
       "Entity"], "}"}], ",", 
     TemplateBox[{"36.852`", 
       RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
       "\"AngularDegrees\""},
      "QuantityPostfix"], ",", 
     TemplateBox[{"27.251`", 
       RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
       "\"AngularDegrees\""},
      "QuantityPostfix"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8188105877803164`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"38f0786b-74d0-4979-9193-ec70c4df91a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<Volcano\>\"", ",", "\"\<Saba\>\""}], "]"}], ",", 
    TemplateBox[{"\"image\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Volcano\"", ",", "\"Image\""}], "]"}], 
      "\"EntityProperty[\\\"Volcano\\\", \\\"Image\\\"]\""},
     "EntityProperty"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.7928404203777494`*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"7b5ceb29-7eda-4837-ab1b-389bace67716"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.40304`", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJx8vGVwHNuarrmKq1QkZmZmyWJmZmZmZmZmZmZmWRaDbdky7G1706G+0zE9
3dPTM3fm3h8TMb/mS6Wt433O6Va8zliZKpdc+eT7wVpLlovL9ksiIoTy6XDw
iy22zcuLLfXnhZPArPzU5KzEBNesgsTkxDyTOBJcTIA/Q/AHG99/ePfm43tc
MH79/uHVu7cgGODjlw9v7t7e39y/unp1d/7q5dnd65Ob18+vXx1fvYTj0eXd
3vntzun15vHVxtHl6tHFyuH50v7Z4t7p/O6LuZ2T6Z3jya3D8Y2DsfX90fXD
kbWDoZWDgaW9vsX93oW93oX9nvm9zrn9jtm99pl9UMv0Nqh5aqtpcrN+cqt2
fKNmdBPT+A6oagxT5ehuxchOxfBe6ehe/vBuzshu1shuxtB2Wv92at9WSu92
cs9W+sBBcs9ObOtGRMNyWN1SeP1yZMN6ZMt6aNNySPNicOMSKKBxyb9h0b9+
2a9uybsWk0fNsnv1klvVkkvFgkv5klP5olPFmkPlmn3FKggGjlXrjjUbINuq
NVx21et2tRsO9VtOjTvOTbvuTXtP8mje92w58Go99G47ggEc/TpP/LteBHSf
BvWehw1eR47cxI5fJ07fpc7fp8y9Tpm6SZ68TJ+5yVm8K1l9U7b+pnrrbc32
Q93WG1DDzpuWnTcDBw+jhw+TJx9nzz8vXP20dPMLzu7tDx9ATxBB+BUQfgU4
3r55fXN/f/7y/vTuDUDEBRwPLl/unt1sPccgrh1jEJcPznGCoP+C4CPE/e65
3Ud8u23Te61Tu8AOx9c4sVE3sflEsGp0q3Jks2Jkq3x4s2xoC1Q6sF00tJ07
uJ01tJ0+uJU2sJnSu5ncs5HUvZnYtQH4Ejo3Y1rWcYIYxLrVsMaV4IbFoMb5
wPoFkF/9gm/dvE/NAsizGpNb1aJr5QLgcyqbcypdcCiddyhbsStfsS1bxgVj
u8pV+6o164oVXDaVqzbVawDRvm4TODrWbTl/k0v9tmvDzhNQHKJP+7Fvx3Pg
GNx3ETZ4GTVyETeBQcQ0eZU4fpk2fZ01f1u0el+6dl+1+QAEa7ceHgk+AMHu
3bcDe29Hjj6Mv/g4df5p5vLLw8cP7374+CQ4ffvhPej9jz+Anq7cv3t49RbM
+Pbq/u3Fqzfnd2/Pbt/gKA+vXu1f3IENt19cbZxcA0Sw4fLB2dL+6cL+7whi
ENcOBpf3+xd3+5cOnggCvtap7ZbJreYJDByoYXwdhOEbW8cJlg+tlw2ulQ6u
lwysFfevF/WtFfVu5PWtZ/VtpPdvpPVtpPSsJXWuJXasxnesxbWvxrWvx7at
RTWt4gRDaxeDapaCahcCauf8a+d8amdB3jWzXtUzHlWzIPfKObeKWefyOWDn
WDrrUDJjXzRrWzRjW7xoXbJoVbyAqXQRZF22ZFO+bFG6CLIsW8JUsWxdhXG0
rVl/8iZuT/uaDYfaTcCKkW3YcW3ac2ved2858Gw78u16EdR7Gtp/Gjl8HjN2
GTt+FTd2Hj96njJ5mTF7nbd4V7h0V7b6umL9deXa68r1l9Wbrxu2Xrdvv+ne
vu/bexg8fDd8/GHk+UfA9OHTj6CPnz+BYICz+88Ivnz7/vrNu8tX7y5ePpy/
egCIz6/vwYYQS8GJmy9u/gbi7DeCo2t7oJHV3YGlnb6FHdyDEEK7ZncAH7Br
Gt9oHFuvH1vDVTe6CviqR9eqRzZApQOrJf0rxf2rRX0rBT0r+d3L+V2rOV0r
GT1rKT2ryd2riZ3LCe0rca1LsS3L0S1LUc3LkU1LkY0rOMGQmoWAqgW/qlnf
6lmfqmmv6mnPqimPyin3ikm3imnX8imXsmmX0tmv7Iqn7YqmbAumrQtmrArm
LAq/yrxozqJ43rJkAWT+vcoWLcqXrCpXgOOTN3F7PnHEUTrVbwNHl8Zd4AgQ
fbqOA7qPQ/qehw8Cx7Po4bPY0TOwYerUVerURdbsVR6YcRFT8dJN2fJdxcpt
w8arlnWMY+fuQ/f+exBQ++HLZ9CPP33BhZ/iQHGmwPErxHfvXr/7ePuAQby6
f7h8/fb8NWZDyIb7Fzd759cAEZy4dny+cnj6RHAaIwju2wV8wys7/YvbvfOb
ALF3fhcM2Dmz3Ta50TK+1jS61jCKgQPVjqyAqkZWK4dXKofWKgZXi/uWQYW9
ywU9S3ldS7mdizntS1kdS6mdy8kdS0ntS4lti/Eti9FN81GNC6Cw+nlQeD1k
wKWQ+qXAmnm/ijnv8imvCgA3iYErn3AtGwc5l044l045lEyDcHbWBVNW+ZOW
eROWeVMWeTOmuTMmeV9lmj9rUjhnWjSPy6QYk2nJglnpolnZkkX5slX5ypOs
K4Dgul014Nu0qQSUABHMuA1ybgCIj07sOPLvPgjsPQrufx428CJq6BQgJoyd
JY6dpY6fZU5f5cxeg3LnrgoXboqX7ipXX9Wsvq5bf9O49a5p+wGEU/v080+f
f/n5y6+/wBEXjPFT+Ba8AFDilrz/8OHu3Yebt18hQkR9cXv/mA1vAeLvCb4A
gnO7z4Hg2PoeTnBoeXtgcbtnbqNnbqt7drNzZqt9arN1Yr15bBUI1o+sgnB8
1UNLFUPL5YNLZf3LpX1LhT2LoPzuxdzO+ZyOhay2ucyW+fTW+aSW+fiWufim
udim2eiG2ci66YiambDameCq6eCamZCaeRCGr3LGu3Tao2TSrWTMpXTUuWTU
qXjEsWjYoWjUvnAMZFMwDrLOH7fKG7PIHTfPGTPLHjXJGjPOnjDKnDDM+iqj
7EnD3CmjvGnj/BmQYf40yKhgxrhw1rhoDmQOHEu/yrJsGSACO+D4BPSJqVM9
FlQ9W/a8Wnd92vf9uvaDeo7AjxEDJ5GDz2OGXiSMniZPXKRNX2ZMXWbNXOfM
3eYvvCycvytZfFW2fF+x+rZqHdOXnz//9MuXn3/96Zfffv5ev/7hFxAM4Fvw
mk9ffvzxMxZX33z8+Pr9e4ilt/cPjznx/sXdq+Pr28PL64OLq92zq+0XFxvH
p2uHJyv7x4t7z+d2j6a39ifW98bXdsdWd4Bg/8JW79xG18xG5/R6x9RG++T6
N4IrDWMrQBCLn8PLVYOLZQOLpf0LxT0LRd3z+V3zeZ1zOR1zWW0zGS0z6c3T
aY0zyY3TsfVT0fWT0bWTkTUT4VUToVXjweXjgRXj/mWPKp8C+YD1SifcC8dd
C8cc8wftCwZt8wds8vpt8gatcwescgYtMA2bZw+ZZQ+bZA4/yxgyTh80Shsy
TBvSSxvWSf0qrbRh7fQRnYxR3cwxvZwJ3exxXDpwzJnQy53Uz5t6VjT3JNye
wBSED8CklhUrICsIsDVY8ePcuAVya9z2bNnBOHYeBnQdBHUehPYcR/afxA5j
mTFx9CJpHMuPUORkTN1mTt/lzL3MX7wvXH4LesKHI3sSXMQFL/j80yfA9/HH
D+9+xIocjODDw18J3twdXd3gBPdOr7ZOzoHg6sHz5b2jpd3D+Z2/Ehxd2R5Z
3upf2OiZXe+cXOuYWgN8bRNrEEKB4FeIj4H0iWBx7xzgK+yay2mfAWW2Tme0
TKU1TaU0TCTXTSbUTcRUj0dWj0VUjYVVjISWjQaVDgeWjPgXD/sUj2AqGQd5
FI+5F4265o865Q3b5fRZ5/Ra5fRaZvdYZPWaZ/aYZvaZZPSaZg6YZAw8ghsw
TO03SOnTT+7XTRrQShzQTMKkkdivnjygkTKomToE0s4c1coYAWl+k1bmqHbW
mEHe1JNwe+IowaR/jbeli0DTCiti1yE5OtStO9VuujZseTTvgh+92w582vZ8
2/cBJXAM7wNLYtE1ZuQ8buwyYfQ6afw2dfplxtx91sLb7MWH3/746x/+9Nsf
//wHEAxw3wE18N2T9YDd+4/v3n14ePPhLWRDvLO4fv366tWr07vb46vLg7OL
/dPzvbPznRdnW89frB89Xz04Wt47WNrdn93em97cGV/ZGlveHF7aHFxY75tZ
7Zpe7pxaaZ9Yah1fbhlbahlbaRpZqh9YqOmfqx5YrOifL+2ZKemeLuyeKeia
zm2bym6ZAHwZzRPJ9aNJdSPJ9eNJdWOxFcORJf2R5cNhpYNBhX1+BT0+uT0+
+b2+BQN+RUNuuX2uOb2uuQMeBcNuhSNOuQPW6T3mqZ0WmV1mGZ0maZ3GKe0G
yR2GKZ1GqT3P0vt0Ejoe1QXSiu/WiO1Uj+lSielUiu5UjO1RiutVju9TSehX
TRxQTRpUSx7CpZqCSS11WDV9RD1zTDNjTDtjHKSTOaGbNamXPaWfM22QO2OY
N4sPjPLnnhUumBYvmZeuWJStgiUBIlbEYqEVo4n5Eesi9zCOYMmOg4Cuo+De
EyhZwwbOwgfPI4ehAbmKHb9NmHqVNHOfPPsGqH1PEIDiBHGIT+778MP7rxDf
v4M2/5HgSyB4cXd3cnMNEA/PMY4Acfvk9O8JTqxuf0+wZ+obwdGl5tHF5tHl
xuHFuv756r7Zyr75st7Z4q6pwo6JvI7J3PaJrObxjMbRlPqRpNqhhBpMibWj
8dXD0WWDEcV9ocX9IUV9wQV9Afk9frk93jndXrm9njk9Hjl9zlndDhmY7DJ7
bNK7LFI6zVI6DBIa9eIbdOMaQTrxLboJrTrxbdpxrZqxrVpxbZqx7SD1mA7V
qDaVyHbFiHb5iA7ZyA65qE6FmG4cpVJ8n3JCP0gp8asUkweUUgaVU4dU0oaB
pnrKsEbqiGbaqFb62BNN/AgccYgmRYvAEWRVsQ5mxNMl5MfHpmP3qenwaj30
aj+G5tG/5wz6x6D+y5DB67Dh24jRl9GTr2Kn3sbNvPnjn34B/enPv+L6wx9/
/vW3L7/8+vnnXz6Bvvz0w+cvH3/89P6HH999/OHh/ce3Dz+8u3//5uXbV7f3
d48Q7y7ubs5urp5fX2FmvDjfPQUbnqwfHq3uYwTndvYxgmubYyvro0sbwwtr
fbMrQLBrYrltfLFlZLF5eKFpaLFhYL6mb6aie6qsewbwFbSP57WOZreOZTaP
pNUPJ9cMJNYMggBffPVgbOVgVFlfeFFvaEF3QHaHX06HX3anT3aHd1ane0a7
a0aHS3q7S0aXQ3qHbWqHTUq7VWqHZUq7WVK7cUKLTmyDRkydWlQNHLVim0Bq
0Y3KEXClSS2q5RFcq1J4q2JYi2xok0xwk3RIi1RoO0g6rEMmsks2qhskF90j
G/NV0jE9MrG9snF98gkDComDCvH9igkDIOWkIZXkYdWUEbXUUZB62phG+rhW
5qRuzox+3pxB/rxhwYJhwZxZyTIItyTQxJJj7Y5D/TbIEes79lyx5vHYq/PE
t+vUt+csoP8ycOAqZPg2fOxl5MR91OQ9ju/Pf/kN9D1BHOJPP//4O4iYPrz9
+PDq4fXdm5c396/w2bbLl7cQTnEz7p2dbp+82Dg6BoIre/uLO3szW7uT61vj
qxt/JTi91Dm+0D66APgaB+cAXx24r3uytGOspBPDl9sykt00lN44lFo/kFTd
H1/RE1/VH1fZF13eG17cGZzfHpDT4pfZ4pvR7JXa5JnS6JHc6JJY75zQ4JhQ
bxffYJvQYB5dax5XbxHXZBbXaJrQbJbYYhTbpBNZCwRVI6sVQ8tBKuE1IIXQ
atnASqWwBpBiWJNCaKN8SJNsUINUUL1EYL1YUKN4UAtIIrhVIrRNMqxdKrwD
U2QnSOJRklFdUtHdOEqZ6G4QkJWL7ZWP6wOUSomDuAAooMQ56mRPg4CmccE8
6Cm0WpavWVdu2FRt2lbv2NZuO9TtOzbuuzY/d2t77tl+5tl56tV15tV74d9/
HTB8EzJyFzz2ErfeE0EA+tsffvqHED99/vDjo979CAnx/vW7V8ARzHj9+vby
5fX57fWLW3DixcH5i50XJ5vHR2sH+7gN57d2Zta3J1e+EuyfWemZXOwYm28b
mW0cmmkYnK7rm67unihvHytuHS5sw9yX1TiYXteXXNuXWN0TW9YVVdweVdoV
XtQemNvsm1nvlVbnkVLjlljjmlDtmdTgEl9jF1luFlxo7J9v4Jer71+gH1io
G1CkF1KqG1SmFViiFVKuH1WrH1WvGValGVWrFFYhG1Aq5Vsk6Vci5V8q6Vsq
4VMiG1yDKagOBOwkA+vE/WrF/GtFAxtEAptEg5rFgltA4iGtYqGt4mFtuERx
RbSLR3VKRGMcJSMwuNJRXd9zBGPiR+AIrsT9qJkxAdLLncUtaVS4aFKyYlq6
ala2Zl4OoXXHsnrbtmbftn7fseHYsfnYpfmFc+uJS9sL184XHt1nXn2XvgPX
voM3T/j+8k9/gOMTQVzfQ8Q5fv7ph49fMIgPP7yFwub1u3sgeHF3BQRPry+P
r86fCK4fHgBEyIYL27tAcGp1E0uF3wi2j861Dj/i65+s6Zms7BwraRkuaBrI
axkCfGm1vclVXXEVndGlbeEFLSG5jWGFbUG5TT4ZdV5pNThB57hKu8gS65Ai
U78cXdcUJZsoKbMwMZNgsWehImZhml65mv4F6j4F8p7Zit55miHl2mHVqkFl
yiHlCiFlOEFxH0yADyCK+5aBJHwrJf2qxP1rxPyqRX2qRXyrRfwbhQMwAUcc
pUgwJtGQFpAwrrBWkfA2scgOkER4Owjn+AQRBAPckhBdcYg4R+2sKTAjcISg
aly09Kx42aR4zbhkzbxy26IKIO5a1exZ1+7b1B3Y1h/b1h/aNx85tBw7tz93
6zr16Dn37L34059/+fNffv3LPwFB4Age/Pm3PwC7z/gR9MuvkBB/BP308w+g
Lz//iEP88Pk9cLx/DyXN7dnNxen1+Yurs6PLMyC4++J4+/nh5tEhQFzZP4RA
Orux8/cEW4amG/un6nsnqrrGy9tHipr68xr6Mut7U2t6Eis64kpbI4tbQvMb
ArPq/NKr/bPqvVKrXBPLQW5JVfbRxUY+6WoO0eIGvsI6nlxVZ6qcNZK0QBJm
SNwCBgJGIRJ28fIuGdKu6bLuWfJeuaJOaQzTSCHnDBH3HEmfQgnvAhHPfCH3
XGHPAjGfYkH3AkyeJUJepcLeFZi8KoW8K4V86wX9vimgAZdQYKNgUJNAYKMA
PghuEgr9xvGbQ7834xNKsCFOEM+MIM30Ka2Mad3sOYO8RYPCZcOiFVym5dum
FTu4zCp3H7UHR+v6A9vGg0eImBmB498QhNM//PEnnCAOEQj+DiKUN48Qf/z5
B4CIEXx1g+M7uTw9Pj/dPzt5IrgBBA8O5nd3Zze2JtbWoZgZWoQ8uNQ9tdg2
OtM0PF0/MFHTO17RNVbaDgbsy3nEl1DVDdaLKGrG8fmnVvkklbvFFDqG59gG
Z9iFZNsGZxm5x0kburPlTBFbBTGVEI8CoskiiiyiguQRTR7xaTJU7CXNghTs
ouQdYsQtQkjKDoijTdbxZZmEC9slAlB+uxSOTSLbNoXrkMF1yuS45HDdCrge
JVyvUl7vcu6j+H0rv8qvit+vhte/htevDsTnX4+LP6ABBBxxYwqHtIFEQttF
wzrEI7oes2QPJErZ6D6Z2H6FuEHFpBHllDGV1HHVtAmQRtqkNkZwQT93Sb9g
xaBw1aBoTb9w1ah82/Crdg0qdvXLd3CZ1x1ZNBxZN5/YtZ05dJw5dp7jBJ8E
p2BDgIjreyfiHL/89BGO2PU/Qrvx49uPb25eX59dn57fXADBw9Pj/ZPDvedH
O0cHWwd7a/s7S3s7MzubUxsb4+tro6ur/YuL3bPz7VNzbZOzzWMz1f1jZV2D
Jd3DoLyW/tSarvSmUSg4o0q6QwtafdNqHMKyDVwi1cx9VU095fUcJDWspNTN
JVVMBWX0KGxZROBHiPevInwnEh+iClP45PiktHiltMh8cnCKyKKIpoTEzLla
3qJmkSLm0VyzSI5FDMsmkWGTTHPMoLvm0jwKyZ5FyKMIueUj52yGZw7LI5vt
ncfxK+YLrOANrGb7VjG9q9i+NVzfehC/bwPYU9ivQdSvDkKuQGArX3Abf0i7
YFinSFiXWGSXeGSvRHSPWHi3ZHS/fMKIUsqEcuqUStq0cvqcWsasZuqMdtqM
dvqcdua8VtaCVs6iRs6yeu6yVsm2RsmWWsmOaumuatmeSsW+StWBWtWhZuWB
dvWRfv0L4+YL07ZLs/YrQPYEER8/EfyHNgSC4ET89NOXjw/v72/vby5uzy9u
L08hip49fyK4ub+7urc9v7c5s7s+ubk2vr4yvLYysLSEEZyeqR8aqx4Yreob
regfLe4aymzqTKvryGjogcozOK85orA9rrzXwi8ZCarAbWdL6iCaGCILYZiI
vESKIAghFkJMhBgI0f6BiI/XCXQSlQ2CweNFDiKKIZYKVcKEo+TAVndja3uz
DYI5ZpEU0yiCeSyyTEI2acgxB7kVIe8ykm8JxTWD5prOcM/i8cpn+Zax/Ct5
fKvpXpgY3nVMrzq2dy2fd52Ad62QdzW/Ty2vfzMnsJUb1MYX2i4Q2iEU3iUa
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
I/Z3SV9NjUhMLEuSBBCvBlHCjKXqKWgcIWiVwmuTw7AtoNiVEB0rCC41WHJ0
r4MjwQ2bmoNeg+jbRoCI6teFyRdSJCTKARQ4iIKHUegIIQw4TpNj5gEiPXGN
nrxKS15gpC6yMpa42av8eRtChdvvP/+I692nHx5+/Pjm43v8V5Zu7l99vw0G
rHdyeY43fXvPjzaP9h/bdgzf/ObGzNoqFC0jcxg+iJ/jSyuVLW3uQSGKurrw
USkcBoEGXkK8QnxcQd6v+NDXLPQkrGGnEPFeHr8iyMcCCzDpyM7aWE1JnEX/
623kYyE9DQlfL/OM9FBXF0NjIwVZGSYkRi4HSUnyMHlQeJhLWmpgbIyXhbmK
nCxHSpIuKkJhMhCHh0AnfU1uEBXoZAKF8PX0W9IkE/46EUR5nMGDcICVtnRI
gQTEA4Ga/K0bfXIufEA6DdHYWCdCkkIcTYK4KUXJnaobxjBN5rHOpdoVUR3L
yM4VJNdKOJKdy6lu5RT3aqJXC5YWsczYiRH0A/VhwjgOo+BxFDZJiJgjRi+Q
Y5fI8YvkhFly8hwtbZGZtcrJhUZj88Pnj+8/fXj6FYn7D+8ef+PsAd9MePny
5fntLb74fnhxCi3D9vHJ5uExRM7Hpm9rcWt1dn1+amV6Zm1ucXtpfGmqpL7c
ydddUkWOR4hL52OxhNk0LpnMBPMQ/1rsURGZhp6yGPGxQcODFY2MeGjYQFGa
39vFxNZEJcjLfH9lwFRbXFmCpiXPCXQzzk8PqCqJ6eso2FjpzM30M9AXfGYs
amMtp6MjUFAQcn29vLk9nJYaEBHuZGerqaTI5bAwDIBVSABJifHysRhP9SbW
GP6+AiWh758rHM/jjA7x92XOY3IEC3L4yUJSHH4pNpGLZU+sISJxH+fPBRBZ
DPGrI3krqo43n3U8xy6NbZ/NtM9j2Bfy2JcwHcoZzjVEj1asvPHuJfj0gZBv
H/J5lO8g8htEAcOEoFFCyDgxdIIcPkWOmiTHTlESpujJs6z0RTyWvv/4FgQd
3wcg+P7dq7cPt6/vr+5eX728P795+fzq5uji6ujy4uDifO/sdPf0bP3gdP3g
fOv4DNw3vTq7vD23ujc9udxdXJ3s5G2oayKroCHAEkQSChxNAzlBCQavKAF6
ZSqLKCAugMcghgiiCmIQKezHMEWmwg0Bo8HN5OMgZQVecxM1GzNFPxet8iyP
yiznmkzHjaHsxmy3WE/1hd7cldGyu5PRjqYEdxelna2W2YkCEwOGtgaytxNm
c1BRiW9DS7K1g7KDk66Xj7mGurCutpiKAl0G0hQV4SUni0cI/k3GBmaW5hba
WqqqymIa6kIyMiRs2puCmCwEpRaXD/HxY8WOgDidJURkC5KxRPBYZMELgB2X
jY0FRMkCEmQ+CSJbHCE2EpCl8vJT+Pl5hEW4ohL8bEEW9iOx0M+DGEJCek4c
PW+6dqCSd62iVwvbvJTPpZ3g3Ik8epHHAHLvx+Q1RPYfoQSMguA6yW+QJ3Sc
7DdA8u1lhY1woydo4cPksEFq9Chv6qJg1hp/xtqHD+9AHz9+fJzx/OH+zfvb
Vw/Xd28u7+7ProHg7fHlNUDch4Yd2/3y/Pn1/dr+i4WN7YW1lYW1mfm1kf7R
6oLyCFtnJQc3ZVNrCRMrSUc3dRNLGVVNPh0jMR0jCUU1fn4xhpSSqL6Zhpap
koQqiyGMEA9WCJAoeDmPzZu5OsrWV4fmZQWGBVrrqDLN9Hj0FJGZKqrLMGsv
sMsN1ajPsAt3kXUzF4zyU/dyloqLNvzwMHW8W91U7e7lIpiXY5mXZ1PbEByT
YO0TaNQ3VLm40r+9OzEyVBsfaW9nIe7hKKGvwcGmUhETalVhAXElBUVFRUkD
Q/mAYDMzCyFjU5atg5BXgLJPoKaXn46rh56lvZqhlYKupZySjrCkMkdSjq2o
JiQtxyskTJWT5xWVoIvJ8TCFsB6RKoyookjTTERTT8DYWNLUVErfSFhHXwBO
FdV5RWSZDCEa4rKQiBRVzpAgbYFkXTm6MaIOhSynAqZ7Kcu7guNTw/GpY3nX
U93riK61vCF9JM82kmcH3X+AHjTEDB1nhU1QAgd4oofocUOspHG+jHn+bChK
V95/+ITr3ftPb99+enn/8eblh6vbdxc3D2fXr08ubo7PLg9fnD/Ot2Bhc351
eXFtafdgc/9ofWFppHegurQyLirePjHVCW6dtb20mhZdS4+jqsnQMxIMCrfU
MZSycdEztVUzslKw99DRMhah8yEG92s3Bg+znDTb283Q200rNd7ez0PdzVHV
1FDYSIthZcSjKomUxVCQIzfaS7wkQb+vxq8yw6a+wDXIXdrZmtfBimWsi9zs
2UnRqka6KNBPIihI3s5R2M1bpb41ubA8NjDEPjDIIT8vsqYiVkedR10JWZuJ
Mx+rXRYP8ylmslno2TMpe2dFv2DtwHAdD381BzdFIzNxFQ1+BVU+dUMxTVMp
SWW2gpYQENQzlpdXEhSXYsFRQVVQXl1AXJEpq8UnqcESUCTqWItrmnLMHUQs
nUSMrLjPbLm27mJwqqJPM7KVeOakYuSsI/9MlUdOgiQlTZSWR8KiBEVppCJJ
1lJiPzMQtHUQcfUTcA/juMUJBhZyAquZAc2UgG5y4DA5ZAYFziGfYRTRRUjo
JKf2k9OHSBmj5OzJd+++vH3/5d27n+8fvry6/3L36tP17cermw9A8MXly6PT
y/3np3tHx1sHe+u7m6tbKy/O99Y3pycmOxsa8xOTfSOinFJSPDIyPV1cVZxd
FUNC9EPDDZ2cZF1c5IOCdTx8dGSVuIKSNH5JpKhJcnCXMbcR4XCx3opJRSry
HE9nraxU94wUx/rKcBdbRToBiXCQGB9ysBQw1EQm2sjejKSnjApSDSK9pR2f
0Z+pIQMVpCGDvJ24TpZEVVnkZkeOD5fydWf7+wpraiFJWSQghrhCSAXuqhzT
zFLV0lpNXZXr6qRSVxXi66nOy8Qsz0P9VlI+pjNhISSvRDe2ENUx4krKIwk5
JCwJEZIgocDik0CCciSOKOIXJ3KEkawSn5gUS1CUxidEFpVhC0rRxZTYetZK
OtaK4lpceWM+QWUkZ4BUTJGyEVI3Qfo2FENrioYx8o9R17XgUTWimbvJuYUZ
eUVbWvroyxryWfsoGztLqFsLqtiIKTvIyztpSjgZCDlbMe0cBf3jBELzGf4l
ZL86gn87MWiIFDGCQltRfCc5qR+BkgHi+JuHX14//Pz6zc8v3/x0+/rz1d0P
l9cfLq7enV3en5zdHp6cAb79w72dw+3tg83t/cW52Y7GhpTMDJ/oKDs/XyNf
X6OIcMuYaJvkZMeICBM3F3llFSTIj9RUkYO9kLWtODyokN/Bd/IayOAZMjen
aCgjFWlCQ0lMeaZ/e21kbYlnSa79zHi+u4Mqg4gEeZAYG/m6ivu6CQf7SUSF
ylk8Q6kJWj4uIjEhKhb6BFVplBKpFOUvZG+KAt3JMUF8mXGyVcUGcVHSOjrI
wBhJKSCuMJZneYW+zsGISxFj4+yGh3NXlqr9vNRMDAQEuEhWgsahY3NmPPTH
tpEHSciQhcQRnYv4RJCgJBkePGlVXkFpkpgiVVaNwyuKhKSokPWklfnE5FgU
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
yKRHqRcnaHYXmgwWm19MpR/2x8/WuL9aSl1utVlptz6ZCl1o9Ruvj9aD7I9Q
QrBhYZZJeKCcuhKNn40EBRAvH1J6jJyyqiR5dYqOkYC0DNanqCug5CiVohS1
GG9aQ75STaZ0eigtyBHFBZETI9huDigsWNDakqilgRTlkZ4WMGJA12+kifzd
eVqrn7VX6mdECXlYEbQVkaIE0lThU1IQhiRIpZOe1vC/zb1jW0yxxV8KNJgM
czv90DhPFz9TLWMxVX1eTUOuojrZyl7C0Unaz0dNW51sbSY4PZJxvFl2d9qw
OJ4UE6qgr4MU5JAYZHk95O0n5eMvmZ5lNDWX3NTsPjwasrAY39jg0N3o19sY
ONwevjaT/fFl3+VhTUu1S1O5Y3+LT3WBxVC7P0SwwjTDtmrX5nLnznqXogyV
vBTZnaXorcWY8gLdqGCBtIzg2ARv/0AbazsddQ0JETEmi0MAWDwsAo2BsSM9
bk8g0zGCXAFseY5XiEuiEyksMoGBaPxkNX05aJHgNTxMJC6MzHUo3VU+AzWe
af5SfkaoJkL+oDPguCf0diIx1BgdDoY0paj2F5vkhshujaTWpbvKspGdAX9z
eWC4vzw4l8OD+CBsypKg9pBXJUI1oqZLVdYgQhYDplLiyNyI4OPM8rBHrpYo
2o+0PeHdW6UT6oJifUkhnsjbGdmYIwUZJCWKjHSQpRHZy4Hr5UAL9WJF+NBz
4kT66ywqMjWTQhW97cXkxbDZPBoFCQiyyLTHPWuP09xEbDGXRCZSsE0YhG/L
hWRsLw/EQCFppPOMX8+ECzVJVbX//Gzu53dTfc2hvg4ik91RzeXWgW484T68
caGiKTEyeZka+VnqBbmaHa127c02JblqLTXPynKVO+pNxrrshprt/s9f5//n
n3b+7982/+3z0v/7L8f//c+bP98N/Psflv/1l/l/+jz6f/2vyzcnJfUVJgeb
iTNjPl2trjdHXZ9er//Pf3v3H//8+pf3e5tLHW6uhjZ2WibPFNQ1xCQkOUwm
thJNIP5ugh5fXYVPQaYSSNgXNptJoRFJDMTkI0nJc4TEEA8DSYqiEA/56kzr
llzrkTKnpkSdfA+hQmeBoWSD+SLLsRzDeGtCV5ZeX4HVYLlbso/KREu8iTJR
VxaVZzpV5jr7ukpoqSIZGRLUt8oabKh1ZVWQsiaydxWDIlxJBStuTY0J0OAD
owBPSqgf0cMWgQ3zYwRzo/jH2izLsxX8XJCWMnKwQk7WdB9XAQ87dlKEXFyA
UFqEUHIwoz5feajRJidGycmE4WDCr6vG5oXAIsqjpatEZxLpHDKNRaHQCZAW
6WT4fICXTKUxmFwOgY4vnGDBUxAyrAbZzlk6JEyjsz2svtL157dD/+Nfdt8+
b/qPPy5e7eQlBgnU5GrO9HuOdjvXFGsWpEuW5MgUpYvNDtrPdFsu9tsez3p9
OIx/2Ik+HPeZqLffHopqyHzWV+682B052x76erf64bjhcr1oeTjicju3Iltj
rMuhq95wacpzbzXpn78c//tfPv3zT+/+8uP9//i3v3x+cykqRISQJSxAFBOh
i0Iy51KYPBQWkwFBhMFgwufgYbIxK8IzComdyeWhcUgI35qChVleASJ8n0FH
GkqEjBjjogTjyiT91jTDplj1uGdou8atM1itN1xzLsegLVpipd5yvNzqbCZ3
pCq8qzQKWmF3S9HBloiMWIPkCG0tSCsKBGU1joqukLAs0jRkGllyrJ34A4Ll
AwNljI2QvS3dx0sgM1W9IFsj0I/i4YxiQihRHqi1UHNlwD0/XtTHDkX48ThZ
Ihcbor8bn4c9K8CZNz9BrThJLt6XkhlOG28zC3akWGkjcSZ6pk73ctJRVxEW
EKSyuGQKHUt5wBGKEGy1C9uHQSPhe2Ww3QDY0qCwDEdMgQmtBIsfySqgxATD
zDQjP3fBxZHY//jj/L9+Gv9y2TTe7JHoL9BZbtrfYD3UYt3X+Gyu3+7VUeza
iN2H53Gfn8feznu9WfR9N+/7cdF/vclousVkc9K7t9Z4od9zYyxkrsv3bDlr
fTBiti1gpS90vt37cjn55VbK0UzgxrDLv3zq+d9/O/7XX28/3+2+u9z4+c3R
yngLkwdbmWRha2dUERGmgACDw2VwuWwsDWA71PFfIcE2Iz0uRjNoZDZ8Li4P
h8XAFtLhhfxcpKaIclLMMmM0UwJkGrKM8vwlK8Pkg3RQQ5D8cKzBWp5trTfv
cJryfKXx/kDAbGNgrKuChjCy1uYtz3bOijPRV0OWhmxRNpIRRxKySEQOUfmQ
jYuYT7BcQLC0hwfH2grZWaGq0meFWerBPvTYUE5kEDU2nFZbpNheotmUpbo1
7FufrVqXq1GYpOBjR4rwEYz2kyhM0Rto9Gors2ou0I12J8Z6oJRAhp81xddK
QE0cGanSHUwVxAUIZHwLN/Hrtg189flxwZ9BwH8Nioz1FFQG4hdCQqJIRg4Z
GlDsbTkl+eZBnoKhHkJNxTbtxXadxY5libopgVK5sUoLA0FNxfo9daZdVbq5
sazMCHJXqfRkk9rplN3VtN31hO1Rp8HHebe9Tv2LVY+DZfeXx9HXe9EXGzGv
D7Kv1tPOllOOpuKuV9P3RkOPxkJnm2ynG83P50P+t/dtXy57fns586e3S//t
w9qHs5G2kgAhcSqEQaghAZSYFEdUkgMPJDyHNAYZS+LEb3spsW1+2C4vColD
wB5OJCLAgyURIlKRxcrIrAS1lEiZaF/+2lwDex2U5Cse4cjXnGx4NxR32eHf
HinTm6i43eZUFSleHCZtLo9sNFFJmmVJhl2kvw4vDTlYKEkJU+VkePRMeWU0
kLWLQHC0ooUlQUMdOdmhcH+exgqdglTxME8U6YXyE/hK00RqC2UgKI1UGU5W
mX/cy/mn27q5FveqJPWxRo+96eTx5oDfXvb88XVfbYZBnBe3IFoyzZ9dEC2d
G65pq0VX4CJpNpJgI2EG4lK/7p2AD8qGMo74uPuRAM8wh0CCIotBodAgs9DI
SFIECXNRiJdYTYFJarh4T61NW5lFXa5pc6Hj1nju2lD+XE/K1mxmb6N7pJ9g
TKBAVZ5qZZ58U5niUKvWzozN6arj5rD+ap/m1bLN+Zz5Vq/a3qj+iyX7++ch
O9P2C/3m19vh/z9V7xnUWLplC35YIQnkvfcCSSDhhffee++991YggQBhJGEF
QnjvIYHMJH1mZZa5VXXr3rq3r+l7+/Xr7jfRPW/mzY+ZmIj5P5+qOsZE7Dhx
EimUOmftvdda5+zv6Ok4f3HY29DlNVjFbMnFwO+sbxVZdcGH81EPtqxvbur/
46eFN/u1d5aiM1PWRKPXUAWPwkT8QmRueLIziYbEEJyQHvZ8s4+7utqJz9k+
9Ofwn9rMfqDIXxF0dQTQAUcGYQsyGdWF9LpiSl6KY2kGsr6QHB8EChI9SlLI
g1XyB3PO583Sc13MjSHpfCZhbyJa1+BZm06AwrihyLM6XwFNGcYNoFwACQ9J
0MU/BBmRgErKwAeHAG8ZyEl1HuoUjrRz5oak1hnfs5XIq43om81YGNuzvvo2
5vu9grOZ6I2hoOOZpK3xuJWhyKXB6K2prIFK2XRX6GiDT06YQ34UqM9AFUSC
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
4oX4MxkkgEHY49fH60Cj9Kt6YZNcsuK88xPltXkBmraUuhx5pNzBjw3KEkh5
EeiUAFCVSu6vluva1Bkhrl5UgHMA3nxkgIIa6U+F7i8+xCFIBkLlYKzd49bq
t61nrg/j3tkC9zXM5ybfLxtRl5OyfY3wUO+5NsC+Xw29Xw03dbPOFoK/uSw+
nA56vpG8MSI/nAxY6RUsdXJfWhJersRdTgfsDnu+XI1ZaKK8Xo+/nA+6Nqrf
bSfCBgUz4dvj1K92404nxCut2ONR3qul4Ospn/uF4Edz+MWU/81c6L7GV19N
r4wAcSJQHulYoAYducy6JPLGWJq+Sb2rT7tbTt7RKHY0Pk/ryd+dla31yZ6v
Z+zqgncn1afz0efmOPOgbL5XZNX7moYk+g5WVzGqNQ9h9+NDcuu4/6Y2oKfI
oz3XbanPqyXDabQCP9PMMHZyLk3h50a1ZUBwPKE4nZQfjovPp+RPq6Ew396s
R3zeTXhtify4FQ/r7rfneT+c5H17kP3DSf7PN2XvDzK+Ost9tQuTJ/7zed5P
j5VJkcS4UCyUhSnRVAEdKIQgIYwWonT34oCYIFpmrGdCCDfSj5EUJkyPliUG
8wqSZMUpsjh/QlY4syxJkB1KzAzGVCSyFGTARwEZEcR7OzTmSHIjCPG+CCkZ
iMhAKcAmhXAyo+nlWYzuGtZUr+DZTvTTXvjDuu8Li+/HndCFOlddIViq9RjP
A8Ym7MmMfHOYf2kMPDX4W4bFXx3n/fSs6t1e9jfnJTMNtHNDCLQVUMw8rcR9
tCafa33eLEe+W4+/nvV/tRb154eKD1uJrzdj3thiP+7Efb2f9Mzkdzktf1oK
+GAJf1zwO9F63RtDP9pSIJleTIfujwcttEhyfIGmXFiXTPSlgpoUZmUCyzyY
UZ8u6cyTLLR6b/R7zzVy32zmLHVKzV3S26Uky7DywhS3rQtcG/FZGvC0jHsf
zIesjnmN1JJac9078gmVCU7aBqFlOMTc47czEbPU59eShm5KddM3cOfahXOt
fOuYcnVAOtNIer4Serug2tPw9zRcWICwF8GAxQi3720RX/bjvj1Kho30cVH9
zBj8uBT28SD1D09Vf35T+/1d0Q93RT/el1RlUqqzqL018p5qWawvyIxA9lQp
ZwcS4lQu+TGU7orAsmSeggYivJyr0jzzYthJweSiJHG4AiUmAm+IOAUoSEDi
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
obE=
      "], {{0, 75.}, {112.5, 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{96, 96}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "Source" -> 
        "http://www.volcano.si.edu/world/volcano.cfm?vnum=1600-01=&volpage=\
photos&photo=094035", "URL" -> 
        "http://www.wolframcdn.com/waimage/hset011/ccf/\
ccf18f1b132c2a40bed6f10e599565ab_v001s.jpg"]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{112.5, 75.},
    PlotRange->{{0, 112.5}, {0, 75.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.818810597704052*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"b269ad3e-ae3e-42b8-befa-a492a64b46d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$UserBaseDirectory", ",", "\"\<Knowledgebase\>\""}], "}"}], 
   "]"}], "//", "SystemOpen", " ", 
  RowBox[{
  "(*", " ", "\:7f13\:5b58\:6570\:636e\:5b58\:5728\:6b64", " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.793082776315516*^9, 3.793082830286789*^9}, {
  3.8118493625588627`*^9, 3.811849372985919*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"4b47e58c-aabc-4ed7-a3b9-b99dce6d54be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityPrefetch", "[", "\"\<Volcano\>\"", "]"}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"547c33c9-e817-4bc8-bc3e-cd177d6f52e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Values\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["52825", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Values\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["52825", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Domain\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Volcano\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"CloudBase\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"https://www.wolframcloud.com/\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["Prefetch", 
   Association[
   "MessageTemplate" -> "Prefetch successful.", "Values" -> 52825, "Domain" -> 
    "Volcano", "CloudBase" -> "https://www.wolframcloud.com/"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8188847634511433`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"15072e5f-6477-4ed3-84d9-f285808f5463"]
}, Open  ]],

Cell["\:4e0b\:8f7d\:540e\:ff1a", "Text", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<Volcano\>\"", ",", "\"\<Baekdu\>\""}], "]"}], ",", 
    TemplateBox[{"\"elevation\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Volcano\"", ",", "\"Elevation\""}], "]"}], 
      "\"EntityProperty[\\\"Volcano\\\", \\\"Elevation\\\"]\""},
     "EntityProperty"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.792930034908179*^9, 3.810320044708538*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"f44f9e70-4250-459c-9aab-894b5a942d7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.002727`", ",", 
   TemplateBox[{"9002.62467191601`", "\"ft\"", "feet", "\"Feet\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.818884834055481*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"5e8334cf-2ecf-4925-9755-fac0a615e0b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<Volcano\>\"", ",", "\"\<Kos\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"country\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Volcano\"", ",", "\"Countries\""}], "]"}], 
        "\"EntityProperty[\\\"Volcano\\\", \\\"Countries\\\"]\""},
       "EntityProperty"], ",", 
      TemplateBox[{"\"latitude\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Volcano\"", ",", "\"Latitude\""}], "]"}], 
        "\"EntityProperty[\\\"Volcano\\\", \\\"Latitude\\\"]\""},
       "EntityProperty"], ",", 
      TemplateBox[{"\"longitude\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Volcano\"", ",", "\"Longitude\""}], "]"}], 
        "\"EntityProperty[\\\"Volcano\\\", \\\"Longitude\\\"]\""},
       "EntityProperty"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7928397637855177`*^9, 3.7928397643477063`*^9}, 
   3.7929300502609787`*^9, 3.810320054933654*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"1841db46-960b-44e1-bcc6-d6f552a7af8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00817`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      TemplateBox[{"\"Greece\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
       "Entity"], "}"}], ",", 
     TemplateBox[{"36.852`", 
       RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
       "\"AngularDegrees\""},
      "QuantityPostfix"], ",", 
     TemplateBox[{"27.251`", 
       RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
       "\"AngularDegrees\""},
      "QuantityPostfix"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.818884841660948*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"7973c37c-7239-4ede-a8c1-6436bca995ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<Volcano\>\"", ",", "\"\<Saba\>\""}], "]"}], ",", 
    TemplateBox[{"\"image\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Volcano\"", ",", "\"Image\""}], "]"}], 
      "\"EntityProperty[\\\"Volcano\\\", \\\"Image\\\"]\""},
     "EntityProperty"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7928398966041193`*^9, 3.7928399134160833`*^9}, 
   3.7929300560144725`*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"b9226a62-880b-4838-8483-2428214210da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001241`", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJx8vGVwHNuarrmKq1QkZmZmyWJmZmZmZmZmZmZmWRaDbdky7G1706G+0zE9
3dPTM3fm3h8TMb/mS6Wt433O6Va8zliZKpdc+eT7wVpLlovL9ksiIoTy6XDw
iy22zcuLLfXnhZPArPzU5KzEBNesgsTkxDyTOBJcTIA/Q/AHG99/ePfm43tc
MH79/uHVu7cgGODjlw9v7t7e39y/unp1d/7q5dnd65Ob18+vXx1fvYTj0eXd
3vntzun15vHVxtHl6tHFyuH50v7Z4t7p/O6LuZ2T6Z3jya3D8Y2DsfX90fXD
kbWDoZWDgaW9vsX93oW93oX9nvm9zrn9jtm99pl9UMv0Nqh5aqtpcrN+cqt2
fKNmdBPT+A6oagxT5ehuxchOxfBe6ehe/vBuzshu1shuxtB2Wv92at9WSu92
cs9W+sBBcs9ObOtGRMNyWN1SeP1yZMN6ZMt6aNNySPNicOMSKKBxyb9h0b9+
2a9uybsWk0fNsnv1klvVkkvFgkv5klP5olPFmkPlmn3FKggGjlXrjjUbINuq
NVx21et2tRsO9VtOjTvOTbvuTXtP8mje92w58Go99G47ggEc/TpP/LteBHSf
BvWehw1eR47cxI5fJ07fpc7fp8y9Tpm6SZ68TJ+5yVm8K1l9U7b+pnrrbc32
Q93WG1DDzpuWnTcDBw+jhw+TJx9nzz8vXP20dPMLzu7tDx9ATxBB+BUQfgU4
3r55fXN/f/7y/vTuDUDEBRwPLl/unt1sPccgrh1jEJcPznGCoP+C4CPE/e65
3Ud8u23Te61Tu8AOx9c4sVE3sflEsGp0q3Jks2Jkq3x4s2xoC1Q6sF00tJ07
uJ01tJ0+uJU2sJnSu5ncs5HUvZnYtQH4Ejo3Y1rWcYIYxLrVsMaV4IbFoMb5
wPoFkF/9gm/dvE/NAsizGpNb1aJr5QLgcyqbcypdcCiddyhbsStfsS1bxgVj
u8pV+6o164oVXDaVqzbVawDRvm4TODrWbTl/k0v9tmvDzhNQHKJP+7Fvx3Pg
GNx3ETZ4GTVyETeBQcQ0eZU4fpk2fZ01f1u0el+6dl+1+QAEa7ceHgk+AMHu
3bcDe29Hjj6Mv/g4df5p5vLLw8cP7374+CQ4ffvhPej9jz+Anq7cv3t49RbM
+Pbq/u3Fqzfnd2/Pbt/gKA+vXu1f3IENt19cbZxcA0Sw4fLB2dL+6cL+7whi
ENcOBpf3+xd3+5cOnggCvtap7ZbJreYJDByoYXwdhOEbW8cJlg+tlw2ulQ6u
lwysFfevF/WtFfVu5PWtZ/VtpPdvpPVtpPSsJXWuJXasxnesxbWvxrWvx7at
RTWt4gRDaxeDapaCahcCauf8a+d8amdB3jWzXtUzHlWzIPfKObeKWefyOWDn
WDrrUDJjXzRrWzRjW7xoXbJoVbyAqXQRZF22ZFO+bFG6CLIsW8JUsWxdhXG0
rVl/8iZuT/uaDYfaTcCKkW3YcW3ac2ved2858Gw78u16EdR7Gtp/Gjl8HjN2
GTt+FTd2Hj96njJ5mTF7nbd4V7h0V7b6umL9deXa68r1l9Wbrxu2Xrdvv+ne
vu/bexg8fDd8/GHk+UfA9OHTj6CPnz+BYICz+88Ivnz7/vrNu8tX7y5ePpy/
egCIz6/vwYYQS8GJmy9u/gbi7DeCo2t7oJHV3YGlnb6FHdyDEEK7ZncAH7Br
Gt9oHFuvH1vDVTe6CviqR9eqRzZApQOrJf0rxf2rRX0rBT0r+d3L+V2rOV0r
GT1rKT2ryd2riZ3LCe0rca1LsS3L0S1LUc3LkU1LkY0rOMGQmoWAqgW/qlnf
6lmfqmmv6mnPqimPyin3ikm3imnX8imXsmmX0tmv7Iqn7YqmbAumrQtmrArm
LAq/yrxozqJ43rJkAWT+vcoWLcqXrCpXgOOTN3F7PnHEUTrVbwNHl8Zd4AgQ
fbqOA7qPQ/qehw8Cx7Po4bPY0TOwYerUVerURdbsVR6YcRFT8dJN2fJdxcpt
w8arlnWMY+fuQ/f+exBQ++HLZ9CPP33BhZ/iQHGmwPErxHfvXr/7ePuAQby6
f7h8/fb8NWZDyIb7Fzd759cAEZy4dny+cnj6RHAaIwju2wV8wys7/YvbvfOb
ALF3fhcM2Dmz3Ta50TK+1jS61jCKgQPVjqyAqkZWK4dXKofWKgZXi/uWQYW9
ywU9S3ldS7mdizntS1kdS6mdy8kdS0ntS4lti/Eti9FN81GNC6Cw+nlQeD1k
wKWQ+qXAmnm/ijnv8imvCgA3iYErn3AtGwc5l044l045lEyDcHbWBVNW+ZOW
eROWeVMWeTOmuTMmeV9lmj9rUjhnWjSPy6QYk2nJglnpolnZkkX5slX5ypOs
K4Dgul014Nu0qQSUABHMuA1ybgCIj07sOPLvPgjsPQrufx428CJq6BQgJoyd
JY6dpY6fZU5f5cxeg3LnrgoXboqX7ipXX9Wsvq5bf9O49a5p+wGEU/v080+f
f/n5y6+/wBEXjPFT+Ba8AFDilrz/8OHu3Yebt18hQkR9cXv/mA1vAeLvCb4A
gnO7z4Hg2PoeTnBoeXtgcbtnbqNnbqt7drNzZqt9arN1Yr15bBUI1o+sgnB8
1UNLFUPL5YNLZf3LpX1LhT2LoPzuxdzO+ZyOhay2ucyW+fTW+aSW+fiWufim
udim2eiG2ci66YiambDameCq6eCamZCaeRCGr3LGu3Tao2TSrWTMpXTUuWTU
qXjEsWjYoWjUvnAMZFMwDrLOH7fKG7PIHTfPGTPLHjXJGjPOnjDKnDDM+iqj
7EnD3CmjvGnj/BmQYf40yKhgxrhw1rhoDmQOHEu/yrJsGSACO+D4BPSJqVM9
FlQ9W/a8Wnd92vf9uvaDeo7AjxEDJ5GDz2OGXiSMniZPXKRNX2ZMXWbNXOfM
3eYvvCycvytZfFW2fF+x+rZqHdOXnz//9MuXn3/96Zfffv5ev/7hFxAM4Fvw
mk9ffvzxMxZX33z8+Pr9e4ilt/cPjznx/sXdq+Pr28PL64OLq92zq+0XFxvH
p2uHJyv7x4t7z+d2j6a39ifW98bXdsdWd4Bg/8JW79xG18xG5/R6x9RG++T6
N4IrDWMrQBCLn8PLVYOLZQOLpf0LxT0LRd3z+V3zeZ1zOR1zWW0zGS0z6c3T
aY0zyY3TsfVT0fWT0bWTkTUT4VUToVXjweXjgRXj/mWPKp8C+YD1SifcC8dd
C8cc8wftCwZt8wds8vpt8gatcwescgYtMA2bZw+ZZQ+bZA4/yxgyTh80Shsy
TBvSSxvWSf0qrbRh7fQRnYxR3cwxvZwJ3exxXDpwzJnQy53Uz5t6VjT3JNye
wBSED8CklhUrICsIsDVY8ePcuAVya9z2bNnBOHYeBnQdBHUehPYcR/afxA5j
mTFx9CJpHMuPUORkTN1mTt/lzL3MX7wvXH4LesKHI3sSXMQFL/j80yfA9/HH
D+9+xIocjODDw18J3twdXd3gBPdOr7ZOzoHg6sHz5b2jpd3D+Z2/Ehxd2R5Z
3upf2OiZXe+cXOuYWgN8bRNrEEKB4FeIj4H0iWBx7xzgK+yay2mfAWW2Tme0
TKU1TaU0TCTXTSbUTcRUj0dWj0VUjYVVjISWjQaVDgeWjPgXD/sUj2AqGQd5
FI+5F4265o865Q3b5fRZ5/Ra5fRaZvdYZPWaZ/aYZvaZZPSaZg6YZAw8ghsw
TO03SOnTT+7XTRrQShzQTMKkkdivnjygkTKomToE0s4c1coYAWl+k1bmqHbW
mEHe1JNwe+IowaR/jbeli0DTCiti1yE5OtStO9VuujZseTTvgh+92w582vZ8
2/cBJXAM7wNLYtE1ZuQ8buwyYfQ6afw2dfplxtx91sLb7MWH3/746x/+9Nsf
//wHEAxw3wE18N2T9YDd+4/v3n14ePPhLWRDvLO4fv366tWr07vb46vLg7OL
/dPzvbPznRdnW89frB89Xz04Wt47WNrdn93em97cGV/ZGlveHF7aHFxY75tZ
7Zpe7pxaaZ9Yah1fbhlbahlbaRpZqh9YqOmfqx5YrOifL+2ZKemeLuyeKeia
zm2bym6ZAHwZzRPJ9aNJdSPJ9eNJdWOxFcORJf2R5cNhpYNBhX1+BT0+uT0+
+b2+BQN+RUNuuX2uOb2uuQMeBcNuhSNOuQPW6T3mqZ0WmV1mGZ0maZ3GKe0G
yR2GKZ1GqT3P0vt0Ejoe1QXSiu/WiO1Uj+lSielUiu5UjO1RiutVju9TSehX
TRxQTRpUSx7CpZqCSS11WDV9RD1zTDNjTDtjHKSTOaGbNamXPaWfM22QO2OY
N4sPjPLnnhUumBYvmZeuWJStgiUBIlbEYqEVo4n5Eesi9zCOYMmOg4Cuo+De
EyhZwwbOwgfPI4ehAbmKHb9NmHqVNHOfPPsGqH1PEIDiBHGIT+778MP7rxDf
v4M2/5HgSyB4cXd3cnMNEA/PMY4Acfvk9O8JTqxuf0+wZ+obwdGl5tHF5tHl
xuHFuv756r7Zyr75st7Z4q6pwo6JvI7J3PaJrObxjMbRlPqRpNqhhBpMibWj
8dXD0WWDEcV9ocX9IUV9wQV9Afk9frk93jndXrm9njk9Hjl9zlndDhmY7DJ7
bNK7LFI6zVI6DBIa9eIbdOMaQTrxLboJrTrxbdpxrZqxrVpxbZqx7SD1mA7V
qDaVyHbFiHb5iA7ZyA65qE6FmG4cpVJ8n3JCP0gp8asUkweUUgaVU4dU0oaB
pnrKsEbqiGbaqFb62BNN/AgccYgmRYvAEWRVsQ5mxNMl5MfHpmP3qenwaj30
aj+G5tG/5wz6x6D+y5DB67Dh24jRl9GTr2Kn3sbNvPnjn34B/enPv+L6wx9/
/vW3L7/8+vnnXz6Bvvz0w+cvH3/89P6HH999/OHh/ce3Dz+8u3//5uXbV7f3
d48Q7y7ubs5urp5fX2FmvDjfPQUbnqwfHq3uYwTndvYxgmubYyvro0sbwwtr
fbMrQLBrYrltfLFlZLF5eKFpaLFhYL6mb6aie6qsewbwFbSP57WOZreOZTaP
pNUPJ9cMJNYMggBffPVgbOVgVFlfeFFvaEF3QHaHX06HX3anT3aHd1ane0a7
a0aHS3q7S0aXQ3qHbWqHTUq7VWqHZUq7WVK7cUKLTmyDRkydWlQNHLVim0Bq
0Y3KEXClSS2q5RFcq1J4q2JYi2xok0xwk3RIi1RoO0g6rEMmsks2qhskF90j
G/NV0jE9MrG9snF98gkDComDCvH9igkDIOWkIZXkYdWUEbXUUZB62phG+rhW
5qRuzox+3pxB/rxhwYJhwZxZyTIItyTQxJJj7Y5D/TbIEes79lyx5vHYq/PE
t+vUt+csoP8ycOAqZPg2fOxl5MR91OQ9ju/Pf/kN9D1BHOJPP//4O4iYPrz9
+PDq4fXdm5c396/w2bbLl7cQTnEz7p2dbp+82Dg6BoIre/uLO3szW7uT61vj
qxt/JTi91Dm+0D66APgaB+cAXx24r3uytGOspBPDl9sykt00lN44lFo/kFTd
H1/RE1/VH1fZF13eG17cGZzfHpDT4pfZ4pvR7JXa5JnS6JHc6JJY75zQ4JhQ
bxffYJvQYB5dax5XbxHXZBbXaJrQbJbYYhTbpBNZCwRVI6sVQ8tBKuE1IIXQ
atnASqWwBpBiWJNCaKN8SJNsUINUUL1EYL1YUKN4UAtIIrhVIrRNMqxdKrwD
U2QnSOJRklFdUtHdOEqZ6G4QkJWL7ZWP6wOUSomDuAAooMQ56mRPg4CmccE8
6Cm0WpavWVdu2FRt2lbv2NZuO9TtOzbuuzY/d2t77tl+5tl56tV15tV74d9/
HTB8EzJyFzz2ErfeE0EA+tsffvqHED99/vDjo979CAnx/vW7V8ARzHj9+vby
5fX57fWLW3DixcH5i50XJ5vHR2sH+7gN57d2Zta3J1e+EuyfWemZXOwYm28b
mW0cmmkYnK7rm67unihvHytuHS5sw9yX1TiYXteXXNuXWN0TW9YVVdweVdoV
XtQemNvsm1nvlVbnkVLjlljjmlDtmdTgEl9jF1luFlxo7J9v4Jer71+gH1io
G1CkF1KqG1SmFViiFVKuH1WrH1WvGValGVWrFFYhG1Aq5Vsk6Vci5V8q6Vsq
4VMiG1yDKagOBOwkA+vE/WrF/GtFAxtEAptEg5rFgltA4iGtYqGt4mFtuERx
RbSLR3VKRGMcJSMwuNJRXd9zBGPiR+AIrsT9qJkxAdLLncUtaVS4aFKyYlq6
ala2Zl4OoXXHsnrbtmbftn7fseHYsfnYpfmFc+uJS9sL184XHt1nXn2XvgPX
voM3T/j+8k9/gOMTQVzfQ8Q5fv7ph49fMIgPP7yFwub1u3sgeHF3BQRPry+P
r86fCK4fHgBEyIYL27tAcGp1E0uF3wi2j861Dj/i65+s6Zms7BwraRkuaBrI
axkCfGm1vclVXXEVndGlbeEFLSG5jWGFbUG5TT4ZdV5pNThB57hKu8gS65Ai
U78cXdcUJZsoKbMwMZNgsWehImZhml65mv4F6j4F8p7Zit55miHl2mHVqkFl
yiHlCiFlOEFxH0yADyCK+5aBJHwrJf2qxP1rxPyqRX2qRXyrRfwbhQMwAUcc
pUgwJtGQFpAwrrBWkfA2scgOkER4Owjn+AQRBAPckhBdcYg4R+2sKTAjcISg
aly09Kx42aR4zbhkzbxy26IKIO5a1exZ1+7b1B3Y1h/b1h/aNx85tBw7tz93
6zr16Dn37L34059/+fNffv3LPwFB4Age/Pm3PwC7z/gR9MuvkBB/BP308w+g
Lz//iEP88Pk9cLx/DyXN7dnNxen1+Yurs6PLMyC4++J4+/nh5tEhQFzZP4RA
Orux8/cEW4amG/un6nsnqrrGy9tHipr68xr6Mut7U2t6Eis64kpbI4tbQvMb
ArPq/NKr/bPqvVKrXBPLQW5JVfbRxUY+6WoO0eIGvsI6nlxVZ6qcNZK0QBJm
SNwCBgJGIRJ28fIuGdKu6bLuWfJeuaJOaQzTSCHnDBH3HEmfQgnvAhHPfCH3
XGHPAjGfYkH3AkyeJUJepcLeFZi8KoW8K4V86wX9vimgAZdQYKNgUJNAYKMA
PghuEgr9xvGbQ7834xNKsCFOEM+MIM30Ka2Mad3sOYO8RYPCZcOiFVym5dum
FTu4zCp3H7UHR+v6A9vGg0eImBmB498QhNM//PEnnCAOEQj+DiKUN48Qf/z5
B4CIEXx1g+M7uTw9Pj/dPzt5IrgBBA8O5nd3Zze2JtbWoZgZWoQ8uNQ9tdg2
OtM0PF0/MFHTO17RNVbaDgbsy3nEl1DVDdaLKGrG8fmnVvkklbvFFDqG59gG
Z9iFZNsGZxm5x0kburPlTBFbBTGVEI8CoskiiiyiguQRTR7xaTJU7CXNghTs
ouQdYsQtQkjKDoijTdbxZZmEC9slAlB+uxSOTSLbNoXrkMF1yuS45HDdCrge
JVyvUl7vcu6j+H0rv8qvit+vhte/htevDsTnX4+LP6ABBBxxYwqHtIFEQttF
wzrEI7oes2QPJErZ6D6Z2H6FuEHFpBHllDGV1HHVtAmQRtqkNkZwQT93Sb9g
xaBw1aBoTb9w1ah82/Crdg0qdvXLd3CZ1x1ZNBxZN5/YtZ05dJw5dp7jBJ8E
p2BDgIjreyfiHL/89BGO2PU/Qrvx49uPb25eX59dn57fXADBw9Pj/ZPDvedH
O0cHWwd7a/s7S3s7MzubUxsb4+tro6ur/YuL3bPz7VNzbZOzzWMz1f1jZV2D
Jd3DoLyW/tSarvSmUSg4o0q6QwtafdNqHMKyDVwi1cx9VU095fUcJDWspNTN
JVVMBWX0KGxZROBHiPevInwnEh+iClP45PiktHiltMh8cnCKyKKIpoTEzLla
3qJmkSLm0VyzSI5FDMsmkWGTTHPMoLvm0jwKyZ5FyKMIueUj52yGZw7LI5vt
ncfxK+YLrOANrGb7VjG9q9i+NVzfehC/bwPYU9ivQdSvDkKuQGArX3Abf0i7
YFinSFiXWGSXeGSvRHSPWHi3ZHS/fMKIUsqEcuqUStq0cvqcWsasZuqMdtqM
dvqcdua8VtaCVs6iRs6yeu6yVsm2RsmWWsmOaumuatmeSsW+StWBWtWhZuWB
dvWRfv0L4+YL07ZLs/YrQPYEER8/EfyHNgSC4ET89NOXjw/v72/vby5uzy9u
L08hip49fyK4ub+7urc9v7c5s7s+ubk2vr4yvLYysLSEEZyeqR8aqx4Yreob
regfLe4aymzqTKvryGjogcozOK85orA9rrzXwi8ZCarAbWdL6iCaGCILYZiI
vESKIAghFkJMhBgI0f6BiI/XCXQSlQ2CweNFDiKKIZYKVcKEo+TAVndja3uz
DYI5ZpEU0yiCeSyyTEI2acgxB7kVIe8ykm8JxTWD5prOcM/i8cpn+Zax/Ct5
fKvpXpgY3nVMrzq2dy2fd52Ad62QdzW/Ty2vfzMnsJUb1MYX2i4Q2iEU3iUa
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
I/Z3SV9NjUhMLEuSBBCvBlHCjKXqKWgcIWiVwmuTw7AtoNiVEB0rCC41WHJ0
r4MjwQ2bmoNeg+jbRoCI6teFyRdSJCTKARQ4iIKHUegIIQw4TpNj5gEiPXGN
nrxKS15gpC6yMpa42av8eRtChdvvP/+I692nHx5+/Pjm43v8V5Zu7l99vw0G
rHdyeY43fXvPjzaP9h/bdgzf/ObGzNoqFC0jcxg+iJ/jSyuVLW3uQSGKurrw
USkcBoEGXkK8QnxcQd6v+NDXLPQkrGGnEPFeHr8iyMcCCzDpyM7aWE1JnEX/
623kYyE9DQlfL/OM9FBXF0NjIwVZGSYkRi4HSUnyMHlQeJhLWmpgbIyXhbmK
nCxHSpIuKkJhMhCHh0AnfU1uEBXoZAKF8PX0W9IkE/46EUR5nMGDcICVtnRI
gQTEA4Ga/K0bfXIufEA6DdHYWCdCkkIcTYK4KUXJnaobxjBN5rHOpdoVUR3L
yM4VJNdKOJKdy6lu5RT3aqJXC5YWsczYiRH0A/VhwjgOo+BxFDZJiJgjRi+Q
Y5fI8YvkhFly8hwtbZGZtcrJhUZj88Pnj+8/fXj6FYn7D+8ef+PsAd9MePny
5fntLb74fnhxCi3D9vHJ5uExRM7Hpm9rcWt1dn1+amV6Zm1ucXtpfGmqpL7c
ydddUkWOR4hL52OxhNk0LpnMBPMQ/1rsURGZhp6yGPGxQcODFY2MeGjYQFGa
39vFxNZEJcjLfH9lwFRbXFmCpiXPCXQzzk8PqCqJ6eso2FjpzM30M9AXfGYs
amMtp6MjUFAQcn29vLk9nJYaEBHuZGerqaTI5bAwDIBVSABJifHysRhP9SbW
GP6+AiWh758rHM/jjA7x92XOY3IEC3L4yUJSHH4pNpGLZU+sISJxH+fPBRBZ
DPGrI3krqo43n3U8xy6NbZ/NtM9j2Bfy2JcwHcoZzjVEj1asvPHuJfj0gZBv
H/J5lO8g8htEAcOEoFFCyDgxdIIcPkWOmiTHTlESpujJs6z0RTyWvv/4FgQd
3wcg+P7dq7cPt6/vr+5eX728P795+fzq5uji6ujy4uDifO/sdPf0bP3gdP3g
fOv4DNw3vTq7vD23ujc9udxdXJ3s5G2oayKroCHAEkQSChxNAzlBCQavKAF6
ZSqLKCAugMcghgiiCmIQKezHMEWmwg0Bo8HN5OMgZQVecxM1GzNFPxet8iyP
yiznmkzHjaHsxmy3WE/1hd7cldGyu5PRjqYEdxelna2W2YkCEwOGtgaytxNm
c1BRiW9DS7K1g7KDk66Xj7mGurCutpiKAl0G0hQV4SUni0cI/k3GBmaW5hba
WqqqymIa6kIyMiRs2puCmCwEpRaXD/HxY8WOgDidJURkC5KxRPBYZMELgB2X
jY0FRMkCEmQ+CSJbHCE2EpCl8vJT+Pl5hEW4ohL8bEEW9iOx0M+DGEJCek4c
PW+6dqCSd62iVwvbvJTPpZ3g3Ik8epHHAHLvx+Q1RPYfoQSMguA6yW+QJ3Sc
7DdA8u1lhY1woydo4cPksEFq9Chv6qJg1hp/xtqHD+9AHz9+fJzx/OH+zfvb
Vw/Xd28u7+7ProHg7fHlNUDch4Yd2/3y/Pn1/dr+i4WN7YW1lYW1mfm1kf7R
6oLyCFtnJQc3ZVNrCRMrSUc3dRNLGVVNPh0jMR0jCUU1fn4xhpSSqL6Zhpap
koQqiyGMEA9WCJAoeDmPzZu5OsrWV4fmZQWGBVrrqDLN9Hj0FJGZKqrLMGsv
sMsN1ajPsAt3kXUzF4zyU/dyloqLNvzwMHW8W91U7e7lIpiXY5mXZ1PbEByT
YO0TaNQ3VLm40r+9OzEyVBsfaW9nIe7hKKGvwcGmUhETalVhAXElBUVFRUkD
Q/mAYDMzCyFjU5atg5BXgLJPoKaXn46rh56lvZqhlYKupZySjrCkMkdSjq2o
JiQtxyskTJWT5xWVoIvJ8TCFsB6RKoyookjTTERTT8DYWNLUVErfSFhHXwBO
FdV5RWSZDCEa4rKQiBRVzpAgbYFkXTm6MaIOhSynAqZ7Kcu7guNTw/GpY3nX
U93riK61vCF9JM82kmcH3X+AHjTEDB1nhU1QAgd4oofocUOspHG+jHn+bChK
V95/+ITr3ftPb99+enn/8eblh6vbdxc3D2fXr08ubo7PLg9fnD/Ot2Bhc351
eXFtafdgc/9ofWFppHegurQyLirePjHVCW6dtb20mhZdS4+jqsnQMxIMCrfU
MZSycdEztVUzslKw99DRMhah8yEG92s3Bg+znDTb283Q200rNd7ez0PdzVHV
1FDYSIthZcSjKomUxVCQIzfaS7wkQb+vxq8yw6a+wDXIXdrZmtfBimWsi9zs
2UnRqka6KNBPIihI3s5R2M1bpb41ubA8NjDEPjDIIT8vsqYiVkedR10JWZuJ
Mx+rXRYP8ylmslno2TMpe2dFv2DtwHAdD381BzdFIzNxFQ1+BVU+dUMxTVMp
SWW2gpYQENQzlpdXEhSXYsFRQVVQXl1AXJEpq8UnqcESUCTqWItrmnLMHUQs
nUSMrLjPbLm27mJwqqJPM7KVeOakYuSsI/9MlUdOgiQlTZSWR8KiBEVppCJJ
1lJiPzMQtHUQcfUTcA/juMUJBhZyAquZAc2UgG5y4DA5ZAYFziGfYRTRRUjo
JKf2k9OHSBmj5OzJd+++vH3/5d27n+8fvry6/3L36tP17cermw9A8MXly6PT
y/3np3tHx1sHe+u7m6tbKy/O99Y3pycmOxsa8xOTfSOinFJSPDIyPV1cVZxd
FUNC9EPDDZ2cZF1c5IOCdTx8dGSVuIKSNH5JpKhJcnCXMbcR4XCx3opJRSry
HE9nraxU94wUx/rKcBdbRToBiXCQGB9ysBQw1EQm2sjejKSnjApSDSK9pR2f
0Z+pIQMVpCGDvJ24TpZEVVnkZkeOD5fydWf7+wpraiFJWSQghrhCSAXuqhzT
zFLV0lpNXZXr6qRSVxXi66nOy8Qsz0P9VlI+pjNhISSvRDe2ENUx4krKIwk5
JCwJEZIgocDik0CCciSOKOIXJ3KEkawSn5gUS1CUxidEFpVhC0rRxZTYetZK
OtaK4lpceWM+QWUkZ4BUTJGyEVI3Qfo2FENrioYx8o9R17XgUTWimbvJuYUZ
eUVbWvroyxryWfsoGztLqFsLqtiIKTvIyztpSjgZCDlbMe0cBf3jBELzGf4l
ZL86gn87MWiIFDGCQltRfCc5qR+BkgHi+JuHX14//Pz6zc8v3/x0+/rz1d0P
l9cfLq7enV3en5zdHp6cAb79w72dw+3tg83t/cW52Y7GhpTMDJ/oKDs/XyNf
X6OIcMuYaJvkZMeICBM3F3llFSTIj9RUkYO9kLWtODyokN/Bd/IayOAZMjen
aCgjFWlCQ0lMeaZ/e21kbYlnSa79zHi+u4Mqg4gEeZAYG/m6ivu6CQf7SUSF
ylk8Q6kJWj4uIjEhKhb6BFVplBKpFOUvZG+KAt3JMUF8mXGyVcUGcVHSOjrI
wBhJKSCuMJZneYW+zsGISxFj4+yGh3NXlqr9vNRMDAQEuEhWgsahY3NmPPTH
tpEHSciQhcQRnYv4RJCgJBkePGlVXkFpkpgiVVaNwyuKhKSokPWklfnE5FgU
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
yKRHqRcnaHYXmgwWm19MpR/2x8/WuL9aSl1utVlptz6ZCl1o9Ruvj9aD7I9Q
QrBhYZZJeKCcuhKNn40EBRAvH1J6jJyyqiR5dYqOkYC0DNanqCug5CiVohS1
GG9aQ75STaZ0eigtyBHFBZETI9huDigsWNDakqilgRTlkZ4WMGJA12+kifzd
eVqrn7VX6mdECXlYEbQVkaIE0lThU1IQhiRIpZOe1vC/zb1jW0yxxV8KNJgM
czv90DhPFz9TLWMxVX1eTUOuojrZyl7C0Unaz0dNW51sbSY4PZJxvFl2d9qw
OJ4UE6qgr4MU5JAYZHk95O0n5eMvmZ5lNDWX3NTsPjwasrAY39jg0N3o19sY
ONwevjaT/fFl3+VhTUu1S1O5Y3+LT3WBxVC7P0SwwjTDtmrX5nLnznqXogyV
vBTZnaXorcWY8gLdqGCBtIzg2ARv/0AbazsddQ0JETEmi0MAWDwsAo2BsSM9
bk8g0zGCXAFseY5XiEuiEyksMoGBaPxkNX05aJHgNTxMJC6MzHUo3VU+AzWe
af5SfkaoJkL+oDPguCf0diIx1BgdDoY0paj2F5vkhshujaTWpbvKspGdAX9z
eWC4vzw4l8OD+CBsypKg9pBXJUI1oqZLVdYgQhYDplLiyNyI4OPM8rBHrpYo
2o+0PeHdW6UT6oJifUkhnsjbGdmYIwUZJCWKjHSQpRHZy4Hr5UAL9WJF+NBz
4kT66ywqMjWTQhW97cXkxbDZPBoFCQiyyLTHPWuP09xEbDGXRCZSsE0YhG/L
hWRsLw/EQCFppPOMX8+ECzVJVbX//Gzu53dTfc2hvg4ik91RzeXWgW484T68
caGiKTEyeZka+VnqBbmaHa127c02JblqLTXPynKVO+pNxrrshprt/s9f5//n
n3b+7982/+3z0v/7L8f//c+bP98N/Psflv/1l/l/+jz6f/2vyzcnJfUVJgeb
iTNjPl2trjdHXZ9er//Pf3v3H//8+pf3e5tLHW6uhjZ2WibPFNQ1xCQkOUwm
thJNIP5ugh5fXYVPQaYSSNgXNptJoRFJDMTkI0nJc4TEEA8DSYqiEA/56kzr
llzrkTKnpkSdfA+hQmeBoWSD+SLLsRzDeGtCV5ZeX4HVYLlbso/KREu8iTJR
VxaVZzpV5jr7ukpoqSIZGRLUt8oabKh1ZVWQsiaydxWDIlxJBStuTY0J0OAD
owBPSqgf0cMWgQ3zYwRzo/jH2izLsxX8XJCWMnKwQk7WdB9XAQ87dlKEXFyA
UFqEUHIwoz5feajRJidGycmE4WDCr6vG5oXAIsqjpatEZxLpHDKNRaHQCZAW
6WT4fICXTKUxmFwOgY4vnGDBUxAyrAbZzlk6JEyjsz2svtL157dD/+Nfdt8+
b/qPPy5e7eQlBgnU5GrO9HuOdjvXFGsWpEuW5MgUpYvNDtrPdFsu9tsez3p9
OIx/2Ik+HPeZqLffHopqyHzWV+682B052x76erf64bjhcr1oeTjicju3Iltj
rMuhq95wacpzbzXpn78c//tfPv3zT+/+8uP9//i3v3x+cykqRISQJSxAFBOh
i0Iy51KYPBQWkwFBhMFgwufgYbIxK8IzComdyeWhcUgI35qChVleASJ8n0FH
GkqEjBjjogTjyiT91jTDplj1uGdou8atM1itN1xzLsegLVpipd5yvNzqbCZ3
pCq8qzQKWmF3S9HBloiMWIPkCG0tSCsKBGU1joqukLAs0jRkGllyrJ34A4Ll
AwNljI2QvS3dx0sgM1W9IFsj0I/i4YxiQihRHqi1UHNlwD0/XtTHDkX48ThZ
Ihcbor8bn4c9K8CZNz9BrThJLt6XkhlOG28zC3akWGkjcSZ6pk73ctJRVxEW
EKSyuGQKHUt5wBGKEGy1C9uHQSPhe2Ww3QDY0qCwDEdMgQmtBIsfySqgxATD
zDQjP3fBxZHY//jj/L9+Gv9y2TTe7JHoL9BZbtrfYD3UYt3X+Gyu3+7VUeza
iN2H53Gfn8feznu9WfR9N+/7cdF/vclousVkc9K7t9Z4od9zYyxkrsv3bDlr
fTBiti1gpS90vt37cjn55VbK0UzgxrDLv3zq+d9/O/7XX28/3+2+u9z4+c3R
yngLkwdbmWRha2dUERGmgACDw2VwuWwsDWA71PFfIcE2Iz0uRjNoZDZ8Li4P
h8XAFtLhhfxcpKaIclLMMmM0UwJkGrKM8vwlK8Pkg3RQQ5D8cKzBWp5trTfv
cJryfKXx/kDAbGNgrKuChjCy1uYtz3bOijPRV0OWhmxRNpIRRxKySEQOUfmQ
jYuYT7BcQLC0hwfH2grZWaGq0meFWerBPvTYUE5kEDU2nFZbpNheotmUpbo1
7FufrVqXq1GYpOBjR4rwEYz2kyhM0Rto9Gors2ou0I12J8Z6oJRAhp81xddK
QE0cGanSHUwVxAUIZHwLN/Hrtg189flxwZ9BwH8Nioz1FFQG4hdCQqJIRg4Z
GlDsbTkl+eZBnoKhHkJNxTbtxXadxY5libopgVK5sUoLA0FNxfo9daZdVbq5
sazMCHJXqfRkk9rplN3VtN31hO1Rp8HHebe9Tv2LVY+DZfeXx9HXe9EXGzGv
D7Kv1tPOllOOpuKuV9P3RkOPxkJnm2ynG83P50P+t/dtXy57fns586e3S//t
w9qHs5G2kgAhcSqEQaghAZSYFEdUkgMPJDyHNAYZS+LEb3spsW1+2C4vColD
wB5OJCLAgyURIlKRxcrIrAS1lEiZaF/+2lwDex2U5Cse4cjXnGx4NxR32eHf
HinTm6i43eZUFSleHCZtLo9sNFFJmmVJhl2kvw4vDTlYKEkJU+VkePRMeWU0
kLWLQHC0ooUlQUMdOdmhcH+exgqdglTxME8U6YXyE/hK00RqC2UgKI1UGU5W
mX/cy/mn27q5FveqJPWxRo+96eTx5oDfXvb88XVfbYZBnBe3IFoyzZ9dEC2d
G65pq0VX4CJpNpJgI2EG4lK/7p2AD8qGMo74uPuRAM8wh0CCIotBodAgs9DI
SFIECXNRiJdYTYFJarh4T61NW5lFXa5pc6Hj1nju2lD+XE/K1mxmb6N7pJ9g
TKBAVZ5qZZ58U5niUKvWzozN6arj5rD+ap/m1bLN+Zz5Vq/a3qj+iyX7++ch
O9P2C/3m19vh/z9V7xnUWLplC35YIQnkvfcCSSDhhffee++991YggQBhJGEF
QnjvIYHMJH1mZZa5VXXr3rq3r+l7+/Xr7jfRPW/mzY+ZmIj5P5+qOsZE7Dhx
EimUOmftvdda5+zv6Ok4f3HY29DlNVjFbMnFwO+sbxVZdcGH81EPtqxvbur/
46eFN/u1d5aiM1PWRKPXUAWPwkT8QmRueLIziYbEEJyQHvZ8s4+7utqJz9k+
9Ofwn9rMfqDIXxF0dQTQAUcGYQsyGdWF9LpiSl6KY2kGsr6QHB8EChI9SlLI
g1XyB3PO583Sc13MjSHpfCZhbyJa1+BZm06AwrihyLM6XwFNGcYNoFwACQ9J
0MU/BBmRgErKwAeHAG8ZyEl1HuoUjrRz5oak1hnfs5XIq43om81YGNuzvvo2
5vu9grOZ6I2hoOOZpK3xuJWhyKXB6K2prIFK2XRX6GiDT06YQ34UqM9AFUSC
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
4oX4MxkkgEHY49fH60Cj9Kt6YZNcsuK88xPltXkBmraUuhx5pNzBjw3KEkh5
EeiUAFCVSu6vluva1Bkhrl5UgHMA3nxkgIIa6U+F7i8+xCFIBkLlYKzd49bq
t61nrg/j3tkC9zXM5ybfLxtRl5OyfY3wUO+5NsC+Xw29Xw03dbPOFoK/uSw+
nA56vpG8MSI/nAxY6RUsdXJfWhJersRdTgfsDnu+XI1ZaKK8Xo+/nA+6Nqrf
bSfCBgUz4dvj1K92404nxCut2ONR3qul4Ospn/uF4Edz+MWU/81c6L7GV19N
r4wAcSJQHulYoAYducy6JPLGWJq+Sb2rT7tbTt7RKHY0Pk/ryd+dla31yZ6v
Z+zqgncn1afz0efmOPOgbL5XZNX7moYk+g5WVzGqNQ9h9+NDcuu4/6Y2oKfI
oz3XbanPqyXDabQCP9PMMHZyLk3h50a1ZUBwPKE4nZQfjovPp+RPq6Ew396s
R3zeTXhtify4FQ/r7rfneT+c5H17kP3DSf7PN2XvDzK+Ost9tQuTJ/7zed5P
j5VJkcS4UCyUhSnRVAEdKIQgIYwWonT34oCYIFpmrGdCCDfSj5EUJkyPliUG
8wqSZMUpsjh/QlY4syxJkB1KzAzGVCSyFGTARwEZEcR7OzTmSHIjCPG+CCkZ
iMhAKcAmhXAyo+nlWYzuGtZUr+DZTvTTXvjDuu8Li+/HndCFOlddIViq9RjP
A8Ym7MmMfHOYf2kMPDX4W4bFXx3n/fSs6t1e9jfnJTMNtHNDCLQVUMw8rcR9
tCafa33eLEe+W4+/nvV/tRb154eKD1uJrzdj3thiP+7Efb2f9Mzkdzktf1oK
+GAJf1zwO9F63RtDP9pSIJleTIfujwcttEhyfIGmXFiXTPSlgpoUZmUCyzyY
UZ8u6cyTLLR6b/R7zzVy32zmLHVKzV3S26Uky7DywhS3rQtcG/FZGvC0jHsf
zIesjnmN1JJac9078gmVCU7aBqFlOMTc47czEbPU59eShm5KddM3cOfahXOt
fOuYcnVAOtNIer4Serug2tPw9zRcWICwF8GAxQi3720RX/bjvj1Kho30cVH9
zBj8uBT28SD1D09Vf35T+/1d0Q93RT/el1RlUqqzqL018p5qWawvyIxA9lQp
ZwcS4lQu+TGU7orAsmSeggYivJyr0jzzYthJweSiJHG4AiUmAm+IOAUoSEDi
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
obE=
      "], {{0, 75.}, {112.5, 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{96, 96}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "Source" -> 
        "http://www.volcano.si.edu/world/volcano.cfm?vnum=1600-01=&volpage=\
photos&photo=094035", "URL" -> 
        "http://www.wolframcdn.com/waimage/hset011/ccf/\
ccf18f1b132c2a40bed6f10e599565ab_v001s.jpg"]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{112.5, 75.},
    PlotRange->{{0, 112.5}, {0, 75.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.818884844841735*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"7d26f0f4-b5d0-4f19-a695-b0085737742f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c010b910-f30f-4071-8af8-29d4d25ec069"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.779798991137438*^9, 3.779798992956984*^9}}],

Cell["\<\
Dataset
\
\>", "Title",
 CellChangeTimes->{{3.779798973122558*^9, 3.7797989759853153`*^9}, 
   3.781015233574415*^9, {3.7811266106631126`*^9, 3.781126611906399*^9}, {
   3.7904996001189537`*^9, 3.7904996015588713`*^9}, {3.7928248657636075`*^9, 
   3.7928248668036532`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4c58210b-1f0b-462a-a13d-f1839dfd0387"],

Cell[CellGroupData[{

Cell["Dataset", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.739095135785624*^9, 3.739095139109222*^9}, {3.739095245002616*^9, 
   3.739095250872656*^9}, {3.7798127916901293`*^9, 3.779812794992652*^9}, {
   3.781126594861667*^9, 3.781126598642011*^9}, {3.7846506572208824`*^9, 
   3.7846506586264324`*^9}, {3.7923187081701565`*^9, 3.792318712990387*^9}, 
   3.7923187854241443`*^9}],

Cell["\<\
\:5728 Wolfram \:8bed\:8a00\:4e2d\:ff0c\:6570\:636e\:96c6\:8868\:793a\:53ef\
\:4ee5\:5728\:5176\:4e0a\:6267\:884c\:67e5\:8be2\:7684\:6570\:636e\:7684\:7ed3\
\:6784\:5316\:8868\:793a.\
\>", "Text", "TentativeExample",
 CellChangeTimes->{{3.811849392711639*^9, 3.811849394418001*^9}, 
   3.811849437533101*^9, 
   3.815919151581979*^9},ExpressionUUID->"3f8b3788-40e9-4338-ba65-\
635499ad95fe"],

Cell[CellGroupData[{

Cell["\:52a8\:7269\:7684\:91cd\:91cf", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "=", " ", 
  RowBox[{
  "ResourceData", "[", "\"\<Sample Data: Animal Weights\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.792319102016205*^9, 3.792319102930792*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"fc43c143-b7af-4e64-b59d-70f8b1fe5ea0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Species" -> "MountainBeaver", "BodyWeight" -> 
        Quantity[1.35, "Kilograms"], "BrainWeight" -> Quantity[8.1, "Grams"]], 
       Association[
       "Species" -> "Cow", "BodyWeight" -> Quantity[465, "Kilograms"], 
        "BrainWeight" -> Quantity[423, "Grams"]], 
       Association[
       "Species" -> "GreyWolf", "BodyWeight" -> Quantity[36.33, "Kilograms"], 
        "BrainWeight" -> Quantity[119.5, "Grams"]], 
       Association[
       "Species" -> "Goat", "BodyWeight" -> Quantity[27.66, "Kilograms"], 
        "BrainWeight" -> Quantity[115, "Grams"]], 
       Association[
       "Species" -> "GuineaPig", "BodyWeight" -> Quantity[1.04, "Kilograms"], 
        "BrainWeight" -> Quantity[5.5, "Grams"]], 
       Association[
       "Species" -> "Diplodocus", "BodyWeight" -> 
        Quantity[11700, "Kilograms"], "BrainWeight" -> Quantity[50, "Grams"]], 
       Association[
       "Species" -> "AsianElephant", "BodyWeight" -> 
        Quantity[2547, "Kilograms"], "BrainWeight" -> 
        Quantity[4603, "Grams"]], 
       Association[
       "Species" -> "Donkey", "BodyWeight" -> Quantity[187.1, "Kilograms"], 
        "BrainWeight" -> Quantity[419, "Grams"]], 
       Association[
       "Species" -> "Horse", "BodyWeight" -> Quantity[521, "Kilograms"], 
        "BrainWeight" -> Quantity[655, "Grams"]], 
       Association[
       "Species" -> "PotarMonkey", "BodyWeight" -> Quantity[10, "Kilograms"], 
        "BrainWeight" -> Quantity[115, "Grams"]], 
       Association[
       "Species" -> "Cat", "BodyWeight" -> Quantity[3.3, "Kilograms"], 
        "BrainWeight" -> Quantity[25.6, "Grams"]], 
       Association[
       "Species" -> "Giraffe", "BodyWeight" -> Quantity[529, "Kilograms"], 
        "BrainWeight" -> Quantity[680, "Grams"]], 
       Association[
       "Species" -> "Gorilla", "BodyWeight" -> Quantity[207, "Kilograms"], 
        "BrainWeight" -> Quantity[406, "Grams"]], 
       Association[
       "Species" -> "Human", "BodyWeight" -> Quantity[62, "Kilograms"], 
        "BrainWeight" -> Quantity[1320, "Grams"]], 
       Association[
       "Species" -> "AfricanElephant", "BodyWeight" -> 
        Quantity[6654, "Kilograms"], "BrainWeight" -> 
        Quantity[5712, "Grams"]], 
       Association[
       "Species" -> "Triceratops", "BodyWeight" -> 
        Quantity[9400, "Kilograms"], "BrainWeight" -> Quantity[70, "Grams"]], 
       
       Association[
       "Species" -> "RhesusMonkey", "BodyWeight" -> 
        Quantity[6.8, "Kilograms"], "BrainWeight" -> Quantity[179, "Grams"]], 
       
       Association[
       "Species" -> "Kangaroo", "BodyWeight" -> Quantity[35, "Kilograms"], 
        "BrainWeight" -> Quantity[56, "Grams"]], 
       Association[
       "Species" -> "GoldenHamster", "BodyWeight" -> 
        Quantity[0.12, "Kilograms"], "BrainWeight" -> Quantity[1, "Grams"]], 
       Association[
       "Species" -> "Mouse", "BodyWeight" -> Quantity[0.023, "Kilograms"], 
        "BrainWeight" -> Quantity[0.4, "Grams"]], 
       Association[
       "Species" -> "Rabbit", "BodyWeight" -> Quantity[2.5, "Kilograms"], 
        "BrainWeight" -> Quantity[12.1, "Grams"]], 
       Association[
       "Species" -> "Sheep", "BodyWeight" -> Quantity[55.5, "Kilograms"], 
        "BrainWeight" -> Quantity[175, "Grams"]], 
       Association[
       "Species" -> "Jaguar", "BodyWeight" -> Quantity[100, "Kilograms"], 
        "BrainWeight" -> Quantity[157, "Grams"]], 
       Association[
       "Species" -> "Chimpanzee", "BodyWeight" -> 
        Quantity[52.16, "Kilograms"], "BrainWeight" -> 
        Quantity[440, "Grams"]], 
       Association[
       "Species" -> "Rat", "BodyWeight" -> Quantity[0.28, "Kilograms"], 
        "BrainWeight" -> Quantity[1.9, "Grams"]], 
       Association[
       "Species" -> "Brachiosaurus", "BodyWeight" -> 
        Quantity[87000, "Kilograms"], "BrainWeight" -> 
        Quantity[154.5, "Grams"]], 
       Association[
       "Species" -> "Mole", "BodyWeight" -> Quantity[0.122, "Kilograms"], 
        "BrainWeight" -> Quantity[3, "Grams"]], 
       Association[
       "Species" -> "Pig", "BodyWeight" -> Quantity[192, "Kilograms"], 
        "BrainWeight" -> Quantity[180, "Grams"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Species"} -> 1, {All, "BodyWeight"} -> 
        1, {All, "BrainWeight"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Species" -> 
            TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
            "BodyWeight" -> TypeSystem`PackageScope`AtomShape[75], 
            "BrainWeight" -> TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Species", "BodyWeight", "BrainWeight"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Grams"]]}], 28], "Meta" -> 
     Association["Origin" -> HoldComplete[
         Query[All, {"BodyWeight" -> Interpreter[
             Restricted["StructuredQuantity", "Kilogram"]], "BrainWeight" -> 
           Interpreter[
             Restricted["StructuredQuantity", "Gram"]]}][
          Dataset`DatasetHandle[12511304310430]]], "ID" -> 19598000348830], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Species"} -> 1, {All, "BodyWeight"} -> 
        1, {All, "BrainWeight"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Species" -> 
            TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
            "BodyWeight" -> TypeSystem`PackageScope`AtomShape[75], 
            "BrainWeight" -> TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Species", "BodyWeight", "BrainWeight"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Grams"]]}], 28], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     28, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Species"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Species"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BodyWeight", 
                  Style[
                  "BodyWeight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "BodyWeight"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BodyWeight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BrainWeight", 
                  Style[
                  "BrainWeight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "BrainWeight"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BrainWeight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["MountainBeaver", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.35`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.1`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cow", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"465", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"423", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GreyWolf", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"36.33`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"119.5`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Goat", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"27.66`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"115", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GuineaPig", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.04`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.5`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Diplodocus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11700", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"50", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["AsianElephant", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2547", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4603", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Donkey", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"187.1`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"419", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Horse", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"521", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"655", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["PotarMonkey", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"10", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"115", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cat", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.3`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"25.6`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Giraffe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"529", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"680", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Gorilla", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"207", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"406", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Human", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1320", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["AfricanElephant", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6654", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5712", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Triceratops", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"9400", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"70", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["RhesusMonkey", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.8`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"179", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Kangaroo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GoldenHamster", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.12`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Mouse", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.023`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.4`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["BrainWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 28, 1], {1, 28 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 28, 1], {1, 28 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    28, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    28, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 28, 1], {1, 28 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 28, 1], {1, 28 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{403., {354.988525390625, 366.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{403., {354.988525390625, 366.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818940742480864*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"c3c968f6-4229-4eda-bb35-546359d930d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", 
   RowBox[{
    RowBox[{"1", ";;", "10"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Species\>\"", ",", "\"\<BodyWeight\>\""}], "}"}]}], "]"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"\:67e5\:770b\:524d", " ", "10", " ", "\:4e2a\:7684\:4f53\:91cd"}],
    " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7923191576463737`*^9, 3.79231918900697*^9}, {
  3.792319512116296*^9, 3.7923195189960003`*^9}, {3.7923829611935*^9, 
  3.7923829683593307`*^9}, {3.811849466196085*^9, 3.811849483266786*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"4f984ba5-6d8f-43e3-899c-4e55de24f70e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Species" -> "MountainBeaver", "BodyWeight" -> 
        Quantity[1.35, "Kilograms"]], 
       Association[
       "Species" -> "Cow", "BodyWeight" -> Quantity[465, "Kilograms"]], 
       Association[
       "Species" -> "GreyWolf", "BodyWeight" -> Quantity[36.33, "Kilograms"]], 
       Association[
       "Species" -> "Goat", "BodyWeight" -> Quantity[27.66, "Kilograms"]], 
       Association[
       "Species" -> "GuineaPig", "BodyWeight" -> Quantity[1.04, "Kilograms"]], 
       Association[
       "Species" -> "Diplodocus", "BodyWeight" -> 
        Quantity[11700, "Kilograms"]], 
       Association[
       "Species" -> "AsianElephant", "BodyWeight" -> 
        Quantity[2547, "Kilograms"]], 
       Association[
       "Species" -> "Donkey", "BodyWeight" -> Quantity[187.1, "Kilograms"]], 
       Association[
       "Species" -> "Horse", "BodyWeight" -> Quantity[521, "Kilograms"]], 
       Association[
       "Species" -> "PotarMonkey", "BodyWeight" -> 
        Quantity[10, "Kilograms"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Species"} -> 1, {All, "BodyWeight"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Species" -> 
            TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
            "BodyWeight" -> TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Species", "BodyWeight"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]]}], 10], "Meta" -> 
     Association["ID" -> 134557251812416], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Species"} -> 1, {All, "BodyWeight"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Species" -> 
            TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
            "BodyWeight" -> TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Species", "BodyWeight"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]]}], 10], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     10, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Species"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Species"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BodyWeight", 
                  Style[
                  "BodyWeight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "BodyWeight"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BodyWeight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["MountainBeaver", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.35`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Cow", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"465", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GreyWolf", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"36.33`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Goat", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"27.66`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GuineaPig", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.04`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Diplodocus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11700", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["AsianElephant", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2547", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Donkey", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"187.1`", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Horse", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"521", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["PotarMonkey", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"10", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["BodyWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{270., {187.488525390625, 198.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{270., {187.488525390625, 198.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818940832216237*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"cab6b768-0d9f-4ba4-bae3-473eb139d891"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:884c\:661f\:6570\:636e", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Planets\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.792318962342921*^9, 3.7923189710138817`*^9}, {
  3.7923192021200876`*^9, 3.7923192023075967`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"182345d5-a5a2-4d4c-b7a6-e7da9bd6385d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Mercury" -> 
       Association[
        "Mass" -> Quantity[3.30104`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[2439.7`5., "Kilometers"], "Moons" -> Association[]], 
       "Venus" -> Association[
        "Mass" -> Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], 
         "Radius" -> Quantity[6051.85`5., "Kilometers"], "Moons" -> 
         Association[]], "Earth" -> 
       Association[
        "Mass" -> Quantity[5.9721986`8.*^24, "Kilograms"], "Radius" -> 
         Quantity[6367.4446571000000000001`8.299868708313456, "Kilometers"], 
         "Moons" -> Association[
          "Moon" -> Association[
            "Mass" -> Quantity[
              7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1737.5`5., "Kilometers"]]]], "Mars" -> 
       Association[
        "Mass" -> Quantity[6.41693`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[3385.595`4.298042852900571, "Kilometers"], "Moons" -> 
         Association[
          "Phobos" -> 
           Association[
            "Mass" -> Quantity[
              1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
             "Radius" -> Quantity[11.1`3., "Kilometers"]], "Deimos" -> 
           Association[
            "Mass" -> Quantity[
              1.468340774924336`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[6.2`2., "Kilometers"]]]], "Jupiter" -> 
       Association[
        "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
         Quantity[69173.`5., "Kilometers"], "Moons" -> 
         Association[
          "Metis" -> Association[
            "Mass" -> Quantity[
              1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
             "Radius" -> Quantity[21.5`3., "Kilometers"]], "Adrastea" -> 
           Association[
            "Mass" -> Quantity[
              7.491534565940487`0.9999565727231415*^15, "Kilograms"], 
             "Radius" -> Quantity[8.2`2., "Kilometers"]], "Amalthea" -> 
           Association[
            "Mass" -> Quantity[
              2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
             "Radius" -> Quantity[83.45`4., "Kilometers"]], "Thebe" -> 
           Association[
            "Mass" -> Quantity[
              1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[49.3`3., "Kilometers"]], "Io" -> 
           Association[
            "Mass" -> Quantity[
              8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1821.6`5., "Kilometers"]], "Europa" -> 
           Association[
            "Mass" -> Quantity[
              4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1560.8`5., "Kilometers"]], "Ganymede" -> 
           Association[
            "Mass" -> Quantity[
              1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2631.2`5., "Kilometers"]], "Callisto" -> 
           Association[
            "Mass" -> Quantity[
              1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2410.3`5., "Kilometers"]], "Themisto" -> 
           Association[
            "Mass" -> Quantity[
              6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Leda" -> 
           Association[
            "Mass" -> Quantity[
              1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]], "Himalia" -> 
           Association[
            "Mass" -> Quantity[
              6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[85.`2., "Kilometers"]], "Lysithea" -> 
           Association[
            "Mass" -> Quantity[
              6.2928890353900092`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[18.`2., "Kilometers"]], "Elara" -> 
           Association[
            "Mass" -> Quantity[
              8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[43.`2., "Kilometers"]], "S/2000 J11" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Carpo" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Euporie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "S/2003 J3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J18" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Orthosie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Euanthe" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Harpalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
             Quantity[2.2`2., "Kilometers"]], "Praxidike" -> 
           Association[
            "Mass" -> Quantity[
              4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.4`2., "Kilometers"]], "Thyone" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J16" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Iocaste" -> 
           Association[
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Mneme" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Hermippe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Thelxinoe" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Helike" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Ananke" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[14.`2., "Kilometers"]], "S/2003 J15" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Eurydome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Arche" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Herse" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Pasithee" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "S/2003 J10" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Chaldene" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]], "Isonoe" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]], "Erinome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]], "Kale" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Aitne" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Taygete" -> 
           Association[
            "Mass" -> Quantity[
              1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]], "S/2003 J9" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Carme" -> 
           Association[
            "Mass" -> Quantity[
              1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[23.`2., "Kilometers"]], "Sponde" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Megaclite" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.7`2., "Kilometers"]], "S/2003 J5" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "S/2003 J19" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J23" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Kalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Kore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Pasiphae" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[30.`2., "Kilometers"]], "Eukelade" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "S/2003 J4" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Sinope" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
             "Radius" -> Quantity[19.`2., "Kilometers"]], "Hegemone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Aoede" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Kallichore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Autonoe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Callirrhoe" -> 
           Association[
            "Mass" -> Quantity[
              8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.3`2., "Kilometers"]], "Cyllene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J2" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]]]], "Saturn" -> 
       Association[
        "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[57316.`5., "Kilometers"], "Moons" -> 
         Association[
          "Tarqeq" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Pan" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.8`3., "Kilometers"]], "Daphnis" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.9`2., "Kilometers"]], "Atlas" -> 
           Association[
            "Mass" -> Quantity[
              2.097629678463337`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]], "Prometheus" -> 
           Association[
            "Mass" -> Quantity[
              1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
             "Radius" -> Quantity[46.8`3., "Kilometers"]], "Pandora" -> 
           Association[
            "Mass" -> Quantity[
              1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[40.6`3., "Kilometers"]], "Epimetheus" -> 
           Association[
            "Mass" -> Quantity[
              5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[58.3`3., "Kilometers"]], "Janus" -> 
           Association[
            "Mass" -> Quantity[
              1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[90.4`3., "Kilometers"]], "Aegaeon" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.25`2., "Kilometers"]], "Mimas" -> 
           Association[
            "Mass" -> Quantity[
              3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
             "Radius" -> Quantity[198.8`4., "Kilometers"]], "Methone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]], "Anthe" -> 
           Association[
            "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
             Quantity[1.`1., "Kilometers"]], "Pallene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Enceladus" -> 
           Association[
            "Mass" -> Quantity[
              1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
             "Radius" -> Quantity[252.3`4., "Kilometers"]], "Tethys" -> 
           Association[
            "Mass" -> Quantity[
              6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
             "Radius" -> Quantity[536.3`4., "Kilometers"]], "Calypso" -> 
           Association[
            "Mass" -> Quantity[
              3.595936591651433`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.5`2., "Kilometers"]], "Telesto" -> 
           Association[
            "Mass" -> Quantity[
              7.191873183302868`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.`2., "Kilometers"]], "Polydeuces" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2`2., "Kilometers"]], "Dione" -> 
           Association[
            "Mass" -> Quantity[
              1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[562.5`4., "Kilometers"]], "Helene" -> 
           Association[
            "Mass" -> Quantity[
              2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]], "Rhea" -> 
           Association[
            "Mass" -> Quantity[
              2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[764.5`4., "Kilometers"]], "Titan" -> 
           Association[
            "Mass" -> Quantity[
              1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
             "Radius" -> Quantity[2575.5`5., "Kilometers"]], "Hyperion" -> 
           Association[
            "Mass" -> Quantity[
              5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[133.`4., "Kilometers"]], "Iapetus" -> 
           Association[
            "Mass" -> Quantity[
              1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[734.5`4., "Kilometers"]], "Kiviuq" -> 
           Association[
            "Mass" -> Quantity[
              3.296275209013815`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[8.`1., "Kilometers"]], "Ijiraq" -> 
           Association[
            "Mass" -> Quantity[
              1.198645530550478`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[6.`1., "Kilometers"]], "Phoebe" -> 
           Association[
            "Mass" -> Quantity[
              8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[106.6`4., "Kilometers"]], "Paaliaq" -> 
           Association[
            "Mass" -> Quantity[
              8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
             Quantity[11.`3., "Kilometers"]], "Skathi" -> 
           Association[
            "Mass" -> Quantity[
              3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`1., "Kilometers"]], "Albiorix" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]], "S/2007 S2" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
             Quantity[3.`1., "Kilometers"]], "Bebhionn" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Erriapo" -> 
           Association[
            "Mass" -> Quantity[
              7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
             Quantity[5.`1., "Kilometers"]], "Siarnaq" -> 
           Association[
            "Mass" -> Quantity[
              3.8955979742890535`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[20.`2., "Kilometers"]], "Skoll" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Tarvos" -> 
           Association[
            "Mass" -> Quantity[
              2.696952443738576`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[7.5`2., "Kilometers"]], "Greip" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S13" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Hyrrokkin" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Mundilfari" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "S/2006 S1" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Jarnsaxa" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Narvi" -> 
           Association[
            "Mass" -> Quantity[
              3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Bergelmir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S17" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Suttungr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Hati" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Bestla" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Farbauti" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Thrymr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "S/2007 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]], "Aegir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S7" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2006 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Kari" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Fenrir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Surtur" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Ymir" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.`1., "Kilometers"]], "Loge" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Fornjot" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]]]], "Uranus" -> 
       Association[
        "Mass" -> Quantity[8.68103`6.*^25, "Kilograms"], "Radius" -> 
         Quantity[25266.`5., "Kilometers"], "Moons" -> 
         Association[
          "Cordelia" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395642923`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[20.1`3., "Kilometers"]], "Ophelia" -> 
           Association[
            "Mass" -> Quantity[
              5.3939048874771508`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[21.4`3., "Kilometers"]], "Bianca" -> 
           Association[
            "Mass" -> Quantity[
              9.2895028617662042`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[25.7`3., "Kilometers"]], "Cressida" -> 
           Association[
            "Mass" -> Quantity[
              3.43112283120074311`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[39.8`3., "Kilometers"]], "Desdemona" -> 
           Association[
            "Mass" -> Quantity[
              1.78298522669383596`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[32.`3., "Kilometers"]], "Juliet" -> 
           Association[
            "Mass" -> Quantity[
              5.57370171705972251`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[46.8`3., "Kilometers"]], "Portia" -> 
           Association[
            "Mass" -> Quantity[
              1.681100356597045339`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[67.6`3., "Kilometers"]], "Rosalind" -> 
           Association[
            "Mass" -> Quantity[
              2.54712175241976567`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[36.`2., "Kilometers"]], "Cupid" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[5.`2., "Kilometers"]], "Belinda" -> 
           Association[
            "Mass" -> Quantity[
              3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[40.3`3., "Kilometers"]], "Perdita" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]], "Puck" -> 
           Association[
            "Mass" -> Quantity[
              2.893230649366216176`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[81.`2., "Kilometers"]], "Mab" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[5.`2., "Kilometers"]], "Miranda" -> 
           Association[
            "Mass" -> Quantity[
              6.5925504180276287794`1.9995659225206872*^19, "Kilograms"], 
             "Radius" -> Quantity[235.8`4., "Kilometers"]], "Ariel" -> 
           Association[
            "Mass" -> Quantity[
              1.352971142608851997243`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[578.9`4., "Kilometers"]], "Umbriel" -> 
           Association[
            "Mass" -> Quantity[
              1.171676006113092205807`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[584.7`4., "Kilometers"]], "Titania" -> 
           Association[
            "Mass" -> Quantity[
              3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[788.9`4., "Kilometers"]], "Oberon" -> 
           Association[
            "Mass" -> Quantity[
              3.013095202421263971712`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[761.4`4., "Kilometers"]], "Francisco" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[11.`2., "Kilometers"]], "Caliban" -> 
           Association[
            "Mass" -> Quantity[
              7.34170387462167751`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[49.`2., "Kilometers"]], "Stephano" -> 
           Association[
            "Mass" -> Quantity[
              5.99322765275239`0.9999565727231373*^15, "Kilograms"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]], "Trinculo" -> 
           Association[
            "Mass" -> Quantity[
              7.49153456594048`0.9999565727231373*^14, "Kilograms"], "Radius" -> 
             Quantity[5.`1., "Kilometers"]], "Sycorax" -> 
           Association[
            "Mass" -> Quantity[
              5.378921818345269844`2.9956786262173627*^18, "Kilograms"], 
             "Radius" -> Quantity[95.`2., "Kilometers"]], "Margaret" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]], "Prospero" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.`2., "Kilometers"]], "Setebos" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.`2., "Kilometers"]], "Ferdinand" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]]]], "Neptune" -> 
       Association[
        "Mass" -> Quantity[1.0241`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[24552.5`5., "Kilometers"], "Moons" -> 
         Association[
          "Naiad" -> Association[
            "Mass" -> Quantity[
              1.94779898714452669`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[33.`2., "Kilometers"]], "Thalassa" -> 
           Association[
            "Mass" -> Quantity[
              3.74576728297024363`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[41.`2., "Kilometers"]], "Despina" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846333643`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[75.`2., "Kilometers"]], "Galatea" -> 
           Association[
            "Mass" -> Quantity[
              3.745767282970243625`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[88.`2., "Kilometers"]], "Larissa" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520721585`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[97.`2., "Kilometers"]], "Proteus" -> 
           Association[
            "Mass" -> Quantity[
              5.0343112283120074311`2.995678626217367*^19, "Kilograms"], 
             "Radius" -> Quantity[210.`3., "Kilometers"]], "Triton" -> 
           Association[
            "Mass" -> Quantity[
              2.139432441341284348686`4.6989700043360205*^22, "Kilograms"], 
             "Radius" -> Quantity[1353.4`5., "Kilometers"]], "Nereid" -> 
           Association[
            "Mass" -> Quantity[
              3.0865122411674807466`2.9956786262173587*^19, "Kilograms"], 
             "Radius" -> Quantity[170.`3., "Kilometers"]], "Halimede" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[30.`2., "Kilometers"]], "Sao" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]], "Laomedeia" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]], "Psamathe" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]], "Neso" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[30.`2., "Kilometers"]]]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[0]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
     "Meta" -> Association["ID" -> 134561546779730], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[0]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 8, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 8, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mercury"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.30104`6.*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2439.7`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mercury"], 
                   Key["Moons"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Venus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6051.85`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Venus"], 
                   Key["Moons"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9721986`8.*^24", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "6367.4446571000000000001`8.299868708313456", "\"km\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"], 
                   Key["Moons"], 
                   Key["Moon"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "7.3459006322855173653772`4.995678626217362*^22", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1737.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.41693`6.*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3385.595`4.298042852900571", "\"km\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Phobos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11.1`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Deimos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.468340774924336`1.9995659225206786*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.89813`6.*^27", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"69173.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Metis", 
                  Style[
                  "Metis", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Metis"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.19864553055047796`0.9999565727231415*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"21.5`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Adrastea"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "7.491534565940487`0.9999565727231415*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["63 total \:203a ", ""], 
                  Style[
                   Superscript["63 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.68319`6.*^26", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57316.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tarqeq", 
                  Style[
                  "Tarqeq", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Tarqeq"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pan", 
                  Style[
                  "Pan", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Pan"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "4.944412813520729`1.9995659225206872*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"12.8`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["61 total \:203a ", ""], 
                  Style[
                   Superscript["61 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.68103`6.*^25", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"25266.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cordelia", 
                  Style[
                  "Cordelia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Cordelia"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "4.4949207395642923`1.9995659225206872*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"20.1`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ophelia", 
                  Style[
                  "Ophelia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Ophelia"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "5.3939048874771508`1.9995659225206872*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"21.4`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["27 total \:203a ", ""], 
                  Style[
                   Superscript["27 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.0241`6.*^26", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24552.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Naiad", 
                  Style[
                  "Naiad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Naiad"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.94779898714452669`1.9995659225206872*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Thalassa", 
                  Style[
                  "Thalassa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Thalassa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "3.74576728297024363`1.9995659225206872*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["13 total \:203a ", ""], 
                  Style[
                   Superscript["13 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{689., {311.988525390625, 323.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{689., {311.988525390625, 323.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818940850622445*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"f4febfa2-3aba-46e9-9b65-12ca62909578"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e2", "[", 
   RowBox[{"All", ",", "\"\<Radius\>\""}], "]"}], " ", 
  RowBox[{"(*", " ", "\:884c\:661f\:7684\:534a\:5f84", " ", "*)"}]}]], "Input",\

 CellChangeTimes->{{3.7923193038883276`*^9, 3.7923193109365673`*^9}, {
  3.7923194706007967`*^9, 3.7923194781337585`*^9}, {3.811849501603629*^9, 
  3.811849507582437*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"24976c7c-7bdd-4c4e-9b82-81a13da20827"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Mercury" -> Quantity[2439.7`5., "Kilometers"], "Venus" -> 
       Quantity[6051.85`5., "Kilometers"], "Earth" -> 
       Quantity[6367.4446571000000000001`8.299868708313456, "Kilometers"], 
       "Mars" -> Quantity[3385.595`4.298042852900571, "Kilometers"], 
       "Jupiter" -> Quantity[69173.`5., "Kilometers"], "Saturn" -> 
       Quantity[57316.`5., "Kilometers"], "Uranus" -> 
       Quantity[25266.`5., "Kilometers"], "Neptune" -> 
       Quantity[24552.5`5., "Kilometers"]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[63.], 
         TypeSystem`PackageScope`AtomShape[75]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilometers"]], 8], "Meta" -> 
     Association["ID" -> 134565841747037], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[63.], 
         TypeSystem`PackageScope`AtomShape[75]]], 8, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilometers"]], 8], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     8, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mercury"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2439.7`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Venus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6051.85`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "6367.4446571000000000001`8.299868708313456", "\"km\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3385.595`4.298042852900571", "\"km\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"69173.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57316.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"25266.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24552.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{216., {140.988525390625, 152.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{216., {140.988525390625, 152.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818940861101489*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"7ab188ce-9d37-471c-9a20-e27fa7a76cb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e2", "[", 
   RowBox[{"All", ",", "\"\<Moons\>\"", ",", 
    RowBox[{"Values", "/*", 
     RowBox[{"<|", 
      RowBox[{"\"\<Average Moon Radius\>\"", "->", "Mean"}], "|>"}]}], ",", 
    "\"\<Radius\>\""}], "]"}], " ", 
  RowBox[{
  "(*", " ", "\:5e73\:5747\:536b\:661f\:534a\:5f84", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.79231898102531*^9, 3.792318988698966*^9}, {
  3.7923192065642595`*^9, 3.7923192075855575`*^9}, {3.7923194809951444`*^9, 
  3.7923194858821363`*^9}, {3.811849549701169*^9, 3.811849558787345*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"8490c5aa-2d58-45dc-a62f-56a3eb51a2be"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Mercury" -> 
       Association["Average Moon Radius" -> Missing["Indeterminate"]], 
       "Venus" -> Association[
        "Average Moon Radius" -> Missing["Indeterminate"]], "Earth" -> 
       Association[
        "Average Moon Radius" -> Quantity[1737.5`5., "Kilometers"]], "Mars" -> 
       Association[
        "Average Moon Radius" -> 
         Quantity[8.65`2.3741287261709356, "Kilometers"]], "Jupiter" -> 
       Association[
        "Average Moon Radius" -> 
         Quantity[141.7626984126984126984`3.3835956603520443, "Kilometers"]], 
       "Saturn" -> 
       Association[
        "Average Moon Radius" -> 
         Quantity[103.9745901639344262295`3.021219754058679, "Kilometers"]], 
       "Uranus" -> 
       Association[
        "Average Moon Radius" -> 
         Quantity[133.3481481481481481482`2.8927751410881157, "Kilometers"]], 
       "Neptune" -> 
       Association[
        "Average Moon Radius" -> 
         Quantity[168.2615384615384615385`2.6467700822409883, "Kilometers"]]],
      "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 
        1, {All, "Average Moon Radius"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Average Moon Radius" -> TypeSystem`PackageScope`AtomShape[75]]], 
           
           DirectedInfinity[1], 1, {All}]]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Average Moon Radius"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]]}], 8], "Meta" -> 
     Association["ID" -> 134570136714346], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 
        1, {All, "Average Moon Radius"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Average Moon Radius" -> TypeSystem`PackageScope`AtomShape[75]]], 
           
           DirectedInfinity[1], 1, {All}]]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Average Moon Radius"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]]}], 8], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     8, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Average Moon Radius", 
                  Style[
                  "Average Moon Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Average Moon Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Average Moon Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mercury"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Venus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1737.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.65`2.3741287261709356", "\"km\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "141.7626984126984126984`3.3835956603520443", "\"km\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "103.9745901639344262295`3.021219754058679", "\"km\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "133.3481481481481481482`2.8927751410881157", "\"km\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "168.2615384615384615385`2.6467700822409883", "\"km\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Average Moon Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{275., {156.488525390625, 167.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{275., {156.488525390625, 167.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81894087438945*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"e5486b44-6276-4e87-98cb-a3e9240d953e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6cf0\:5766\:5c3c\:514b\:53f7\:4e58\:5ba2", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7923193685574074`*^9, 3.7923193745514135`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"39024095-469d-49d0-9921-7ab180616cc5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 80, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 32, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 59, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 11, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 76, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 70, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 4, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 13, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 34, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 6, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 67, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 60, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 38, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 6, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 7, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 63, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 60, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 13, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 70, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 59, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 66, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 59, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 48, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 8, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 8, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 74, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 63, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "class"} -> 1, {All, "age"} -> 1, {All, "sex"} -> 
        1, {All, "survived"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "class" -> TypeSystem`PackageScope`AtomShape[27.], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[54.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Meta" -> 
     Association["ID" -> 134574431681665], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "class"} -> 1, {All, "age"} -> 1, {All, "sex"} -> 
        1, {All, "survived"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "class" -> TypeSystem`PackageScope`AtomShape[27.], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[54.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     4, "DataRowCount" -> 1309, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "class"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["age", 
                  Style[
                  "age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "age"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sex", 
                  Style[
                  "sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sex"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "survived"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1309, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1309, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{275., {354.988525390625, 366.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{275., {354.988525390625, 366.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818940897246275*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"a85ca028-1cf1-4ab9-9793-1776641ebf35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e3", "[", 
   RowBox[{"Counts", ",", "\"\<class\>\""}], "]"}], " ", 
  RowBox[{
  "(*", " ", "\:6bcf\:7ea7\:8231\:4f4d\:7684\:4e58\:5ba2\:6570", " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.792319378543825*^9, 3.7923193907014737`*^9}, {
  3.7923194899842224`*^9, 3.792319497107218*^9}, {3.811849591371056*^9, 
  3.8118496095604467`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"d17a5749-c1bc-4c20-bc1c-92119eefcf79"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association["1st" -> 323, "2nd" -> 277, "3rd" -> 709], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Integer], 3], "Meta" -> 
     Association["ID" -> 134578726648973], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1st", 
                  Style[
                  "1st", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["1st"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["323"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2nd", 
                  Style[
                  "2nd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["2nd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["277"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3rd", 
                  Style[
                  "3rd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["3rd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["709"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{108., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{108., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818940908830591*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"c3073b49-d923-4f19-813b-ab74ff538f25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e3", "[", 
   RowBox[{"Counts", ",", "\"\<sex\>\""}], "]"}], " ", 
  RowBox[{"(*", " ", "\:6027\:522b\:6570\:91cf", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.792319399135031*^9, 3.792319406256031*^9}, {
  3.7923195001671066`*^9, 3.79231950589886*^9}, {3.811849619212139*^9, 
  3.81184962620964*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"476172a2-f9a0-4bd9-a556-4ec269ad1bfd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association["female" -> 466, "male" -> 843], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[54.], 
         TypeSystem`PackageScope`AtomShape[34]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["female", "male"]], 
       TypeSystem`Atom[Integer], 2], "Meta" -> 
     Association["ID" -> 134583021616301], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[54.], 
         TypeSystem`PackageScope`AtomShape[34]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["female", "male"]], 
       TypeSystem`Atom[Integer], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["female", 
                  Style[
                  "female", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["female"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["female"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["female"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["male", 
                  Style[
                  "male", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["male"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["male"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["843"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["male"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{133., {47.988525390625, 59.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{133., {47.988525390625, 59.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818940940747774*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"013df7ce-cff2-40fc-84e3-bf90f5789c50"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"03a68547-a48f-47a3-9d23-49a0cfaac420"],

Cell[CellGroupData[{

Cell["\:521b\:5efa\:6570\:636e\:96c6", "Section", "TentativeExample",ExpressionUUID->"0e8b2df0-6816-4cf8-a347-e50b1e12a819"],

Cell["\:6570\:636e\:96c6\:51fd\:6570\:53ef\:4ee5\:5e94\:7528\:4e8e\:5305\:542b\
\:5217\:8868\:548c\:5173\:8054\:7684\:8868\:8fbe\:5f0f\:ff0c\:4ee5\:521b\:5efa\
\:6570\:636e\:96c6\:5b9e\:4f8b.", "Text", "TentativeExample",
 CellChangeTimes->{{3.8118496348266897`*^9, 
  3.811849653392578*^9}},ExpressionUUID->"b06854ac-f7a6-4928-b864-\
16b45d749e05"],

Cell[CellGroupData[{

Cell["\:6ca1\:6709\:6807\:5934", "Subsubsection", "TentativeExample",
 CellChangeTimes->{
  3.8118496616364307`*^9, {3.8159193102812853`*^9, 3.81591931423494*^9}, 
   3.8159194161832743`*^9, 
   3.8189577420357447`*^9},ExpressionUUID->"26af3a1d-ad56-48d7-ace9-\
14ee02960bba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list2d", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "list2d", "]"}], "\n", 
 RowBox[{"Dataset", "[", "list2d", "]"}]}], "Input",
 CellChangeTimes->{{3.7929959528737745`*^9, 3.7929959890673175`*^9}, {
  3.7929960918781147`*^9, 3.7929960964309835`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"e9436716-87b6-43e8-b103-bedeae643d83"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"},
     {"7", "8", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.818958313489677*^9},
 CellLabel->
  "Out[111]//MatrixForm=",ExpressionUUID->"b921ed6b-029c-417d-8b34-\
f4646306ac4c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[3, 3], 3, 3, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 3], 3], "Meta" -> 
     Association["ID" -> 134595906535561], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[3, 3], 3, 3, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 3], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = 
                    {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818958313540655*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"938cdbd8-43d1-4778-ab83-3415ad46d456"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5e26\:5217\:6807\:5934", "Subsubsection", "TentativeExample",
 CellChangeTimes->{
  3.8118496716305656`*^9, {3.815919319658123*^9, 3.8159193207220707`*^9}, 
   3.8159194115716343`*^9},ExpressionUUID->"3eb0a099-bd2c-49ff-a2f2-\
8d0aac5bfefc"],

Cell["\:5173\:8054\:5217\:8868\[LongDash]\[LongDash]\:6bcf\:4e2a\:5173\:8054\
\:4ee3\:8868\:4e00\:6761\:8bb0\:5f55\:ff1a", "Text", "TentativeExample",
 CellChangeTimes->{
  3.81184967853694*^9},ExpressionUUID->"91e71f08-976d-471b-aa9a-8bb24b2f6c90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<c1\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<c2\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<c3\>\"", "\[Rule]", "3"}]}], "|>"}], ",", 
     "\[IndentingNewLine]", "\t       ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<c1\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<c2\>\"", "\[Rule]", "5"}], ",", 
       RowBox[{"\"\<c3\>\"", "\[Rule]", "6"}]}], "|>"}], ",", 
     "\[IndentingNewLine]", "\t       ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<c1\>\"", "\[Rule]", "7"}], ",", 
       RowBox[{"\"\<c2\>\"", "\[Rule]", "8"}], ",", 
       RowBox[{"\"\<c3\>\"", "\[Rule]", "9"}]}], "|>"}]}], "}"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.7929960083638*^9, 3.792996031083253*^9}, {
  3.7929960997291822`*^9, 3.7929961063175755`*^9}, {3.792996434962823*^9, 
  3.792996461611765*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"eb2e0473-84cf-492c-aea3-0c016065c932"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["c1" -> 1, "c2" -> 2, "c3" -> 3], 
       Association["c1" -> 4, "c2" -> 5, "c3" -> 6], 
       Association["c1" -> 7, "c2" -> 8, "c3" -> 9]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "c1"} -> 1, {All, "c2"} -> 1, {All, "c3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "c1" -> TypeSystem`PackageScope`AtomShape[34], "c2" -> 
            TypeSystem`PackageScope`AtomShape[34], "c3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"c1", "c2", "c3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134600201502883], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "c1"} -> 1, {All, "c2"} -> 1, {All, "c3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "c1" -> TypeSystem`PackageScope`AtomShape[34], "c2" -> 
            TypeSystem`PackageScope`AtomShape[34], "c3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"c1", "c2", "c3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c1", 
                  Style[
                  "c1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "c1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c2", 
                  Style[
                  "c2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "c2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c3", 
                  Style[
                  "c3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "c3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["c1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["c2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["c3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["c1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["c2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["c3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8189583387509727`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"f390b2f3-2769-4ad9-a092-8b0f59203036"]
}, Open  ]],

Cell["\:8bf7\:6ce8\:610f\:ff0c\:60a8\:4e0d\:80fd\:4f7f\:7528\:5916\:90e8\:5173\
\:8054\[LongDash]\[LongDash]\:91cd\:590d\:9879\:5c06\:88ab\:5220\:9664\:ff1a",\
 "Text", "TentativeExample",
 CellChangeTimes->{
  3.811849726531591*^9},ExpressionUUID->"2f25c798-fd82-4148-b64c-\
4517ee4c113f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<c1\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<c2\>\"", "\[Rule]", "2"}], ",", 
     RowBox[{"\"\<c3\>\"", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<c1\>\"", "\[Rule]", "2"}], ",", 
     RowBox[{"\"\<c2\>\"", "\[Rule]", "4"}], ",", 
     RowBox[{"\"\<c3\>\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<c1\>\"", "\[Rule]", "3"}], ",", 
     RowBox[{"\"\<c2\>\"", "\[Rule]", "6"}], ",", 
     RowBox[{"\"\<c3\>\"", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
  "|>"}]], "Input",
 CellChangeTimes->{{3.7923833975335426`*^9, 3.7923834042087545`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"d081f097-06d9-421a-a5c6-436375a08ed0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"c1\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"c2\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"c3\"\>", "\[Rule]", "9"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.818958351245798*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"38283aa5-2bdc-42b5-acbf-34c8986ba294"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5e26\:884c\:548c\:5217\:6807\:5934", "Subsubsection", "TentativeExample",
 CellChangeTimes->{
  3.811849740985833*^9},ExpressionUUID->"99c7ab21-c101-4944-93b2-\
b8f7252f9074"],

Cell["\:8bb0\:5f55\:4f7f\:7528\:89c4\:5219\:547d\:540d. \:4f7f\:7528\:5916\
\:90e8\:5173\:8054\:800c\:4e0d\:662f\:5916\:90e8\:5217\:8868.", "Text", \
"TentativeExample",
 CellChangeTimes->{{3.811849769948854*^9, 
  3.811849773579112*^9}},ExpressionUUID->"547acee7-f8f4-4107-abb9-\
8afc6bbae90a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<r1\>\"", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<c1\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<c2\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<c3\>\"", "\[Rule]", "3"}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "                ", 
    RowBox[{"\"\<r2\>\"", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<c1\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<c2\>\"", "\[Rule]", "5"}], ",", 
       RowBox[{"\"\<c3\>\"", "\[Rule]", "6"}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "                ", 
    RowBox[{"\"\<r3\>\"", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<c1\>\"", "\[Rule]", "7"}], ",", 
       RowBox[{"\"\<c2\>\"", "\[Rule]", "8"}], ",", 
       RowBox[{"\"\<c3\>\"", "\[Rule]", "9"}]}], "|>"}]}]}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7929962453723783`*^9, 3.7929962979970865`*^9}, {
  3.792996414595132*^9, 3.7929964292021933`*^9}, {3.792996509039248*^9, 
  3.7929965093863645`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"dd0e5d76-d441-4214-8ac7-68da938e4431"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "r1" -> Association["c1" -> 1, "c2" -> 2, "c3" -> 3], "r2" -> 
       Association["c1" -> 4, "c2" -> 5, "c3" -> 6], "r3" -> 
       Association["c1" -> 7, "c2" -> 8, "c3" -> 9]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "c1"} -> 
        1, {All, "c2"} -> 1, {All, "c3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "c1" -> TypeSystem`PackageScope`AtomShape[34], "c2" -> 
             TypeSystem`PackageScope`AtomShape[34], "c3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"c1", "c2", "c3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134604496470218], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "c1"} -> 
        1, {All, "c2"} -> 1, {All, "c3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "c1" -> TypeSystem`PackageScope`AtomShape[34], "c2" -> 
             TypeSystem`PackageScope`AtomShape[34], "c3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"c1", "c2", "c3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c1", 
                  Style[
                  "c1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "c1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c2", 
                  Style[
                  "c2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "c2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c3", 
                  Style[
                  "c3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "c3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r1", 
                  Style[
                  "r1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r1"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["c1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["c2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["c3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r2", 
                  Style[
                  "r2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r2"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["c1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["c2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["c3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r3", 
                  Style[
                  "r3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r3"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["c1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["c2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["c3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{196., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{196., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818958378275792*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"270ed834-9151-4ef9-9fac-3a4b6404e355"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:53ef\:4ee5\:8fdb\:884c\:4efb\:610f\:6df1\:5ea6\:5d4c\:5957\:ff08\:53ef\
\:9009\:ff09", "Subsubsection", "TentativeExample",
 CellChangeTimes->{
  3.815919491056045*^9, {3.818958463093498*^9, 
   3.8189584640269127`*^9}},ExpressionUUID->"535f79d0-0794-4e2f-9640-\
3fffddd779b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Earth\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Mass\>\"", "\[Rule]", 
         RowBox[{"Quantity", "[", 
          RowBox[{
           RowBox[{"5.9721986", "*", 
            RowBox[{"10", "^", "24"}]}], ",", "\"\<Kilograms\>\""}], "]"}]}], 
        ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
        RowBox[{"\"\<Radius\>\"", "\[Rule]", 
         RowBox[{"Quantity", "[", 
          RowBox[{"6367.4447", ",", "\"\<Kilometers\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t", 
        RowBox[{"\"\<Moons\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Moon\>\"", "\[Rule]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Mass\>\"", "\[Rule]", 
              RowBox[{"Quantity", "[", 
               RowBox[{
                RowBox[{"7.3459", "*", 
                 RowBox[{"10", "^", "22"}]}], ",", "\"\<Kilograms\>\""}], 
               "]"}]}], ",", 
             RowBox[{"\"\<Radius\>\"", "\[Rule]", 
              RowBox[{"Quantity", "[", 
               RowBox[{"1737.5", ",", "\"\<Kilometers\>\""}], "]"}]}]}], 
            "|>"}]}], "|>"}]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     "\t\t\t ", 
     RowBox[{"\"\<Mars\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Mass\>\"", "\[Rule]", 
         RowBox[{"Quantity", "[", 
          RowBox[{
           RowBox[{"6.41693", "*", 
            RowBox[{"10", "^", "23"}]}], ",", "\"\<Kilograms\>\""}], "]"}]}], 
        ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
        RowBox[{"\"\<Radius\>\"", "\[Rule]", 
         RowBox[{"Quantity", "[", 
          RowBox[{"3386.", ",", "\"\<Kilometers\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t", 
        RowBox[{"\"\<Moons\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Phobos\>\"", "\[Rule]", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<Mass\>\"", "\[Rule]", 
               RowBox[{"Quantity", "[", 
                RowBox[{
                 RowBox[{"1.072", "*", 
                  RowBox[{"10", "^", "16"}]}], ",", "\"\<Kilograms\>\""}], 
                "]"}]}], ",", 
              RowBox[{"\"\<Radius\>\"", "\[Rule]", 
               RowBox[{"Quantity", "[", 
                RowBox[{"11.1", ",", "\"\<Kilometers\>\""}], "]"}]}]}], 
             "|>"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t\t    ", 
           RowBox[{"\"\<Deimos\>\"", "\[Rule]", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<Mass\>\"", "\[Rule]", 
               RowBox[{"Quantity", "[", 
                RowBox[{
                 RowBox[{"1.5", "*", 
                  RowBox[{"10", "^", "15"}]}], ",", "\"\<Kilograms\>\""}], 
                "]"}]}], ",", 
              RowBox[{"\"\<Radius\>\"", "\[Rule]", 
               RowBox[{"Quantity", "[", 
                RowBox[{"6.2", ",", "\"\<Kilometers\>\""}], "]"}]}]}], 
             "|>"}]}]}], "|>"}]}]}], "|>"}]}]}], "|>"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7929957262529583`*^9, 3.7929957262549534`*^9}, {
  3.7929957580861063`*^9, 3.792995887921988*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"b3aeb954-5638-4940-a18d-f710ff7e8ace"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Earth" -> Association[
        "Mass" -> Quantity[5.9721986*^24, "Kilograms"], "Radius" -> 
         Quantity[6367.4447, "Kilometers"], "Moons" -> 
         Association[
          "Moon" -> Association[
            "Mass" -> Quantity[7.3459*^22, "Kilograms"], "Radius" -> 
             Quantity[1737.5, "Kilometers"]]]], "Mars" -> 
       Association[
        "Mass" -> Quantity[6.416929999999999*^23, "Kilograms"], "Radius" -> 
         Quantity[3386., "Kilometers"], "Moons" -> 
         Association[
          "Phobos" -> 
           Association[
            "Mass" -> Quantity[1.072*^16, "Kilograms"], "Radius" -> 
             Quantity[11.1, "Kilometers"]], "Deimos" -> 
           Association[
            "Mass" -> Quantity[1.5*^15, "Kilograms"], "Radius" -> 
             Quantity[6.2, "Kilometers"]]]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[12]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[48.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 2], 
     "Meta" -> Association["ID" -> 134625971306798], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[12]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[48.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 2], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9721986`*^24", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6367.4447`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"], 
                   Key["Moons"], 
                   Key["Moon"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.3459`*^22", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1737.5`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.416929999999999`*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3386.`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Phobos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.072`*^16", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11.1`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Deimos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`*^15", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.2`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{622., {97.488525390625, 108.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{622., {97.488525390625, 108.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818958477820619*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"23f5cd3c-7780-4796-9fb7-815ad6d85b12"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"74b77ee9-c2ca-495c-bbef-50008d7d828f"],

Cell[CellGroupData[{

Cell["\:4ece\:6570\:636e\:96c6\:4e2d\:9009\:62e9\:5143\:7d20", "Section", "TentativeExample",
 CellChangeTimes->{3.81184982092703*^9, 
  3.81184985933499*^9},ExpressionUUID->"c1354bbd-ebd1-4a1c-bc2f-10e13a0fafc2"],

Cell["\:4ece\:6570\:636e\:96c6\:4e2d\:9009\:62e9\:5143\:7d20\:4e0e\:4ece\:77e9\
\:9635\:9009\:62e9\:5143\:7d20\:975e\:5e38\:76f8\:4f3c.", "Text", \
"TentativeExample",
 CellChangeTimes->{{3.8118498421800957`*^9, 
  3.811849855084895*^9}},ExpressionUUID->"5fa04e97-2de4-409d-91e7-\
948ac0ad43a5"],

Cell["\:4f7f\:7528 k1\:3001k2\:3001k3 \:63d0\:9192\:81ea\:5df1\:ff0c\:8fd9\
\:4e9b\:662f\:5173\:8054\:4e2d\:7684\:952e\:ff1a", "Text", "TentativeExample",
 
 CellChangeTimes->{{3.811855290907167*^9, 
  3.8118553073132668`*^9}},ExpressionUUID->"52a30fbf-b7dd-4287-8035-\
617754ca23a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "mat", "]"}], "\n", 
 RowBox[{"ds", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<k3\>\"", "\[Rule]", "3"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "5"}], ",", 
       RowBox[{"\"\<k3\>\"", "\[Rule]", "6"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "7"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "8"}], ",", 
       RowBox[{"\"\<k3\>\"", "\[Rule]", "9"}]}], "|>"}]}], "}"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7929965614584494`*^9, 3.79299659413535*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"d06fc2e5-a317-429b-acc3-2037e37f0911"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"},
     {"7", "8", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.81895943253613*^9},
 CellLabel->
  "Out[122]//MatrixForm=",ExpressionUUID->"4a078872-31b0-466a-b5d9-\
f9786fb2e0ba"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> 2, "k3" -> 3], 
       Association["k1" -> 4, "k2" -> 5, "k3" -> 6], 
       Association["k1" -> 7, "k2" -> 8, "k3" -> 9]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134630266275049], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81895943265672*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"b3feca01-64b8-4aa7-9386-3909dfeec4d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:9009\:62e9\:884c", "Subsubsection", "TentativeExample"],

Cell["\:77e9\:9635\:ff1a", "Text", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.792383536897632*^9, 3.792383549796163*^9}, {
  3.7923836333767056`*^9, 3.7923836337646427`*^9}, {3.7923837851775856`*^9, 
  3.7923837853484592`*^9}, {3.792384569521309*^9, 3.792384570141655*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"2eea3b3f-f872-476b-9b28-cca426833ddf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.818959469219905*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"cc307ea0-2f02-4957-b93a-5803bce0ea9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7923835556056995`*^9, 3.792383562577092*^9}, {
  3.7923837878816624`*^9, 3.792383788021289*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"372e674b-7df1-48bf-af59-09f79cc0e867"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8189594744884787`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"e3061dc2-d832-47e9-949a-fbfbe548d766"]
}, Open  ]],

Cell["\:6570\:636e\:96c6\[LongDash]\[LongDash]\:60a8\:9700\:8981\:4e00\:5bf9\
\:65b9\:62ec\:53f7\:ff1a", "Text", "TentativeExample",
 CellChangeTimes->{{3.811855327953533*^9, 
  3.8118553349845047`*^9}},ExpressionUUID->"5ef13d83-5f65-463c-9b7c-\
1f95ebaa05de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"1", ";;", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.792478140404137*^9, 3.792478156123516*^9}, {
  3.7930021854767494`*^9, 3.7930021874395804`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"b710b58a-9ab2-4fec-9828-ee0b3157fa50"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> 2, "k3" -> 3], 
       Association["k1" -> 4, "k2" -> 5, "k3" -> 6]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> 
     Association["ID" -> 134634561242398], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     2, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959486440014*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"2f40e480-dcc7-417e-839a-56b4b7287d28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"2", ";;", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7923836173076115`*^9, 3.7923836208531513`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"f6fa1a4c-821e-46a7-9b1d-fed93efcbff0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 4, "k2" -> 5, "k3" -> 6], 
       Association["k1" -> 7, "k2" -> 8, "k3" -> 9]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> 
     Association["ID" -> 134638856209699], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     2, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959491076745*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"2fb4560a-a428-484f-bb7a-5b94dc742252"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:9009\:62e9\:5217", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7924782114705696`*^9, 3.7924782134799156`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"591b74dd-7fa5-4c4b-8b4d-92358dd87820"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"},
     {"7", "8", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.818959497042416*^9},
 CellLabel->
  "Out[128]//MatrixForm=",ExpressionUUID->"e5081b00-eeca-4b52-bfa7-\
e0d1338b411b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ds"], "Input",
 CellChangeTimes->{{3.7924781797088428`*^9, 3.7924781798713317`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"ef7c25ce-29e2-4c74-a61b-574491f9dc01"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> 2, "k3" -> 3], 
       Association["k1" -> 4, "k2" -> 5, "k3" -> 6], 
       Association["k1" -> 7, "k2" -> 8, "k3" -> 9]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134630266275049], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959498843738*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"bb3c95d0-92a0-472b-a79f-107dd601631e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7923837074859767`*^9, 3.7923837139127917`*^9}, {
  3.792383798273958*^9, 3.792383798420531*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"c56521f3-712e-4f47-b9d1-5155dbb11bcb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.818959525176705*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"2d2dc0c2-7d10-456a-838e-9a629df44cf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.792383715229281*^9, 3.792383727702035*^9}, {
  3.792383801005632*^9, 3.7923838011322923`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"6f3a514e-e29e-4ecc-a743-9d05dc3ac9aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.81895952893645*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"9d9224ec-b6d6-47a4-9347-6e53ee7bed47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"All", ",", "1"}], "]"}], " ", 
  RowBox[{"(*", " ", "\:5217\:6570", " ", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7923838739360447`*^9, {3.7923839384567776`*^9, 3.7923839431003833`*^9}, {
   3.811855362350664*^9, 3.811855366113103*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"5a902a13-516f-4eb8-a2f8-223bc825dbb4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {1, 4, 7}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Meta" -> 
     Association["ID" -> 134643151177060], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{69., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{69., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959555576626*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"6936728b-ef16-4cc1-87e5-f337c52e146c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"All", ",", "\"\<k1\>\""}], "]"}], " ", 
  RowBox[{"(*", " ", "\:5217\:540d", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7923836733270755`*^9, 3.792383683327425*^9}, {
  3.7923839453524017`*^9, 3.7923839492111034`*^9}, {3.7929967861846585`*^9, 
  3.792996786689317*^9}, {3.811855373452313*^9, 3.8118553768481092`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"d8130e79-4eae-4e87-a490-b7afc87d3c12"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {1, 4, 7}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Meta" -> 
     Association["ID" -> 134647446144364], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{69., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{69., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959563625497*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"b760901c-cb3a-4da3-97a2-9aae0d83e622"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"All", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{3.7923838823715143`*^9},
 CellLabel->
  "In[134]:=",ExpressionUUID->"cfcdd078-03ec-436c-be8c-7ee62dc7933c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {3, 6, 9}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Meta" -> 
     Association["ID" -> 134651741111664], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{69., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{69., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959568517496*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"f2539bf0-f8c3-44b9-b7de-d63d730bf35a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"All", ",", "\"\<k3\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7923836859943547`*^9, 3.7923836914597187`*^9}, {
  3.792996792407069*^9, 3.792996792988525*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"e6615683-30b6-40ae-b129-d272a650012d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {3, 6, 9}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Meta" -> 
     Association["ID" -> 134656036078963], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{69., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{69., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959570662142*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"149d2782-90bb-42ab-8fcf-a8cc5f33b144"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:9009\:62e9\:5143\:7d20", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.792478203074003*^9, 3.792478205144164*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"3423a777-7201-4a37-a187-ef14f5c99795"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"},
     {"7", "8", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.818959576657865*^9},
 CellLabel->
  "Out[136]//MatrixForm=",ExpressionUUID->"2cae1a6e-a5a1-4f6b-b17d-\
c63f5d99260a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ds"], "Input",
 CellChangeTimes->{{3.792478193072559*^9, 3.792478193215336*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"be191c8c-1653-439f-828f-93a74d118c6d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> 2, "k3" -> 3], 
       Association["k1" -> 4, "k2" -> 5, "k3" -> 6], 
       Association["k1" -> 7, "k2" -> 8, "k3" -> 9]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134630266275049], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818959578290367*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"ee6a2155-ec8d-47c3-8f97-2d1c8afb937c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.792383835124589*^9, 3.7923838407715235`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"b6ba2d95-be1c-42e2-bf42-34ef516d9a6b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.818959585495791*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"7679f224-15b4-44e8-b4d8-948158863ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.792383843482278*^9, 3.792383846508173*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"3a57d579-b9b0-4923-b835-cd1c994005dd"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8189595880469913`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"5ccac0b3-9c13-4e1e-a78d-721ac7fafe99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.792383848172783*^9, 3.7923838609965353`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"c7136f3e-b24f-42b5-a5f9-048a88ed0c61"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.818959593062969*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"e3bb72ea-973a-4ac7-aa92-15b1d4b2c058"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"1", ",", "\"\<k1\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7923838638868523`*^9, 3.792383864027445*^9}, {
  3.7923839594158297`*^9, 3.7923839623051624`*^9}, {3.7929968090437164`*^9, 
  3.7929968094207067`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"2e7a1428-90df-4f79-b281-f52ac6a4fbfd"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.818959615562327*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"268e897c-7901-4756-a503-432005fb409b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.792383965467706*^9, 3.7923839699786787`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"2e9bd0ba-b357-4005-8fa1-391614594752"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.818959619391932*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"80032bbb-f675-4ea3-b45d-88633f9a69f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"2", ",", "\"\<k3\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7923839710787487`*^9, 3.7923839749942493`*^9}, {
  3.7929968138638425`*^9, 3.7929968142368574`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"e07f6b0b-664d-4a90-9494-a43c8889a3ce"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.818959621095312*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"e78039a4-e44d-4860-b6e2-5aa656b06b5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5d4c\:5957\:6570\:636e\:96c6\:ff08\:53ef\:9009\:ff09", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData["pl"], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.793002260569933*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"bd09f317-b354-45fe-a00f-b1df41255d33"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Earth" -> Association[
        "Mass" -> Quantity[5.9721986*^24, "Kilograms"], "Radius" -> 
         Quantity[6367.4447, "Kilometers"], "Moons" -> 
         Association[
          "Moon" -> Association[
            "Mass" -> Quantity[7.3459*^22, "Kilograms"], "Radius" -> 
             Quantity[1737.5, "Kilometers"]]]], "Mars" -> 
       Association[
        "Mass" -> Quantity[6.416929999999999*^23, "Kilograms"], "Radius" -> 
         Quantity[3386., "Kilometers"], "Moons" -> 
         Association[
          "Phobos" -> 
           Association[
            "Mass" -> Quantity[1.072*^16, "Kilograms"], "Radius" -> 
             Quantity[11.1, "Kilometers"]], "Deimos" -> 
           Association[
            "Mass" -> Quantity[1.5*^15, "Kilograms"], "Radius" -> 
             Quantity[6.2, "Kilometers"]]]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[15]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[14]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[48.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 2], 
     "Meta" -> Association["ID" -> 134625971306798], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[15]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[14]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[48.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 2], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9721986`*^24", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6367.4447`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"], 
                   Key["Moons"], 
                   Key["Moon"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.3459`*^22", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1737.5`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.416929999999999`*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3386.`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Phobos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.072`*^16", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11.1`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Deimos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`*^15", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.2`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{622., {97.488525390625, 108.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{622., {97.488525390625, 108.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.793002261951507*^9, 3.818959630603467*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"7fcd9dc2-2af8-4282-865e-15bbb1154550"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "[", "\"\<Earth\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.7930022659289412`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"7629ceae-2dc1-41fc-aa86-6ec4444199f2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Mass" -> Quantity[5.9721986*^24, "Kilograms"], "Radius" -> 
       Quantity[6367.4447, "Kilometers"], "Moons" -> 
       Association[
        "Moon" -> Association[
          "Mass" -> Quantity[7.3459*^22, "Kilograms"], "Radius" -> 
           Quantity[1737.5, "Kilometers"]]]], "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Mass"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Radius"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Moons"} -> 
        TypeSystem`PackageScope`ElidedShape[1]], 1], "InitialType" -> 
     TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilometers"]], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"Mass", "Radius"}, {
           TypeSystem`Atom[
            Quantity[1, "Kilograms"]], 
           TypeSystem`Atom[
            Quantity[1, "Kilometers"]]}], 1]}], "Meta" -> 
     Association["ID" -> 134660331046330], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Mass"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Radius"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Moons"} -> 
        TypeSystem`PackageScope`ElidedShape[1]], 1], "Type" -> 
     TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilometers"]], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"Mass", "Radius"}, {
           TypeSystem`Atom[
            Quantity[1, "Kilograms"]], 
           TypeSystem`Atom[
            Quantity[1, "Kilometers"]]}], 1]}], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     10, "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mass"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mass"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9721986`*^24", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Radius"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Radius"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6367.4447`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Moons"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Moons"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Moon"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Moon"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Moons"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{221., {64.988525390625, 76.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{221., {64.988525390625, 76.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.793002271519946*^9, 3.818959641917808*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"6149509d-7af9-41f2-acfe-6a6e7e40199c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "[", 
  RowBox[{"All", ",", "\"\<Mass\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.793002285658863*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"20d6e2f6-67aa-4714-a1e2-c070036841f9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Earth" -> Quantity[5.9721986*^24, "Kilograms"], "Mars" -> 
       Quantity[6.416929999999999*^23, "Kilograms"]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[45.], 
         TypeSystem`PackageScope`AtomShape[75]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Earth", "Mars"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 2], "Meta" -> 
     Association["ID" -> 134664626013631], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[45.], 
         TypeSystem`PackageScope`AtomShape[75]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Earth", "Mars"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9721986`*^24", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.416929999999999`*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{226., {49.988525390625, 61.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{226., {49.988525390625, 61.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.79300228700568*^9, 3.81895964678927*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"b66a84ab-9c3f-4c8d-995c-6e34c3438fea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "[", 
  RowBox[{"\"\<Mars\>\"", ",", "\"\<Moons\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.7930022899275093`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"d7a0947a-f40b-426a-9644-9a483460707b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Phobos" -> Association[
        "Mass" -> Quantity[1.072*^16, "Kilograms"], "Radius" -> 
         Quantity[11.1, "Kilometers"]], "Deimos" -> 
       Association[
        "Mass" -> Quantity[1.5*^15, "Kilograms"], "Radius" -> 
         Quantity[6.2, "Kilometers"]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[57.60000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75]]], 
           DirectedInfinity[1], 2, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]]}], 2], "Meta" -> 
     Association["ID" -> 134668920980932], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[57.60000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75]]], 
           DirectedInfinity[1], 2, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]]}], 2], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     2, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Phobos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.072`*^16", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11.1`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Deimos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`*^15", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.2`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{305., {65.488525390625, 76.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{305., {65.488525390625, 76.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7930022915890665`*^9, 3.818959652457243*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"54e92e7f-b9ff-41b3-81c7-c8735d51f0a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "[", 
  RowBox[{"\"\<Mars\>\"", ",", "\"\<Moons\>\"", ",", "Keys"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7930022541130524`*^9, 3.793002297314479*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"07f2e14c-2567-42c4-bba2-317c8228285b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {"Phobos", "Deimos"}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[57.60000000000001]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 2], "Meta" -> 
     Association["ID" -> 134673215948238], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[57.60000000000001]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["Phobos", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Deimos", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{93., {47.988525390625, 59.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{93., {47.988525390625, 59.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7930022984712906`*^9, 3.818959662060296*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"5698c543-014d-4595-b519-a757213216c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "[", 
  RowBox[{"\"\<Mars\>\"", ",", "\"\<Moons\>\"", ",", "\"\<Phobos\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.793002302988739*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"69c705c4-1319-4353-b983-2e66e3e82eec"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Mass" -> Quantity[1.072*^16, "Kilograms"], "Radius" -> 
       Quantity[11.1, "Kilometers"]], "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Mass"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Radius"} -> 
        TypeSystem`PackageScope`AtomShape[75]], 1], "InitialType" -> 
     TypeSystem`Struct[{"Mass", "Radius"}, {
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilometers"]]}], "Meta" -> 
     Association["ID" -> 134677510915543], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Mass"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Radius"} -> 
        TypeSystem`PackageScope`AtomShape[75]], 1], "Type" -> 
     TypeSystem`Struct[{"Mass", "Radius"}, {
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilometers"]]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mass"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mass"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.072`*^16", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Radius"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Radius"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11.1`", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{212., {48.988525390625, 60.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{212., {48.988525390625, 60.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7930023043675323`*^9, 3.8189596706914597`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"dadec7db-aded-4716-96b1-b808eeb3bcae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "[", 
  RowBox[{
  "\"\<Mars\>\"", ",", "\"\<Moons\>\"", ",", "\"\<Phobos\>\"", ",", 
   "\"\<Mass\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.7930023077306676`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"f361c212-3ac4-4a5e-a65a-0d0034512731"],

Cell[BoxData[
 TemplateBox[{"1.072`*^16", "\"kg\"", "kilograms", "\"Kilograms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.7930023089194727`*^9, 3.818959683256928*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"4a3a2ee8-05cf-45ec-aae6-0df2610653ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pl", "[", 
   RowBox[{
   "\"\<Mars\>\"", ",", "\"\<Moons\>\"", ",", "All", ",", "\"\<Mass\>\""}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.793002316247786*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"a06d21bd-b918-47ec-9b71-04795b6bb40a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Phobos" -> Quantity[1.072*^16, "Kilograms"], "Deimos" -> 
       Quantity[1.5*^15, "Kilograms"]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[54.], 
         TypeSystem`PackageScope`AtomShape[75]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Deimos", "Phobos"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 2], "Meta" -> 
     Association["ID" -> 134681805882859], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[54.], 
         TypeSystem`PackageScope`AtomShape[75]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Deimos", "Phobos"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Phobos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.072`*^16", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Phobos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Deimos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`*^15", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Deimos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{218., {49.988525390625, 61.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{218., {49.988525390625, 61.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7930023128413343`*^9, 3.7930023169679604`*^9}, 
   3.818959690758576*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"421364a5-a405-4553-b4e6-5b2ccb09d794"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", "All", ",", "\"\<Mass\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7930022541130524`*^9, 3.793002329082088*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"14852e02-6dd2-4d55-b93a-c41d02899bcd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Earth" -> Association["Moon" -> Quantity[7.3459*^22, "Kilograms"]], 
       "Mars" -> Association[
        "Phobos" -> Quantity[1.072*^16, "Kilograms"], "Deimos" -> 
         Quantity[1.5*^15, "Kilograms"]]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[48.00000000000001], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[57.60000000000001], 
            TypeSystem`PackageScope`AtomShape[75]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], TypeSystem`AnyLength], 2], "Meta" -> 
     Association["ID" -> 134686100850165], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[48.00000000000001], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[57.60000000000001], 
            TypeSystem`PackageScope`AtomShape[75]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], TypeSystem`AnyLength], 2], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"], 
                   Key["Moon"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.3459`*^22", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Phobos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.072`*^16", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Phobos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Deimos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`*^15", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Deimos"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{288., {66.488525390625, 77.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{288., {66.488525390625, 77.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.793002329948019*^9, 3.8189597013191*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"3306b7c3-65e2-4010-8fe8-98ac347ea69b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c8f64293-6a13-4b7a-863b-baf9b7032bcb"],

Cell[CellGroupData[{

Cell["\:67e5\:8be2\:6570\:636e\:96c6", "Section", "TentativeExample",ExpressionUUID->"b3f7fc55-e4fe-4358-840b-eaff3a5805f4"],

Cell[CellGroupData[{

Cell["\:7b49\:7ea7", "Subsubsection", "TentativeExample",ExpressionUUID->"04809d21-6afb-499d-8938-927fd95f66b7"],

Cell["\<\
\:6570\:636e\:96c6\:4e0a\:7684\:8fd0\:7b97\:7b26\:7684\:884c\:4e3a\:7c7b\:4f3c\
\:4e8e\:4ece\:5d4c\:5957\:5217\:8868\:4e2d\:9009\:62e9\:5143\:7d20\:ff1a\
\>", "Text", "TentativeExample",
 CellChangeTimes->{
  3.81185542846434*^9},ExpressionUUID->"799458ad-bbff-4213-816f-ec38dbc7b2ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nestedList", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", " ", 
     RowBox[{"0", ",", " ", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Blue"}], "}"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7923901483238606`*^9, 3.7923901544325433`*^9}, {
   3.7923901928708944`*^9, 3.7923901948575926`*^9}, 3.793339910129404*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"7db55c19-e2d3-4fcd-8263-833c3792e2f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 1, 0],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0, 1],
        Editable->False,
        Selectable->False]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.81906332300237*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"1868139e-e433-44f5-b9e7-24faad70bc53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nestedList", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7923901718360605`*^9, 3.792390205370505*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"4bead982-8fdb-401c-87ea-51f9a3625f2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819063329364657*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"c5ce5b3e-35ca-42cf-b883-9214f10da86d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nestedList", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.792390179490653*^9, 3.792390211123141*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"e6168866-09da-4baf-be74-e8208f43abb8"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8190633375754013`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"7627a5b2-9820-455a-8742-b58455f37430"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nestedList", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "2", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7923902130180807`*^9, 3.7923902217387867`*^9}, {
  3.793339920798382*^9, 3.793339921067404*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"a0892135-0600-42fa-8370-c229494ff254"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0., 0., 0.6666666666666666],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 0, 1],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819063343135906*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"ca4f8cf0-3c10-4d09-9a4d-7f56d1273e89"]
}, Open  ]],

Cell["\<\
\:5728\:6570\:636e\:96c6\:4e0a\:ff1a\
\>", "Text", "TentativeExample",ExpressionUUID->"4698d011-e42e-40d5-a80d-616f52d5e0c1"],

Cell[CellGroupData[{

Cell[BoxData["ds"], "Input",
 CellChangeTimes->{{3.7923918344888697`*^9, 3.7923918346504326`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"891fab79-de25-4c0f-b3ea-9ed2274793d8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> 2, "k3" -> 3], 
       Association["k1" -> 4, "k2" -> 5, "k3" -> 6], 
       Association["k1" -> 7, "k2" -> 8, "k3" -> 9]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134630266275049], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[34], "k3" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819063347246808*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"3d527720-2715-4a22-a9e6-2acc795fa2d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsNormal", "=", 
  RowBox[{"Normal", "[", "ds", "]"}]}]], "Input",
 CellChangeTimes->{{3.792391836520447*^9, 3.7923918421176176`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"c015527b-cae3-4736-86f1-ef2749b46f5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.819063355833671*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"9cbfc941-c7af-4fc9-aeaf-a63bf95ceed7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", "f1", "]"}]], "Input",
 CellChangeTimes->{{3.79239184332544*^9, 3.7923918450507927`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"fcb3efe0-4552-4e5e-851f-7f7a5f955a23"],

Cell[BoxData[
 RowBox[{"f1", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
    
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
    
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "7"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "8"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
   "}"}], "]"}]], "Output",
 CellChangeTimes->{3.8190633740331*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"f9c7e3e8-d43b-4aeb-ab64-9ebd416bd442"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"f1", ",", "f2"}], "]"}]], "Input",
 CellChangeTimes->{{3.792391849026164*^9, 3.792391852010236*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"123244a5-3e3e-4e5f-8ac7-b474811846a2"],

Cell[BoxData[
 RowBox[{"f1", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f2", "[", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
       RowBox[{"\<\"k2\"\>", "\[Rule]", "2"}], ",", 
       RowBox[{"\<\"k3\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], 
     "]"}], ",", 
    RowBox[{"f2", "[", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
       RowBox[{"\<\"k2\"\>", "\[Rule]", "5"}], ",", 
       RowBox[{"\<\"k3\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
     "]"}], ",", 
    RowBox[{"f2", "[", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"k1\"\>", "\[Rule]", "7"}], ",", 
       RowBox[{"\<\"k2\"\>", "\[Rule]", "8"}], ",", 
       RowBox[{"\<\"k3\"\>", "\[Rule]", "9"}]}], "\[RightAssociation]"}], 
     "]"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.81906338305818*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"1ef2494a-b34f-4c52-a6b8-ee7a4aae74fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"f1", ",", "f2", ",", "f3"}], "]"}]], "Input",
 CellChangeTimes->{{3.792391853282791*^9, 3.7923918675636497`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"bf5e1ec7-475f-4d4f-89b8-f77d4b8e7834"],

Cell[BoxData[
 RowBox[{"f1", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f2", "[", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"k1\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "1", "]"}]}], ",", 
       RowBox[{"\<\"k2\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "2", "]"}]}], ",", 
       RowBox[{"\<\"k3\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "3", "]"}]}]}], "\[RightAssociation]"}], "]"}], 
    ",", 
    RowBox[{"f2", "[", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"k1\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "4", "]"}]}], ",", 
       RowBox[{"\<\"k2\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "5", "]"}]}], ",", 
       RowBox[{"\<\"k3\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "6", "]"}]}]}], "\[RightAssociation]"}], "]"}], 
    ",", 
    RowBox[{"f2", "[", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"k1\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "7", "]"}]}], ",", 
       RowBox[{"\<\"k2\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "8", "]"}]}], ",", 
       RowBox[{"\<\"k3\"\>", "\[Rule]", 
        RowBox[{"f3", "[", "9", "]"}]}]}], "\[RightAssociation]"}], "]"}]}], 
   "}"}], "]"}]], "Output",
 CellChangeTimes->{3.819063397640349*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"d41f471f-2d64-4a0b-93a9-0c3036f5cea9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:987a\:5e8f", "Subsubsection", "TentativeExample",
 CellChangeTimes->{
  3.811855447680751*^9, {3.8190629685794888`*^9, 
   3.819062970681055*^9}},ExpressionUUID->"8aeb5d29-e795-4f7d-9447-\
4c01b1159976"],

Cell["\:6570\:636e\:96c6\:4e2d\:7684\:6709\:6548\:8fd0\:7b97\:7b26\:53ef\:4ee5\
\:5206\:4e3a\:4e24\:7c7b\:ff1a", "Text", \
"TentativeExample",ExpressionUUID->"02afa6cd-3f3e-4726-9ef8-cdb381750a06"],

Cell[TextData[{
 "\:964d\:5e8f\:8fd0\:7b97\:7b26\:ff08\:6216\:8fc7\:6ee4\:8fd0\:7b97\:7b26\
\:ff09\:ff1a",
 StyleBox[ButtonBox["Select",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Select.html"], 
    "https://reference.wolfram.com/language/ref/Select.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Select.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["GroupBy",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/GroupBy.html"], 
    "https://reference.wolfram.com/language/ref/GroupBy.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/GroupBy.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["SortBy",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/SortBy.html"], 
    "https://reference.wolfram.com/language/ref/SortBy.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/SortBy.html"],
  FontWeight->"Bold"],
 "\[Ellipsis]"
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.8118554630046263`*^9, 
  3.811855471967201*^9}},ExpressionUUID->"58102514-9d1c-4544-ba8f-\
137c6e7c181e"],

Cell[TextData[{
 "\:5347\:5e8f\:8fd0\:7b97\:7b26\:ff08\:6216\:805a\:5408\:8fd0\:7b97\:7b26\
\:ff09\:ff1a",
 StyleBox[ButtonBox["Total",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Total.html"], 
    "https://reference.wolfram.com/language/ref/Total.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Total.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["Min",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Min.html"], 
    "https://reference.wolfram.com/language/ref/Min.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Min.html"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["Histogram",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Histogram.html"], 
    "https://reference.wolfram.com/language/ref/Histogram.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Histogram.html"],
  FontWeight->"Bold"],
 "\[Ellipsis]"
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.811855482257901*^9, 
  3.8118554924593267`*^9}},ExpressionUUID->"3c9700a9-9db4-4a2b-8d07-\
ddc1a9d01f5d"],

Cell["\:9996\:5148\:4ece\:5de6\:5230\:53f3\:5e94\:7528\:964d\:5e8f\:8fd0\:7b97\
\:7b26\:ff0c\:671d\:7740\:6570\:636e\:7684\:6700\:5185\:5c42\:5e94\:7528. \
\:7136\:540e\:ff0c\:4ece\:53f3\:5230\:5de6\:5e94\:7528\:5347\:5e8f\:8fd0\:7b97\
\:7b26\:ff0c\:671d\:6700\:5916\:5c42\:8fdb\:884c.", "Text", "TentativeExample",
 CellChangeTimes->{{3.811855512817575*^9, 3.8118555246361713`*^9}, {
  3.819062597428545*^9, 
  3.8190625992183027`*^9}},ExpressionUUID->"bdffb18a-7933-4e03-ab25-\
a1cf8e181fab"],

Cell[TextData[{
 "\:8868\:8fbe\:5f0f",
 StyleBox["ds[a1, d1, d2, a2, a3, d3, a4]", "Input"],
 "\:7684\:5e94\:7528\:987a\:5e8f\:ff0c\:5176\:4e2d ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "i"], TraditionalForm]],ExpressionUUID->
  "fa8779e2-c393-49d6-94ae-bf6bc1a7adab"],
 " \:548c ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "i"], TraditionalForm]],ExpressionUUID->
  "0f65716b-8f08-460c-9859-538f8860336f"],
 " \:5206\:522b\:8868\:793a\:5347\:5e8f\:548c\:964d\:5e8f\:8fd0\:7b97\:7b26\
\:ff1a"
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.811855540927113*^9, 
  3.811855554608472*^9}},ExpressionUUID->"8bf87754-bfca-491c-9b87-\
703ba9591f13"],

Cell["d1 \[Rule] d2 \[Rule] d3 \[Rule] a4 \[Rule] a3 \[Rule] a2 \[Rule] a1", \
"Text",
 CellChangeTimes->{{3.793341133400981*^9, 3.793341231456256*^9}, {
  3.793356418046462*^9, 3.793356449629921*^9}, {3.793356484350624*^9, 
  3.793356486710211*^9}, {3.7933609855768423`*^9, 
  3.793360986049049*^9}},ExpressionUUID->"80050d05-bf80-4787-a837-\
eae37eb8a85f"],

Cell["\:4ee5\:4e0b\:793a\:4f8b\:663e\:793a\:4e86\:4e09\:4e2a\:8fd0\:7b97\:7b26\
\:7684\:5e94\:7528. \:5176\:4e2d\:7ea7\:522b\:548c\:987a\:5e8f\:7684\:5e94\
\:7528\:5c06\:5728\:540e\:9762\:8bf4\:660e\:ff1a", "Text", "TentativeExample",
 
 CellChangeTimes->{
  3.811855578308525*^9, {3.8190592991406507`*^9, 
   3.819059313142951*^9}},ExpressionUUID->"ff3d0fbf-9dd7-4290-9fd9-\
d68fe4332aa8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanic", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.792493299032997*^9, 3.7924933088362093`*^9}, {
  3.7924933482095394`*^9, 3.7924933708175745`*^9}, {3.7930026213084173`*^9, 
  3.79300262240557*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"8051bdd9-7412-4c8c-a25d-25e2f4e5dc41"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 80, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 32, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 59, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 11, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 76, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 70, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 4, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 13, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 34, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 6, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 67, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 60, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 38, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 6, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 7, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 63, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 60, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 13, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 70, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 59, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 66, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 59, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 48, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 8, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 8, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 74, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 63, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "class"} -> 1, {All, "age"} -> 1, {All, "sex"} -> 
        1, {All, "survived"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "class" -> TypeSystem`PackageScope`AtomShape[27.], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[54.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Meta" -> 
     Association["ID" -> 134690395921350], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "class"} -> 1, {All, "age"} -> 1, {All, "sex"} -> 
        1, {All, "survived"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "class" -> TypeSystem`PackageScope`AtomShape[27.], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[54.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     4, "DataRowCount" -> 1309, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "class"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["age", 
                  Style[
                  "age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "age"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sex", 
                  Style[
                  "sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sex"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "survived"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1309, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1309, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{275., {354.988525390625, 366.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{275., {354.988525390625, 366.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819063590284298*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"a8dc7f6c-dc1f-40fe-847a-392ba5f35ffe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanic", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<class\>\"", "]"}], ",", "Histogram", ",", 
   "\"\<age\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.792493299032997*^9, 3.7924933088362093`*^9}, {
  3.7924933482095394`*^9, 3.7924933708175745`*^9}, {3.7930026213084173`*^9, 
  3.79300262240557*^9}, {3.7933414069058805`*^9, 3.7933414074851074`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"f5f1a4b0-b542-4895-a105-4e4c287d69f3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["1st" -> Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.623]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.623]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {10., 4.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                Style[4, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {20., 22.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 22], 
                Style[22, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {30., 52.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 52], 
                Style[52, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {40., 72.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 72], 
                Style[72, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {50., 62.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 62], 
                Style[62, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {60., 46.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 46], 
                Style[46, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {70., 21.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 21], 
                Style[21, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {80., 4.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                Style[4, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{80., 0}, {90., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[
                1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.8, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 90.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "2nd" -> 
       Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.581]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.581]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {5., 15.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 15], 
                Style[15, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{5., 0}, {10., 7.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 7], 
                Style[7, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {15., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{15., 0}, {20., 24.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 24], 
                Style[24, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {25., 43.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 43], 
                Style[43, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{25., 0}, {30., 47.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 47], 
                Style[47, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {35., 44.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 44], 
                Style[44, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{35., 0}, {40., 20.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 20], 
                Style[20, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {45., 21.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 21], 
                Style[21, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{45., 0}, {50., 10.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 10], 
                Style[10, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {55., 12.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 12], 
                Style[12, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{55., 0}, {60., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {65., 6.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 6], 
                Style[6, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{65., 0}, {70., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[1, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {75., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[
                1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.5, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 75.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "3rd" -> 
       Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.581]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.581]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {5., 33.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 33], 
                Style[33, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{5., 0}, {10., 23.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 23], 
                Style[23, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {15., 17.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 17], 
                Style[17, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{15., 0}, {20., 75.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 75], 
                Style[75, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {25., 113.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 113], 
                Style[113, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{25., 0}, {30., 89.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 89], 
                Style[89, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {35., 57.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 57], 
                Style[57, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{35., 0}, {40., 39.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 39], 
                Style[39, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {45., 27.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 27], 
                Style[27, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{45., 0}, {50., 15.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 15], 
                Style[15, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {55., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{55., 0}, {60., 2.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                Style[2, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {65., 3.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 3], 
                Style[3, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{65., 0}, {70., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[1, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {75., 2.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                Style[
                2, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.5, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 75.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Graphics], 3], "Meta" -> 
     Association["ID" -> 134694690888695], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Graphics], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1st", 
                  Style[
                  "1st", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["1st"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {10., 4.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{10., 0}, {20., 22.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 22]& , 
                    TagBoxNote -> "22"], 
                    StyleBox["22", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[22, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {30., 52.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 52]& , 
                    TagBoxNote -> "52"], 
                    StyleBox["52", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[52, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {40., 72.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 72]& , 
                    TagBoxNote -> "72"], 
                    StyleBox["72", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[72, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {50., 62.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 62]& , 
                    TagBoxNote -> "62"], 
                    StyleBox["62", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[62, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {60., 46.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 46]& , 
                    TagBoxNote -> "46"], 
                    StyleBox["46", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[46, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {70., 21.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 21]& , 
                    TagBoxNote -> "21"], 
                    StyleBox["21", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[21, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {80., 4.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{80., 0}, {90., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.8, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 90.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2nd", 
                  Style[
                  "2nd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["2nd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {5., 15.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 15]& , 
                    TagBoxNote -> "15"], 
                    StyleBox["15", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[15, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{5., 0}, {10., 7.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                    TagBoxNote -> "7"], 
                    StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                    Style[7, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{10., 0}, {15., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{15., 0}, {20., 24.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 24]& , 
                    TagBoxNote -> "24"], 
                    StyleBox["24", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[24, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {25., 43.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 43]& , 
                    TagBoxNote -> "43"], 
                    StyleBox["43", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[43, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{25., 0}, {30., 47.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 47]& , 
                    TagBoxNote -> "47"], 
                    StyleBox["47", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[47, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {35., 44.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 44]& , 
                    TagBoxNote -> "44"], 
                    StyleBox["44", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[44, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{35., 0}, {40., 20.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 20]& , 
                    TagBoxNote -> "20"], 
                    StyleBox["20", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[20, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {45., 21.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 21]& , 
                    TagBoxNote -> "21"], 
                    StyleBox["21", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[21, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{45., 0}, {50., 10.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 10]& , 
                    TagBoxNote -> "10"], 
                    StyleBox["10", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[10, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {55., 12.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 12]& , 
                    TagBoxNote -> "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[12, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{55., 0}, {60., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {65., 6.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 6]& , 
                    TagBoxNote -> "6"], 
                    StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                    Style[6, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {75., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.5, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 75.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3rd", 
                  Style[
                  "3rd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["3rd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {5., 33.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 33]& , 
                    TagBoxNote -> "33"], 
                    StyleBox["33", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[33, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5., 0}, {10., 23.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 23]& , 
                    TagBoxNote -> "23"], 
                    StyleBox["23", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[23, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{10., 0}, {15., 17.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 17]& , 
                    TagBoxNote -> "17"], 
                    StyleBox["17", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[17, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{15., 0}, {20., 75.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 75]& , 
                    TagBoxNote -> "75"], 
                    StyleBox["75", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[75, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {25., 113.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 113]& , 
                    TagBoxNote -> "113"], 
                    StyleBox["113", {}, StripOnInput -> False]], Annotation[#, 
                    Style[113, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{25., 0}, {30., 89.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 89]& , 
                    TagBoxNote -> "89"], 
                    StyleBox["89", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[89, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {35., 57.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 57]& , 
                    TagBoxNote -> "57"], 
                    StyleBox["57", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[57, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{35., 0}, {40., 39.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 39]& , 
                    TagBoxNote -> "39"], 
                    StyleBox["39", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[39, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {45., 27.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 27]& , 
                    TagBoxNote -> "27"], 
                    StyleBox["27", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[27, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{45., 0}, {50., 15.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 15]& , 
                    TagBoxNote -> "15"], 
                    StyleBox["15", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[15, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {55., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{55., 0}, {60., 2.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {65., 3.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {75., 2.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.5, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 75.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{194., {145.988525390625, 157.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{194., {145.988525390625, 157.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7924933118268566`*^9, {3.792493349042613*^9, 3.7924933713184495`*^9}, {
   3.793002619020492*^9, 3.7930026279254856`*^9}, 3.7933414082555513`*^9, 
   3.8190636387158537`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"063c6a0a-86af-4cc4-b976-e3433be428fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"10e8f9d7-41d1-476a-9107-ec4a3bf9f65c"],

Cell[CellGroupData[{

Cell["\:67e5\:8be2\:6570\:636e\:96c6\:ff08\:7eed\:ff09", "Section", "TentativeExample",ExpressionUUID->"817e1e4e-ca98-4039-83e0-8979d599e96d"],

Cell[CellGroupData[{

Cell["\:8fd0\:7b97\:7b26\:683c\:5f0f", "Subsubsection", "TentativeExample",
 CellChangeTimes->{{3.811855631183646*^9, 
  3.811855632414508*^9}},ExpressionUUID->"06cb1281-e1b9-407c-8e85-\
150058a5d3ac"],

Cell["\:6570\:636e\:96c6\:67e5\:8be2\:7ecf\:5e38\:4f7f\:7528\:51fd\:6570\:7684\
\:8fd0\:7b97\:7b26\:5f62\:5f0f\:ff1a", "Text", "TentativeExample",
 CellChangeTimes->{{3.811855645579021*^9, 
  3.811855650137682*^9}},ExpressionUUID->"b95a3719-2c0e-471e-b770-\
3f7b76f282d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
    ",", "EvenQ"}], "]"}], " ", 
  RowBox[{"(*", " ", "\:6807\:51c6\:8bed\:6cd5", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7924926523265343`*^9, 3.792492680644394*^9}, {
  3.793341439726804*^9, 3.793341442132691*^9}, {3.81185565644767*^9, 
  3.81185565916698*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"bb98a41d-2b4e-480f-a99c-4b42bd309aea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.819064861400464*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"d124e76c-8f15-48c7-9722-4ec364ff20ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Select", "[", "EvenQ", "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   "]"}], " ", 
  RowBox[{"(*", " ", "\:8fd0\:7b97\:7b26\:683c\:5f0f", " ", "*)"}]}]], "Input",\

 CellChangeTimes->{{3.7924926588180695`*^9, 3.792492687539381*^9}, {
  3.81185568135513*^9, 3.811855682443363*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"f072d35a-4ab0-4ed7-bd01-1ad3eb70ca4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.819064874782591*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"e809af74-5178-4eab-b631-df66cd7bea27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
    ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"x", ">", "3"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", "\:6807\:51c6\:8bed\:6cd5", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7924927072943287`*^9, 3.792492719198043*^9}, {
  3.7933414463572955`*^9, 3.7933414486813087`*^9}, {3.81185568857625*^9, 
  3.811855689997121*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"4b8f282d-fa1c-42be-9475-86fc5b7e191c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.8190648897643633`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"683645a1-3ea6-42a9-a0fc-239786bb09b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"x_", "/;", 
     RowBox[{"x", ">", "3"}]}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   "]"}], " ", 
  RowBox[{"(*", " ", "\:8fd0\:7b97\:7b26\:683c\:5f0f", " ", "*)"}]}]], "Input",\

 CellChangeTimes->{{3.792492727543445*^9, 3.7924927438815556`*^9}, {
  3.811855710886674*^9, 3.811855711958014*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"d0bc1254-08f1-41e0-84e5-d13a191e23d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.8190649014527683`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"f4990945-5738-408d-a228-0d97fbb8ac65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7ed3\:6784\:ff08\:56de\:987e\:ff09", "Subsubsection", "TentativeExample"],

Cell["\:5177\:6709\:5217\:6807\:5934\:7684\:6570\:636e\:96c6\:662f\:5173\:8054\
\:5217\:8868\:ff1a", "Text", "TentativeExample",
 CellChangeTimes->{
  3.8118557205509453`*^9},ExpressionUUID->"88b0889e-f56e-4b01-a061-\
a556d0143de4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.7924913385775857`*^9, 3.792491355295334*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"6076641c-75c2-4596-8877-f3107c112204"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.81906491120042*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"031141d3-01a3-4760-90ed-e243d8c3f673"]
}, Open  ]],

Cell["\<\
\:56e0\:6b64\:ff0c\:4e86\:89e3\:51fd\:6570\:5982\:4f55\:5728\:5173\:8054\:4e0a\
\:5de5\:4f5c\:5bf9\:4e8e\:4e86\:89e3\:6570\:636e\:96c6\:67e5\:8be2\:5f88\:6709\
\:5e2e\:52a9.\
\>", "Text", "TentativeExample",
 CellChangeTimes->{{3.811855778221425*^9, 
  3.811855785952593*^9}},ExpressionUUID->"8b5858d2-a373-4d7c-9751-\
70df9a6df2f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5173\:8054\:64cd\:4f5c", "Subsubsection", "TentativeExample",
 CellChangeTimes->{{3.8118557932114677`*^9, 
  3.811855794552402*^9}},ExpressionUUID->"1be924e0-7010-4368-acd2-\
1d989136a726"],

Cell["\:51e0\:4e2a\:51fd\:6570\:76f4\:63a5\:4f5c\:7528\:4e8e\:503c\:ff1a", \
"Text", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "^", "2"}], "+", "1"}], ")"}], "&"}], "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
    RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<k3\>\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.792491463061116*^9, 3.7924914791281586`*^9}, {
  3.792491521351122*^9, 3.792491524557528*^9}, {3.793005178282403*^9, 
  3.7930051995215125`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"c22d737a-1d58-46cd-8063-3ccdf3aafbe7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"k1\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"k2\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"k3\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819065029802194*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"9cad98fb-dd90-44b9-ba1d-c5d068cd390f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
    RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<k3\>\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7924915059643445`*^9, 3.7924915382126107`*^9}, 
   3.7930052096997538`*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"e1f87a29-139d-4022-8493-bfed8104253f"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8190650408350267`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"7ccb8113-a9ec-4f38-a7a4-0be0510769a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
    RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<k3\>\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.792491531099143*^9, 3.7924915447590165`*^9}, {
  3.793005213654852*^9, 3.7930052176215386`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"56fa4bec-4c7d-480a-88a8-6a86c70e58f5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"k3\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"k2\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8190650462062187`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"978aaae7-721a-4ef4-b69e-1ff5cd3c69c9"]
}, Open  ]],

Cell["\:4e5f\:9002\:7528\:4e8e\:5173\:8054\:5217\:8868\:ff1a", "Text", "TentativeExample",ExpressionUUID->"20278571-0f36-41dd-b37b-0ece7f0ead29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "^", "2"}], "+", "#", "+", "1"}], ")"}], "&"}], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
      RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}], ",", 
      RowBox[{"\"\<k3\>\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
    
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<k1\>\"", "\[Rule]", "2"}], ",", 
      RowBox[{"\"\<k2\>\"", "\[Rule]", "4"}], ",", 
      RowBox[{"\"\<k3\>\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
    
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
      RowBox[{"\"\<k2\>\"", "\[Rule]", "6"}], ",", 
      RowBox[{"\"\<k3\>\"", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.792491570707013*^9, 3.7924915907390633`*^9}, {
  3.793005237045395*^9, 3.79300525126978*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"5cb85162-a270-4e9e-88a9-cd961a03bd0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "21"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "43"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "43"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", "91"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.819065064957267*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"e20de94a-3ca1-494c-aa01-d994afefd739"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
      RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}], ",", 
      RowBox[{"\"\<k3\>\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
    
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<k1\>\"", "\[Rule]", "2"}], ",", 
      RowBox[{"\"\<k2\>\"", "\[Rule]", "4"}], ",", 
      RowBox[{"\"\<k3\>\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
    
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
      RowBox[{"\"\<k2\>\"", "\[Rule]", "6"}], ",", 
      RowBox[{"\"\<k3\>\"", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.792491613624789*^9, 3.792491614147554*^9}, {
  3.793005254099471*^9, 3.7930052671119585`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"b43de983-5687-4795-a90b-b4d532805f01"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"k1\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"k2\"\>", "\[Rule]", "12"}], ",", 
   RowBox[{"\<\"k3\"\>", "\[Rule]", "16"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819065080909956*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"89f95396-882f-46dd-9443-339a48fcc622"]
}, Open  ]],

Cell["\:7eaf\:51fd\:6570\:53ef\:4ee5\:4e0e\:952e\:6807\:7b7e\:4e00\:8d77\:4f7f\
\:7528\:ff1a", "Text", "TentativeExample",
 CellChangeTimes->{
  3.819059588586398*^9},ExpressionUUID->"b1734bc0-d6aa-4b5f-9033-\
a92747eb66ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"#k1", "&"}], "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<k1\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<k2\>\"", "\[Rule]", "4"}], ",", 
    RowBox[{"\"\<k3\>\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.792493146895044*^9, 3.79249315068637*^9}, {
  3.7930052712356043`*^9, 3.793005279809679*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"0eb2cb24-651f-48b2-a763-c2f2298a59b3"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.819065106384303*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"b97a8fcd-4386-40a0-8bd4-d8725dfc95ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "4"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "5"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "7"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "7"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "7"}]}], "|>"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"#k1", ">", "3"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7924920895568895`*^9, 3.79249217394914*^9}, {
  3.79249226886777*^9, 3.7924924563937902`*^9}, {3.793005282755685*^9, 
  3.793005297215169*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"d5863529-61c0-497a-9b04-5a00e520565e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8190651212464447`*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"3ebbd3e2-a4e5-418b-82b7-69ae081d30b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectFirst", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "4"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "5"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "7"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "7"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "7"}]}], "|>"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"#k1", ">", "3"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7924925257389307`*^9, 3.792492537609013*^9}, {
  3.792492579081707*^9, 3.7924925874955063`*^9}, {3.7930053006720095`*^9, 
  3.7930053147975273`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"1d6e4cf4-3fef-4b2a-88a6-ad959558317d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"k1\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"k2\"\>", "\[Rule]", "7"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8190651643907223`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"e245e679-5d8e-40ba-8360-b31f3938e696"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"13d05aae-8c7a-4418-acba-f3d659d98373"],

Cell[CellGroupData[{

Cell["\:7b5b\:9009\:8fd0\:7b97\:7b26", "Section", "TentativeExample",ExpressionUUID->"6c9b136a-a5e5-43df-a5e6-8a0f2223dd80"],

Cell["\:8fc7\:6ee4\:8fd0\:7b97\:7b26\:901a\:8fc7\:4ea7\:751f\:8f83\:5c0f\:7684\
\:6570\:636e\:96c6\:6765\:8fc7\:6ee4\:6570\:636e. \:540e\:7eed\:8fd0\:7b97\
\:7b26\:53ef\:5e94\:7528\:4e8e\:4ee5\:4e0b\:5404\:9879\:ff1a", "Text", \
"TentativeExample",
 CellChangeTimes->{
  3.811855882500732*^9},ExpressionUUID->"4c32ec05-983e-4e4c-9e5a-\
d35e9b32d956"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds2", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "\"\<x\>\""}], ",", 
       RowBox[{"\"\<k3\>\"", "\[Rule]", 
        RowBox[{"{", "1", "}"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "\"\<y\>\""}], ",", 
       RowBox[{"\"\<k3\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "3"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       RowBox[{"\"\<k3\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<k1\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<k2\>\"", "\[Rule]", "\"\<x\>\""}], ",", 
       RowBox[{"\"\<k3\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], "|>"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7924811204171925`*^9, 3.792481121870465*^9}, 
   3.792481542140709*^9, {3.7924818373331814`*^9, 3.7924818518293033`*^9}, {
   3.792481885510081*^9, 3.792481896461135*^9}, {3.7930053270702543`*^9, 
   3.793005351065692*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"60f8febe-76f7-4037-9876-9d377ca58dd9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> "x", "k3" -> {1}], 
       Association["k1" -> 2, "k2" -> "y", "k3" -> {2, 3}], 
       Association["k1" -> 3, "k2" -> "z", "k3" -> {4, 5, 6}], 
       Association["k1" -> 4, "k2" -> "x", "k3" -> {7, 8, 9, 10}]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "k3" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 4], "Meta" -> 
     Association["ID" -> 134698985859254], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "k3" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 4], "Path" -> {},
      "BaseIndices" -> {}, "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 
     3, "DataRowCount" -> 4, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 5, 6}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 5, 6}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{204., {94.488525390625, 105.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{204., {94.488525390625, 105.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819066901652768*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"56021f4f-8497-49bd-a4d6-e95fd4c4c50f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f8b\:5b501", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds2", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#k1", ">", "2"}], "&"}], "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.79248167431009*^9, 3.792481686061967*^9}, {
  3.792481862827177*^9, 3.7924818652935843`*^9}, {3.7924818989131765`*^9, 
  3.79248189958494*^9}, {3.7924986327742004`*^9, 3.792498633222059*^9}, {
  3.7930053603680716`*^9, 3.7930053613208737`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"d8135d07-009f-4847-9c0c-684fa662456a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 3, "k2" -> "z", "k3" -> {4, 5, 6}], 
       Association["k1" -> 4, "k2" -> "x", "k3" -> {7, 8, 9, 10}]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "k3" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 2], "Meta" -> 
     Association["ID" -> 134703280826599], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "k3" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 2], "Path" -> {},
      "BaseIndices" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 
     3, "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 5, 6}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 5, 6}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{204., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{204., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819066951165259*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"877fef1d-d243-44ef-972b-94a0a34b85f5"]
}, Open  ]],

Cell["\:5206\:89e3\:ff1a", "Text", "TentativeExample",ExpressionUUID->"898db5a9-a3ee-46af-a4b9-08beff6469d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds2Normal", "=", 
  RowBox[{"Normal", "[", "ds2", "]"}]}]], "Input",
 CellChangeTimes->{{3.7924985890948744`*^9, 3.792498596392617*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"6a868a42-bedf-4ce4-9429-36f4038afaf3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819066977809217*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"781e88a5-d2f1-4828-bba4-17087609350d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#k1", ">", "2"}], "&"}], "]"}], "[", "ds2Normal", "]"}]], "Input",\

 CellChangeTimes->{{3.792498608931719*^9, 3.792498638453197*^9}, {
  3.793005367538041*^9, 3.7930053681874905`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"f00df483-b111-4b3c-af0a-b1c57e18b4c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819067038588825*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"0aa4c8fb-86d6-49e0-abd8-5830aca487b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.792498614400988*^9, 3.792498616706373*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"8885e7c2-d4f3-4a34-8a65-2d906a4c1996"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 3, "k2" -> "z", "k3" -> {4, 5, 6}], 
       Association["k1" -> 4, "k2" -> "x", "k3" -> {7, 8, 9, 10}]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "k3" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 2], "Meta" -> 
     Association["ID" -> 134707575794005], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "k3" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 2], "Path" -> {},
      "BaseIndices" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 
     3, "DataRowCount" -> 2, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 5, 6}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 5, 6}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                   Key["k3"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{204., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{204., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8190670610440683`*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"d6bb389a-3848-417b-8601-ceac596978e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f8b\:5b502", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds2", "[", 
  RowBox[{"All", ",", "\"\<k3\>\"", ",", 
   RowBox[{"Select", "[", "EvenQ", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.793003290044299*^9, {3.793005373967165*^9, 3.7930053747451353`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"67bd4abb-918d-4d5c-b9d7-93b28ca3c749"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{}, {2}, {4, 6}, {8, 10}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 4], "Meta" -> 
     Association["ID" -> 134711870761313], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 4], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 6}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 6}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{8, 10}, ShowStringCharacters -> False], 
                  Style[
                   Style[{8, 10}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{83., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{83., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819067072603817*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"810d5dd2-7136-4ad7-9ed3-fa373f28e694"]
}, Open  ]],

Cell["\:5206\:89e3\:ff1a\:ff08\:8bf7\:6ce8\:610f\:ff0c\:6240\:6709\:8fd0\:7b97\
\:7b26\:90fd\:662f\:964d\:5e8f\:7684\:ff09\:ff1a", "Text", "TentativeExample",
 
 CellChangeTimes->{{3.815921300973572*^9, 3.815921305178588*^9}, 
   3.819059668196208*^9},ExpressionUUID->"542815ea-f3db-4f84-8647-\
e696ef0c7dd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds2Normal", "[", 
   RowBox[{"[", "All", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"level", " ", "1"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.793003314629566*^9, 3.793003318092844*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"d22b1bde-bbbb-49eb-b930-2eb2c9d8c81a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819067123713706*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"0cc3254d-b7e7-430d-8cf2-952d7115da57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<k3\>\"", "]"}], "&"}], "/@", 
  RowBox[{"ds2Normal", "[", 
   RowBox[{"[", "All", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"level", " ", "2"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7930030631531467`*^9, 3.793003078745637*^9}, {
  3.793003320258437*^9, 3.7930033233681602`*^9}, {3.7930053800611506`*^9, 
  3.793005380809183*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"bf35a3f5-bc7c-45b0-9d9a-edd5165c97e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819067190397086*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"d080d429-446f-4c42-9322-edaa81272f78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", "EvenQ", "]"}], "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"level", " ", "3"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.793003085424305*^9, 3.7930031084290104`*^9}, {
  3.7930033260111074`*^9, 3.793003329877102*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"d6906bac-cbd4-4682-8720-221cf3b2b05d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819067246468917*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"d2cb3a86-a44c-4b49-b302-6e01f3b699ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7930033350120773`*^9, 3.7930033372587905`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"56a7a910-98be-44d3-8def-55ab3f4002ee"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{}, {2}, {4, 6}, {8, 10}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 4], "Meta" -> 
     Association["ID" -> 134716165728786], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 4], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 6}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 6}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{8, 10}, ShowStringCharacters -> False], 
                  Style[
                   Style[{8, 10}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{83., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{83., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81906725026892*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"5a9d8996-b2c1-49b6-bd88-b1929eb8deec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:66f4\:591a\:793a\:4f8b\:ff08\:53ef\:9009\:ff09", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds2", "[", 
   RowBox[{"All", ",", 
    RowBox[{"KeySelect", "[", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"\"\<k1\>\"", "|", "\"\<k2\>\""}], "]"}], "]"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{
  3.793003379335148*^9, {3.7930053908701124`*^9, 3.7930053943617992`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"5b99c4a7-7a6d-4e14-85e5-cd765aaa6d3d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> "x"], 
       Association["k1" -> 2, "k2" -> "y"], 
       Association["k1" -> 3, "k2" -> "z"], 
       Association["k1" -> 4, "k2" -> "x"]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 4], "Meta" -> 
     Association["ID" -> 134720460696092], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     4, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{108., {94.488525390625, 105.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{108., {94.488525390625, 105.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8190672603717833`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"ece5a03c-4832-4df6-bbee-9ca2bc7e080c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds2Normal", "[", 
  RowBox[{"[", "All", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8190673233656807`*^9, 3.8190673305958157`*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"55a44065-8c7e-41cc-b381-25e7d8afceb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8190673313073683`*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"be78feae-6cb2-4220-8038-d596e7632d72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"KeySelect", "[", 
    RowBox[{"#", ",", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"\"\<k1\>\"", "|", "\"\<k2\>\""}], "]"}]}], "]"}], "&"}], "/@", 
  "%"}]], "Input",
 CellChangeTimes->{{3.8190673413978443`*^9, 3.819067347099248*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"b9525b19-ab7e-40b1-b327-cc6363f23191"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"y\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"z\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8190673481328793`*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"b7374d61-9d96-438b-8a7c-9df4802dc071"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", "%"}]], "Input",
 CellChangeTimes->{{3.8190673887170887`*^9, 3.819067393931365*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"492d2aed-053a-48d2-84a8-3e8c0d41e6a0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 1, "k2" -> "x"], 
       Association["k1" -> 2, "k2" -> "y"], 
       Association["k1" -> 3, "k2" -> "z"], 
       Association["k1" -> 4, "k2" -> "x"]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 4], "Meta" -> 
     Association["ID" -> 134724755663522], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     4, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{108., {94.488525390625, 105.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{108., {94.488525390625, 105.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819067394239834*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"a00bf907-43f0-425b-9fdc-dc306f4b1371"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds2", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#k1", ">", "2"}], "&"}], "]"}], ",", 
   RowBox[{"KeySelect", "[", 
    RowBox[{"StringMatchQ", "[", 
     RowBox[{"\"\<k1\>\"", "|", "\"\<k2\>\""}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.793002725231289*^9, 3.7930027338314447`*^9}, {
  3.79300337354132*^9, 3.7930033864365454`*^9}, {3.793005397651681*^9, 
  3.793005404070252*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"9d0bfd54-38ff-4ffd-97aa-768dcc539400"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 3, "k2" -> "z"], 
       Association["k1" -> 4, "k2" -> "x"]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Meta" -> 
     Association["ID" -> 134729050630840], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     2, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{108., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{108., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819067415744437*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"55f04c64-5f0c-409a-ab85-4252ed558521"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#k1", ">", "2"}], "&"}], "]"}], "@", "ds2Normal"}]], "Input",
 CellChangeTimes->{{3.81906749154895*^9, 3.819067494543927*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"11d4936b-f5cc-4a76-9ec3-3f9c7d31a7da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"k3\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819067494819055*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"1008e53a-122f-49e4-88a6-5ef2e79ff7cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"KeySelect", "[", 
    RowBox[{"#", ",", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"\"\<k1\>\"", "|", "\"\<k2\>\""}], "]"}]}], "]"}], "&"}], "/@", 
  "%"}]], "Input",
 CellChangeTimes->{{3.8190675033708057`*^9, 3.8190675091128063`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"191ca93a-9ad9-4100-8662-8796753fb94a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"z\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"k2\"\>", "\[Rule]", "\<\"x\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.81906751012844*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"11087edc-991a-40a8-8782-072c240cf8b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", "%"}]], "Input",
 CellChangeTimes->{{3.819067511921638*^9, 3.819067515249848*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"2782721a-b0e7-4471-9ce7-44b5710c4039"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["k1" -> 3, "k2" -> "z"], 
       Association["k1" -> 4, "k2" -> "x"]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Meta" -> 
     Association["ID" -> 134733345598236], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "k1"} -> 1, {All, "k2"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"k1", "k2"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     2, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{108., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{108., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81906751572021*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"84cc42f7-d18f-4412-b8a5-4bd19b1b575d"]
}, Open  ]],

Cell[TextData[{
 "\:53c2\:8003\:ff1a\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3U1u7Dob4Hcn8QUyzBayi0AeZXimCbKAbqRlBAY6QHeAIGvwRN7EDQxk
6vIGDHgDnmlmD87YK1BK3xTFb1ISq+r/A/jivqeqJJKiJOoxRf6P//H//F/K
//bu7u6//vfn//lf/sP//T//l//yH/6f//V/OP+f/+0//9f/4/E//6f//c9/
/r/+0+N/+i//03/8787/+P/9N3d3/+8/d3f35/9uAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAcDP+/v1LIpFIJBKJRCKRSCQSiUQikUgkEolEIpFI
JBKJRCKRSCQSiUQikUhXnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg3Hfz+Off5v7P
W/Pyc3ReAAAAEO/UlHd3zd1def6vazWWsWiq+pb2jWzU53ZQtO2gT0VZNds2
B127q5tTVTbl5vvH9vY8lpfcbrgG6yU6rrtf3wDctlxj03VT12I6Oj8ml5RX
AABw/YhNX+++kYexDQip3Pps07S7UznHj2iQl23PY3nR7YZrsFaS43rE9Q1A
/n6b99eP5uHp3+afP326f3prHl+/E/zt6qDY9OdHV46H11/lx3VVLK+FGT9b
nUrpul3wN0UAAOBheJZMFx8gNh2/edMxIS6yq+TnRwJT/Od8ju2WLV27G8c3
RrTHHOv4JiU4lovNWa5jKfeVWk7X4NzOj62P6yHXNwB562PH/2jS/dNHZEw5
79h0++7I6XQ6pzrbeG9dn/o8VmVTEJsGAAC+iE0HIDZ9M3KLCzXCs8quedqw
3WVYx0jgko9rTtfg3Opx4/wcc30DkK/f5uVpjkG/i7Hjn+/m5fmt/+z5O2If
mcemXa6H52vz7tdN1T7ritg0AADwR2w6ALHpm5FbXKiZ35skNo2sXfJxzeka
nFs9bpyf3a9vucRzAKj9fDUPXdz4o3nXfKX+jJ3X45jYdP36liQ2XbfXlJ2f
C7T7JDYNAAACpB+jRGw6lvmYEJveU45j+K4tNp1jHSPeJR/XnK7BudXj1vnZ
8/qWVTwHgJpDbFrvt3l/fut+P87/8SCPve7YYtOu2xG+v5obW/j+MF5aPT/J
1xTTtV9v6/M1s9h5fmfLPolNAwAAH8KaRask9yfqU1Od+yGF8J1u7jNlp8MQ
mx77K8rnsr6vs9hH4TvfpHoblXYjQ16H8tanapgrc6yHUvP8uI5NTOuVaNds
qpvKNg+n0zGR6rc+OeY5tI6a6fjP+Tn//lxO9S9ijqN8PM7P8D5lC2mn4r7E
dbdczw+vunGvL+Xx0ObJ4e9AXnWjYphvWndO2+rG5xqkLlTk+S4dc+vuPOvQ
tW0kOL+M5+/4u2p9Pp1cj6VP+b2uY7rr4V7X8pi8B16Dk9ajeR9ObWqv4xp8
PTjXZ4r7q/T97OI5ADTmOT0enj3GR/+Y56h+/BS/bIhNe21n2NaT5fsJYtOn
Ul4nUd+fUfWnVc9o071s7B+cfyduzmmfxKYBAIAPp+fMWt8P0cbEdLHp8d/v
mlW3qZ4/UyWXsJFtG4VyI2M849z30pZT9ayreP6e4u6aOKFLX80zLlKt1u82
5TmwjqZyqfIklTX6OArHo/DZTkQ7PdfrSarH7hnA5Vj41I2K7/EIik2H1I2K
Z2zapW4iY2/h57vmmKesQ9e2kfD8Upd5KLfT+aQ7xp7lTxDD3O9aLm9my2vw
FvWo4NymdjyuUdeDNkaS4P46FSPTeA4Avc+PacxyGz9+fLXFqPt4dvfdz9/F
d+tP1ThsXWzadzvLubFfPn+F73/0Y62Fbbw//xs3p4dxzE8z/+1U+Ft0PV5r
VfHk6e+Fhr/3WfdJbBoAAPgzvz879E26Po3weTv+qdD9ThWbrg3fn/s/pbT+
dDv2zfg8qtj+cizgeXvVPDZSn9c55iGOhy2tv1v2y8a6VId43d+DNh+T0DyH
1dGYl7vFmLthTOOioCmOo7lsU/5X24lpp+Pn6jGFpmPhXjcqoW3W9533kLpR
8YtN+9SN/zv8ic53zTHX7s+jDl3L739++ZZ5+Ttx3HEfdxPPJX1sOqQNuV3H
NPva7Vqutuk1OGk96vPu3KZ2OK4prgep7q/DD/KL5wAw+1mPR+7n1VDEdYdx
yesxzbrPNbFp3+0M/991/pHY2PT0zqZpbg35nRnh3+XtLG8R7ffW/XbjPsXt
E5sGAAAegud2VD2n9R+sYtPic6luO/ohf5bPxbzoYp/az8Wx3Ovy6+fp0MRV
tHXi976xa1xE9bk2z4F1ZIoHqH4fdRyFelV/b45bOQ83s7ZTc9t3iU0HDX0L
brMJ52PV1o3yy0GxaZdNe5cnwfmebC5bTR26lt/3/PIus+13y434z6NsaENB
sendr+W6Ym1wDTbvMLAe9XmPGpKb+LgmuR4kur92v8gxngPAzc938/L8pp0H
ozXGfG1pjgmrY9O+27HFmmVxsWmXcT+6PqTm3ru4PrV/o5OvV6Z9TpkmNg0A
ALy5P/e285VW3fvSy3dc5b7HMjZtex6b4taWFBo/XOZJfja2xGKUfTXT7zTP
yJ79tLDxhuY8B9fRtD3znLYpjqNLbMxlXm+/dmqOZxjrzbFuvLe7yN86nhMe
m3atG1N+HOf08Kib0Nhb8vPdiWMdupbf8/zyLbNf3brUj3sbiolh7nct1+xl
g2vwUqp6NO3f57q07XFNcz1Ic3/NNp4DwNNvP0/GKj49z6sRF5v23c78fe04
a0lUbNrwLoby72bCPE7GdwGd5owy9BOITQMAgADW5155nSc5mWLTi/kjVePg
hPe3g2OabmNp1eO2Usem1f1I3/eN08dFYuqoWa4ZdzeubbgIDiQ4jg5lawyx
6eB2GhGbdqob5a+ijod3rMq7bpS58V4L0bVuguYo2eJ8N+7Wvw5dy+9zfvmV
2fc9A8sc0J7l97+OHXEtN+8jeWw6eT2qOV+XdjmufnkybT/F/TXbeA6AMD9y
XHmeI3q1rqGWPjbtvp19Y9P6sRrC39jOP6vF9W6Na5MLfXnNTdjpvSBi0wAA
IID7vJpFU1ZV9yzZPU5a47ZjOveDqnTv4q7lFZuePhPWk9SNw7LlNZfY9LiN
dt5oMY5RlHIZY5+7Q2PTMe00LjY95MpQN+rv7xebDqkb03bcY9M9e93kH5uO
qUPXtuFyfh0Vmw4rP7Fp070xVT2a2NreXsfVJ0+O24+4v2YbzwEQaB0T9p1b
wzanR6o5Ony/r49NG+6Xi7Vni+7vgP313SVHhnXrXfsUxKYBAEAAlzFKq3kX
+x86PX/3m9X3Z1LMnZvPnB5ifsbPhu96PJNmNaeHimKtrDRzINtjh6r9xLXT
FLFpgeMag3vN6RFWN6b8+Mamxcyo6yb3OT2S1aHr+pNB59d2c3qElp85PZb7
2qYeHSna1J7H1TVP9u3H3l8zjucAUPv5ah6k+aSX+rhyzJqEtrUQXbdTv77t
sxZibVhj3GMtkXb76+VYNL837VP1PWLTAADAQ+hab/p5pDXPaLq+itdaXdpC
mLdhXT8rbWx6LGtXp05rAMq73WDMXmgdtePoTN8fC5biODrWq886W/Z2GhGb
dq0b03c2XgsxrG6UW/KLTXvUzf5rIfrFpoPq0LX8qc4vzedT/iLWQgxtQ8es
hZhvbHqbelRwbFO7HteU14OY+2vO8RwACvOY6DZu/Pj63dRi7Lidz+NJnm9a
+t3TR/PyKcR+f36b9+d2W2I8WBObDtzO9P2f+bP68+uc17fFfB9TLPv83fdh
v7X4G01sWn4Xo30fZX5lyhwbbn9bCPeB9bVW/Tc/4z6XXyQ2DQAAvM3PoPM7
q3W9HKt3J75ze/6sKsd4hynm5xpTE96HlddJqvt5Hkv7AKzFNuZNnJ+Hq3mO
S23/K3VsWng3uCz9n0lNxyQ8zyF1NL4/LR8X1Xi3FMdResdc2EbbB57GtEn9
5bh2ao5T6o+FT90otxzYZsNi0351o9ySR2zar27M7V1lo/NdV3LvOnQtf/j5
5V/mYT/18pwqCzHGZo5N+7ahsOvY3tdytS2uwdvU42rnzm1qv+Pqdz2wX9/C
769Zx3MAaPQxYNNahMo5oYW4tfI3uli2vC2v7TT9OG+n9RfV3xW3p4tNi++P
tHP5y/3r6ToqvhczzlM0/ds8H9/c3x7n11/f32z7nBCbBgAAIRbvsUrPo6rP
xthAWWr6HvrYtH5MVYK12gx5HftnawnivLbfKp5VrUzHJGodLt86mteAUid5
jHXscZTnKldtQ9GuotqpJU6pPRaedeO6bWub9RxHGVQ3yg1p2rx63mC/dmNq
7/7lCj7fA/alrkPX8ieoJ4f2Yv3dVBm663NgGwq9ju16LdfY4hq8ST2uvuze
pnY7rn7t3On6Fnh/zTqeA8Ds57t5eX5bxHLvn4ax1Nof/Tbvrx/Nw5P0m0/F
HBqfc5x4vZahx3bG70t5fRDGRi/L9bWIfbfzl4zzgehj0/PfCCvlxEPydbfo
5vZffvV8ve6un9J3NfPr2/c5ZZrYNAAACFNLaxMVy7FEy8/Kbr2keSyUT2y6
McZ72zUTCzG2WSzHzjoUpOs7ic/NhbEPFRHPEMbxqh+NPeZvVhZFd0xiYzC+
ddR0a0K14yuXfVzFHKXj9oOPo9h25Hya9tlEtFOXeVH154df3Sg37n08/N/x
960b3Y5VbV5fj151Y7oG6QuW9nw37sq/Dl3L731+ebYX0+9Wz6m6+gltQ6HX
sT2v5TpbXIOT16Mm665tasfj6pont+tb2P0163gOAEj0ayFmjNg0AABARiwx
eihExA4BADeC+yuA60dsGgAAADEusj95OGLTAAAz7q8AbsF8rTt18/obl+I4
XN3n8URsGgAAIAftnJIFY7oCEJsGAOhxfwVwK6a1VKeU73VvWl93mueI2DQA
AMD+1uv4Bc0zfdOITQMAZNxfAdyedgxyWZZCyjfeW1flMq+Vz9orAAAASKKe
14ljzaNQxKYBABLurwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARPv79y+JRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIl11AgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW/puHv/8
29z/eWtefo7OS6jf5v31o3l8/mrqo7MCAABwuFNT3t01d3fl+b9yMeapaKqj
Omz1OQ9Fm4c+FWV17jvWzakqm7L7b+wrgzaRrUTtkjYPAACydwWx6c+P5p9z
Gdr08Pp7YEbOPb1aTAdmxeqS8goAAPwQm9bvX0jluXZO5Ry3I0C6s6PbRMaS
tEvaPAAASKUfF/zw9O8Ug71/emseX78T/K37oNj0EE9Wx5J/mxehrLp0//w9
l+FphzIY89w0dVUs+35ZPQ8unUqpn1owbgIAgMMMsaJ0caKDYtPGchwch5zi
cec6Wex/HFe6cb6SH+MDhJQhpzaR2zGw1U1suzy6zQMAgCvRx4618dmnj8h4
7DXEpnPI8xybbt+VO51O51RnG++t61Ofx6psCmLTAAAci9j05qZ+2lHBuNzi
oiGITae1cX4Ob/MAAOAKzDHaNgb9LsaOf76bl+e3BDHavGPTj5875snGNTbt
0v8790V37yeq9llXxKYBADgasenNje+MEZuOQGw6rY3zc3ib95XL8xEAAJj9
fDUPXdz4o3nXfKX+jJ3X45jYdP36dnGxaXOe3WPTddsH2vm5TLtPYtMAABwu
/fjGY2LT5nLcdmz6GsawhpQhpzaR2zHYOj9Ht3kfWT0fAQCAmUNsWu+3eX9+
634/rRMoj73u2GLTrtsRvr+aG1v4vrBu4Xp+kq8hPuobm9aVYfj3Ybv1ed9j
ORZjzYUx6P8M23l4FmL+Tnl26V/W5z5isfP8zpZ9EpsGAOA4wppkqyTfm+tT
U53v6YXwnW4eMeUN3BCbHu/9yphM329Y7KOQ56oNLYeUp3qc83b8XmmJEaXO
21g3uvjo8O9D/vs4lrCe3JSt/rjM2z3n8fx5bd2/rf+l2L9PfYW0F11ZQ8qw
R5twLWPwMWjsx3ez/Bji9sFtztbmpx24n2s+9aOU4fMRAAAQzDHaRazU5sc8
R/Uy3muITXttZ9iWYZ7o7vsHxabfX98W+5rGPg/xf91c3t3fBBLEpk+lvE6i
4tlm3I7i2UP1XDn13ce+4vl34uac9klsGgCA4zjFqGr9PV0Xf9bGpsd/v2tW
XZB6/kyVFF0Wz3LMeapW60fPcS1lrGyTvLnHpk9Sfqe+3hTnV5V72H50bLpc
xmutZY9oL7qy7hCb9msTnmUMPQYux3ez/GjaZVSbc4hN+5xrzvWjlu3zEQAA
WBLH+v55ax5fbTHqPq7bfffzd/Hd+lM1DlsX1/XdznJu7JfPX+H7H/1Ya2Eb
789SjFhRhlSx6Tkeva67MR/3i9j/MFZcmsfbnGeHcdPGcUrNPFZEGJdQj31L
VTx5GpNQN5VurW3rPolNAwBwNPO798N9vusfCJ+34xUL3e9Usena8P25L1FK
aznXp7Ev4RJrMpVjGfNajK0U4mH7580Sm57ytR4LOm7zbjFOdBhzKsW6/OdX
MNdXNcXp5LLHtBd9WcPKsHGb8Cqjf/7dj+8W+VG3yzRtTtfm/c41n7xo5fh8
BAAA1n7W45H7eTUUMdJhjK82prv6XBPX9d3O8P9d5x9xjU3r0vJ39ti0Lp48
5sMlBh4bmx4/N86tIb8DJ/y7vJ31uIX1c5lxn+L2iU0DAHCY4HlhVTGa/oNV
bFqMI+m2ow0n2T53Kocp1ij0WeSdbJ43e2xad1zGbbqE4cJj04Vm+/PfGpyH
fFrbizl/W8amvdqEeYfa34TGpqOG1Abnxxybjmtzmjbvea6lqJ8sn48AAICe
NC+yPKdEa4yf2tIcX1XHdX23Y4vbyvaMTRvXeRxj6tJYb/8822LTLmOV1n2n
vs+n7jcu+1PtmAK5f2Xa55RpYtMAABzMPWZWN6eqasp2XOLi/Xb5Pr6MTdti
MVPc2pJs+QuJtQk/VuZx+7zZYtOGsZVTnsumskx8HROb1nfjbLFb3/ZiHke6
XWzar00suZYxIP8exzd9fszx47g2ZxmT7XquBdWPKNPnIwAA4OB3ua6fYp7m
uNi073Z85+DYd04PY2y6Wa6RaBqTHhWbNrw7pvw7vzBvnekdQLc58gzPGcSm
AQA4nDVmJq8RJydTbHox96xq7otamB8it9j0HnmLiE030rqBd+OacfHzSUTF
poPbywXFpr3LGJZ/1+ObPj/6uolvc6pth51rzvWjkuvzEQAAcPcjx17nOaJN
sdglfWzafTuXHZse99nOoy3OnfLwrB6THhKb1o9rEcYEnH9Wi+t7G9eeF/qP
mrEyTu9BEpsGAOBw7nPyFk1ZVV3spwv/aGN38npm5z5FpZtbwDAv6yblCIlN
b5m3uNj0mM92Pl4xNlmU6vHf28emY9rLpcSmQ8oYMXeO9fhukR/bMYlpc6bY
dMi5Zs+L8le5Ph8BAAAP6xiu79watjk90szR4fv9I2LTgnbulKd1/sJj04b5
ABfrWxfdWIO+P+uS0bkfrFqj3WkOQmLTAAAczhSjEmMpq08dY3f9ZvV9g/CY
nc924ub02C5vKWLTAs36d1vEplXbjGsvlxGbDitjorakOL7b5Mej/Xm3OfOc
HqnrR/PFfJ+PAADA7OereZDmk16a1/oLXZPQthai63bq17dN1kLcPDb986uu
37H8z9+OeTbEpmvDGvKG9VFU218vXaP5vWmfqu8RmwYA4DCmmJBpvTH9PNKa
+Izuvj/N+2HpN0SUI3iM7OZ5i4hNt2Nj1Ttb9c+Sx6Y1cxPEtZfLiE2HlTEg
/47Hd5v8aOomSZuzzGXteq555GX924yfjwAAwGCOz7ax1cfX76YW46vtfB7j
54v4tfA7eX2/n9/m/bndlss6gmHbmb4vzNfcz5XxtogzT7Hsbm7n4d+m3+wV
mx4+X5VPPW7anGd9bFp+d6x95+00f2iMDbe/LYR+r7ZvKfW9jPtcfpHYNAAA
B5vjV/P76vUwZ+s0h6r4jvz5s2qYd9Uca9StIyb3KYR34eV1zep+jtfSIZ5n
Kkf4/A1p8pY+Nj18vsqTetyouW4M2x/yUAr7aPt107hSqQ8Y114sc2t7l2Gb
NhFWRt/8ux/fbfKjqhu/Nuff5n3ONb+8yLJ+PgIAAII+Bmxai1AZdxXi1srf
6GLZ8ra8ttP047yd1l9Uf1e1puO2sWlz/a7GgBvzrI9Ni2tJt+uFyM9PU79R
fA9wnFdt+rd5Drj52WRcD2Tdn7ftc0JsGgCA4y3eYZdiWarP7sa+Q6m5j+tj
0/rxmP5ruXmVY+d179abTx2bntdlUyep7o11o8yxNGe4qtyK4xvVXizzR3iX
wfabwDYRVEbf/Hsc303yo54T2qfN+bf5xuNc82z/cg5yfj4CAABr7Tje57dF
XPT+aRhLrf3Rb/P++tE8PEm/+VTMR/E5x1zXsWCP7Yzfl/L6IIwzXpZLWnvw
6WuIBe8733TdxeDfhJj0Of/PmrrV5tkUm57HRFTKidLkvl3RrR9ykp+Pur/x
S9/VrAdi3+eUaWLTAADkoJbWEiuW4wiXn5XdWmvz2EWf2HRjHKPcrplYiLGp
YjlmN7wcEbHpBHnbar7puovlyf04xbzD3ZcNx3idY+EY9v2/wmUfyv24theX
uY19ymD7TczfK3zLGJZ/5+ObPD/6unHNU1Bsut+D87nm1f4Xecv4+QgAAOBC
6ddCzBixaQAAgAwFrsUIAAAA4CYRmwYAAEAaxKYBAAAAuJtj06duHRPL0jAH
q/s8nohNAwAA5IfYNAAAAAB309rPjmuAHGlaT9y6DgwAAAD2R2waAAAAgLt2
DHJZlkLKN95bV+Uyr5V9zRIAAADshdg0AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAFyLv3//kkgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKR
SCTSVScAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHCLvpvHP/8293/empefo/MCAABwSU5NeXfX3N2V5//KxZinoqnq
o/OCw9TndlC07aBPRVk1NIcj1c2pKptyl+Ow576Ocs3XuRzvK5co0XnAtRQA
dpBrbLpu6lpMR+fH5JLyCgAA0skxhnDNMRu4GduAkMp8WuhNOpVzbGvrE3PP
fR3mmq9zOd5XLlCS84BrKYA9/TYvT/82//z5t3n81Hzl56t5OCyG+9u8v340
D0Me23T/9NY8vn4n+JvdQbHpz4+uHA+vv8qP66pY3gMyvjefSul+VfC3VAAA
sjQ8q6aL1xwUQzCW45pjNhlK3qYSmGIy53aZUbZu2zj2MtF5absGpNxXlq75
Okds2tnW5wHXUgC7ssWm+/itMXa9mXnfqnT/9BEZU847Nt2+M3M6nc6pzjbe
W9enPo9V2RTEpgEAyBexaaSWYWx66kdnlCcklmG729c1X+eITTvb+DzgWgpg
X6bY9PyZLo66R77aGPS7GDv++W5ent/6z56/I/aReWza5T5wviftfr9Q7bOu
iE0DAJAzYtNILcMY4fhOX055QmIZtrt9XfN1jti0s43Pg92vpbnENQAcRBeb
FmLDUfHfQNM8Ih/Nu+Yr9WfsvB7HxKbr17cksem6vZbu3CfR7pPYNAAAWUs/
BuqYGIK5HNccs8lPjuPqiE1fvxzb3b6u+TpHbNrV1ufBntfSrOIaAA6ijk2/
P49jlr8sscbf83ffujjyONfGgzTOeYzF6mPcfR4WMWKH2HRMnnq22LTrdoTv
r+bGFr4/jJdWz08y17P9PlOf7xXFzvM7W/ZJbBoAgDwJayKtknzfrk9Ndb7f
F8J3ujnGlDd3Qwxh7Bcon/v6PsViH4XDfJZO5ZDyVI9zbo7fKy3Poeq8VabM
DXU25+f8+/Kk6Q8Fll0s21DW7rnap2whx1bcl7gWlmub8qob9/pSHg9tnhxi
XFF1U3m2sdj9N+71mqBtGtv++Ltq3RaXP7PEUl3L73UN0MWcfMuZ6HiPeTc9
R2ny3McIxc9u4Dq3wX1lWtNJu55f3VSqOZpjrmM+v93rPLDlyXAtrULrUF9B
+cU1ABxkHZueYsm2uPCPeT7oKdZtizOPny/i4MJ8Is8e46Nd89QxxKa9tjNs
68ny/QSx6VMpr5N4p70/qJ5ZVPf4qS8z3r/PvxM357RPYtMAAOTJ6Tm21t/v
tfE9XQxh/Pe7ZtU9qefPVEn7uOtcjjlP1Wpt6fk5XBcfM+WtUGVuipWo8iTV
S0zZxbKdt7uIQ1m3E3Fsz/V6kuqx65+6HAufulHxPR5BsemYujkfB+1vA+Iy
rvt3rdeEbVPZ9se6cGqLujiZZ/kTxOT8y5nqeBvyJZRr/fynus7ewHVui/vK
VA7NNUH1PBtzHXP+7Y7ngUueTNfSkDrUyDauAeAgUmxaiJ+a5/KYxzo/fv4u
rj315zoWPY7DVq2nqJ3j4pyXccxyt59XW4zaL0/62LTvdpZzY798/grf/+jH
WgvbGOsieE4Py9/Wp7+dC38rrsd7jCqePP2d1PB3Tus+iU0DAJAz8/u5Qx+g
6zuIA81OQ9/ANWZSG74/9zNKaZ3ndiyi8XnXuRzLGMViLJgQv9Dnbdl/av+9
ruYxw/LvxrzcLcbBDeP3Fs+6KcpuLtuU/9V2Yo7t+Ll6nJ/pWLjXjUrY8bDl
SbufmLpxbmNp9u9ar/5t07eul78Tx9z2cSRVLHUdm/avf9drgGZf3uVMd7zH
fK//rHI3/81J/lB4XovP0yVd57a5r+iOQfd9xTN4zHXMu952OA98yqPbvm8d
GuUY1wBwECE2/fq1mL9CF0vuDDFs58+H/7+Odyvm8xD9rMcj9/NqKOK6vnnS
xaZDy+Y4/0hsbHp6H8n0Tpj8rpCiXzNuZ3lrbL+37jMY9ylun9g0AABZCp47
UvUc2H+wiiGIz7267eiHYFo+dyqHOVakfad7GiemiZtoPjc9o3uVzansc6xB
/b05fuM8BMx6bM3txSU2HTQcLfB42PIUlAdD3ZSKSQrs8wbE7d+1Xn3bpndd
23633Ij//Mja+g+MTQe3qXTHW/3d4bw9/1tfruX+lc9rN3Gd2+i+om1X6lhm
zHUs6ho4byTpeeCTJ+32PevQJMu4BoCDzLHpKfb7+tuN9zXNNz3GV21pjr9q
YtDK+TwUfr6bl+c37TwYYXlSx6Z9t2OLNevqLiw27fJ3Y10/XdNHW1yX279N
ytdp0z6nTBObBgAgY+4xu3b+2Kp7f335Dq18j1/GEGzPe1N8wZJs+QsbMzn9
WJlHe91o3ieftmeeqzVN2e3xPZf5VP2OrTnGYKw3x7rx3u4if5oxqEGx6UR1
Y5pXOMX+XevVs2361rVfPbu0J9f6j4vJ+bephMfbMGdEt09FnFX5DHcT17mt
7iu6OaU1z7IR17Gw3257HvjkSb99zzo0lDXLuAaAgyxj03IsWR1DXcez7XFg
9dwd2vk8DPmtxbk+pvh0SJ5UsWnf7ajXkjSJik0b3kFR/119nr/K+L6l6R7i
8t4LsWkAALJmjUvI62nJyRSbXsxPqRqTJ7xLnl1s2m28sW682WKdwLtx/a3F
A3uiskfEpoOPbURs2qlulL+KOh7esenUdeMbm/bev3u9+rRNv7r2HaNvmQPa
s/z+14CYNpXyeK9jev05O/z/4XlqLtdyHca4PF3adW67+4rqWdv0/B12HfP8
7S7ngV+eTNv3rUOlXOMaAA4izJUsz7cxrWGon49ZOQ+H1hALluLJrnNhLPMm
x5VD8qSPTbtvZ9/YtH48jPC3xfPPanGdX+O6yMI9XdNRcXpXjdg0AABZc5+n
uWjKquqeVbvHVW3sRV5/6tzfqNK96xtXjv1iNuM22rlNxdhCUc7rTKYpe2hs
OubYxsWmh1wZ6kb9/f1i0xvUjVesMmT/I9d6dWmbR8Wmw8p/ubHpdcytn2ta
Oh7j/7fOK3PN17kt7ytyzF8/Rlfcl991zOe3e50HfuVx2r5XHUo5yDWuAeAg
5tjqGEeV49a+81iIv5vjvkNs2Ljmonu+/fNkntMj1Rwdvt/Xx6YNfYrFmrtF
9/fP/r7mkiPDuseufU9i0wAAZM1lDNRqXsf+hw6x6fH5V99vSDUPcFZzeqgo
1q9KU3Z7vFi1n7hjmyI2LbCs7eW+3TRzemxSNx6xyrD9qzbkVq9hbXO7OT1C
y3+xc3qI3+8n8ei2vV57bzmfxfqacwvXuW3vK8t5IYZ9usYrXc83x9/ueR74
lMdWt1F1mHNcA8BBbON++/jt6nPP9f8mw1jsLi5rWnOw/Z5xDmpFvrzzZF4L
0XU747wkm6+FWBvWNzask6Da/vrP75rfm/ap+h6xaQAAshS6bp1+vk/NM6Bt
3k6PcVW+5QiOI4Wuk9aObTN9fx4cmaDslrJp3lWOO7YRsWnXujF9Z+O1EDep
G49YZdD+Xes1VdvUfD7lL2ItxLD6D7wGRK+FmGp+cWG8qWodP+HfVGsjRuXp
oq5zG99XxPlTTOspxlzHHH+763ngUR77PGCOdWj4bZZxDQAHsc9JMcVeF7Fi
YS6Qp4/m5VOIs/78Nu/Pb82jMvY6z+Px+KyL5wrb/tNu57upF+snfjeP075j
8qSJTQduZ/r+jzCf9ufXOa9vi7qd6/Nc9mG/tfgbTWxafgelfQ9nfrXOHBtu
f1sI97/1PUb9t07jPpdfJDYNAEDG5mfc+Z3Yul6Od7sT3+k9f1aVY/zJFKNz
jQ8K79vK6zDV/TySpc9YV0U5wuNIy7zNWTs/x1fz3JzL8owxJrksqjFoKcou
vfctbKPtn03jzKS+XNyxNcem9cfCp26UWw44Hsvy+sSmk9ZNQGzaff+u9Rre
Nt3rWmiP7X7qZXssCzFmZI5N+9V/6DUgtpzp1r4cY85VVw45Djycy+c6Uc81
HZOnS7rObX1fmeeNKG1/Awi6jrn/dr/zwK889mupSx1qfplzXAPAQVzmS9as
iyjEiFXpXjfueRiXrJzjWthnGwM2rUWonBPaK0/LGPiLJv7tVLZhPLjLmpCq
74rb08Wmxfdm2r+zy/fZ6f4hvg80zs80/ds8L9f8TDOuK7Du39j2OSE2DQBA
3hbvyUrPu6rPxjhFWWru8foYgn7Mlv96T17liIkjGepg7F9JP2hOYuxgleSY
U2zZ5XlYVdtQHIuoY2t5H1x7LDzrxnXbxuMx5NznHf8t6sZrLg7f/bvWq2/b
DKtr6++mCtJdD0LqX/M7l2tAUDnTx6bnMeeq3y3X90v6fki/8wu5zu1wXxHX
WlQPmo64jnn8drfzwK88TtdSax3qfjbnLbu4BoCDOK7lN62LKI9z/m3eXz+a
hycxztqOEzbNvayZJ0S53+/m5fltEcvttt+OpTaUyTlPn3OceJ0X37L18XQx
rw/C2Ohlub4Wse92/pKxXvWx6flvo5VywiX5flN0axosv3q+T3X3Dem7mnUF
7PucMk1sGgCA3NXS2kfFcqzS8rOyW49p8Q76YmOmGEJjHLvXrm1ViLGEYjkO
OLwcsXGkvn8kPu8Xlj5Q3cVF5P6XYt7Q6LKL9S3n07TPJuLYusxVqm9TfnWj
3Lj38fCfAztx3fjGKr33716v3m3Ts65Nv1s9f+jqLKD86t85XgO8y5k+Ni3G
FI3z/2vLcCvXOZ+yhezTbX7tmOuY8293PA9c8+R2LfWYo3yx7YzjGgBuyDiX
hudc1TdCvxZixohNAwAAbMgjXgwAsLDEweGAOgRwucb5lnVrAd46YtMAAABY
IjYNAKlc5DN3ZqhDAJeq/vzQzA2C0XyNP3XrGdRZX+rrPo8nYtMAAADbITYN
ACm08w0XjPeNQh0CuDzz/NL/uM4zfcMW62Nkfr2f1hWe5nciNg0AAJAesWkA
CLdeT9ZnjmS0qEMAF+xnXm/w/umjeTGuk4h2DHJZlkLKN95bV+Uyr5XP+jYA
AABwQ2waAIIJa1CyHl4g6hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgOz9/fuX
RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpGuOgEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgK19
N49//m3u/3w070dnBResbk5l0dzd3Z1T0ZSno/OTM845vbFu3pqXH5d/hzvO
UeB2nJqyO9fLJp9TfcxT0VT10XnZyy2W+QD1uZ6Lu+H+dtcUZdVcbnWHtpnz
Pb4qmzKq7Ee11x36J3V9biZVU5VlUxSXcD6mOJ4yrkdISdeeLrmdbXHe4XyB
76/vReb1ein5vGrEyXDur9Vi8v39cA86dybbn3b9y93O6di8H4FzTo/YtBrn
KAAfxKbzcItl3ttYx0K66D++BraZ8Zm6jc0HN7Yj2qupf5Ko/1BXTbFoI0dc
Fz3LkuR4rjbK9QgJXWFsepPzDhcT872UfO7t86P558+/zun++TtiZ1vHyX6b
l6c+n4+fm+zgMg3H+OH1V/HhXGeq9PD01jy+fic7Z+qqWPbpvfpsdVMVd4t+
ZPf/d3ouOJXS80joteSqzrnRb/P++nFuL0K+E7ed9DKKTXOOJpHsHAWu2dAf
Th+D2DkGYyzHBT+vBrvFMiskb9/rbXdt/SrqOLTNjGPHY9ra3u3V3D+J6/so
9jZu74C/Xfj3hVIcT8U2b/l6tOV16CZlFJtOdmy3OO8ytef5cCkx30vJ596u
Kk5GbFopIu41xxnTHLOxr9a+A3k6nc6pdj4fx98eNUSlrk99nquyHxNBbHqx
D1PbyXP88XXEpjlHhf2nOkeBa0Zs+krdYpkVNnwGnu6PV1PBR7aZffdt65/E
9H1UxvjwEf2hPPpCN349Ijad2DXGpm8Isem1S8lnDoY4yf3TV+K6IjZ9CMe4
17rOfpv686t5GMdnKn/vJ7xfn9E7w+P7eimvJVdwznWxUTGW+/PdvDy/JYiv
b+XyYtOco462OEeBa0Fs+krdYpkVNnwGHuON1xOTuJXYtP0alfbvDpn0hw7t
C9349Yj4ZWLEpi8asem1S8lnDq4gTkZsela/vgXGvQZje0gQXwzt+2U1VoXY
9Oynj4uatl9/5jqvRz6xac7RxIhNA1rpz9Vj4jDmctxiXOQWy7y25b2I2PRl
7tulTSRtN7n0QYhNHyarPvFVyCc2zbH1t2ud5XL9tbmUfObAJ042jI0cx+11
8ZXnr+X4yYkhTjbFuFTxoN/mXd6HPEZz+F5QbDqkDEPd1Oe6Gn8nx4W6zwzv
4seVtVmMSx239/AsxAENc0fMxzYs7jXG0vSxsH67chlDrk3tWtdFTv2bo2PT
OZ1zDrFpbZ7Ec+hJ3I9QFrmN2+YHCaob39g056jsJs5R4NIJ6+6sknyu1Kem
KovFml7du+7KE8oQm65N14a6W4tssY/CYR5fp3JIearHeR3H75WWa1Vg3jbh
mhfbM7rndoa6rM/1XRTib4R2MLST9PUq56GyHz/X9i3n+VxfxbA2npZ223Kb
V5ev0jYcRV2Pv9VNBmEaa2U838bYuvhZ6Hni0NaqZbu5Wx3n2HPUjWv/JGXs
JJvYlXNfyHA8Q84X2zaF7XrdYxzOE/l6tU6R9yJbffjcZ5V2uIa4lkW3/VT3
g6B+hm9sOqdj61kmn/ufidc5nLj9edWZb79L/n7RlNW5XEHPgFued6H5jOiz
uV4DLoVTnKyPz+jjrqpYlS5ONs9Xu4q9/Jjnsl1+3zc2HVGGNn72uvytOObR
tF1tbNqnrD9fi9iYct7Z6LjX7yL2rtq/NiY5fi61IZ/+2npdkvTnWTcn27n/
XBb9dVrY+XwfaO+7y4wdFJvO+5xbxFyNxnPoo3nUlKc7v4S25/o3nbC68YhN
c44u3NQ5Clw6p2eEvi+sf65XjY3WxabHf1fMuVrPn6mS8RLiGZuudNcpQ8wk
OG/jJkKuW8oN+eTFHF/y3s75GajUtYU27+LzT/J6dciDvB+XdjHFblXfMYz7
d4lNW8pXKBvO/Ex5ktqp/h5sOM5CPte/V52noeeJKR4kxZi1xzniHHXg2z9x
7fusYp+rdjOssWjIu20b4vVjyq4Quy8q8Zoi/LtcttjYdOj5YtpmzD3Gcp6Y
t6tpUz7XJZf6iIlf7nYNcSzLYvsp7wcx/QyP2HROx1bJFpv2uP/p+JzDW7Q/
j78Ze/W7TOXyPSZbnneh+QzqL3leAy6JY5ysG3PXjRcU3kNvxwmOsarV++mq
ONmv4fvzuL7Hz99l/ORTFXfxj02HlmGORyviccJ41Dbf4nb18yv4lfX9+d9p
TGQtbKMbzymNkxy/G7POmuq343ZVda2boyBoLMF4XUv8tx95Hetx83XbH6z6
vyeO907l/euA2HR+51yf9+ndgfZ3qnNCkaepbQltuJZitf046d+pnI/a9hhT
N66xac5RrVs4R4ErYZ6XYIirdGMzxP71aYi3uMa8asP359hNKa03No9xtM8P
Yi7Hsl+/GCMk9Pm3yFvwdWvFNy/6WFDYdtZ1V8vPmd34rXr8MGG9hh4/c7uY
js1izNgwNsnh/qXf9tzel+OD6+64F9r8SuWsXMaj6tfZ6/69jWcUivvxeF9c
/HtoPdva2tA2hAFefTw2zTH24tg/sfZ9xhiwcHxr5baXY9h8t9HmY45bD/V7
Pke6uqylc6W9LvdfUP99MDI2HXe+WNpI0D3GcJ4I7wyUp+V29XNO+V2XfOrD
f/6fY64h9rJseD8IagOusemcjq2OrUzx10b3cm3b/pz6nc79A11epTHDju8p
bFfu0HxG9pccrwEXJXbuW+3cp+s4mRi/0W3H9h77/HnC+aYtZdDHkUy/bfRr
nnmW1RRzksXGve6f1rE4cznVcwW0guYLsKytHWfZZ+meHYX9rN9/bA6MTTv8
fvdzbtDGjaV29CDHiaU89dtRx5i1dRFST9a6cYxNc45q3cQ5ClyJ4OcqbYxn
/ewvPg/ptqO9Xtg+dyqH+fltGlO5Du4lyVvQdct3X6vPNc+5wdu5W8Z4OuKz
luL6qptvImkeDMevcYtNh96rtNueYjSav1toPw+LwarLPxyb87/1+ZTG4irv
04HniaWtuc09H7pvP679E2PfR4jr15p/n+iukz7bEOPbdRuXlr7bnV9jXFr+
d8W2I2PTYYcgYB5g6z3GcJ6Y/gahW4fN87rkUx/e99mdryHuZdngfmDOmN81
J9F9b9Njq9+SNTbte//T5dX+p6Rt25+xznz7B655dWl3W5Y7NJ8R/aWrGSct
847//Dbvr1/d+/nivLHr3y/jZNN8qJr9jPEa9/GCMbFp3zIY1klziE3Ln3mX
dTpGH83LKr7XKLcdss5aLcyXu64LTXxLM1dAtz3vuNd439tojSWxryg9O2rH
PmQRm87lnJNI8yuHnEPG9mpoW+F14xab5hzVuZFzFLgS7s9V7ZyxVfdO6fL9
c/m8kuOwhfG5QB5XrEu2/LnFpjVxEc0zQaq8BV23NOVzz4tl7GPkduTtGWN4
0fUadvys+Zt+Z5pHUk+3bfs5pZvfJiB+11LV8/Bv3fYVz7bqv4eE1rO5rbn1
H8KPsTv3/om+76PfhqpO1bEgv23MsdSqqYT5O8Q8nk7rf9fGw0Pn9Ig6X1za
tu89xrAth9i0/Jn3dcmjPnzjl7tfQ5zLkv5+IH0psg0kuu9teGwNWwqbQzsk
9mop19btz+l9JsdjZc2rR/1sWe7QfCbvL10D1ziZYqykW0zqo5tLdvqeYY6L
zWPTwWUwxKYX+ZhjTeN7/+v8hZS1WcwzaxqnGhP3sm1DNS+Abq6A7jPfuNfG
MaYpP2Wp/Xv66t+PjE1nd87pLOdBXubLfA6Z2o8xNp3sXFb9O+eo1q2co8CV
sPaX5TXJ5GSKTS/e8TW9Q+3T7w4pR8izXbq8BV23llsIyIuqzKm2oyibcywi
fR6CY9ON9C7t3bi2UEz8aC6faWyaOmYZ+ky5ntO4Py7D/x+Ow6o+fWN+XrFp
t3qI37cHj76Arl2rx13P8+Wq24LLmHXdNuZ4dbsu3Po8Krp49Wn1fcOcrBFr
IYafL5Z5gIPuMeY499z+hFqb3oHX/b3A73rvWh9+8csjriGuZUl9P5h2nqgN
pLrvbXVsTXaITTcu5dq+/TnNh+V0rBzy6lw/W5Y7NJ8b9JeugVOcbH4vv59j
9quLudQ/pt8v55nt4mOv/u+c6/nGpsPLYM2XIU7mPLbRscxtzFvc18Pzcvsp
4l7WeRGkddt066/5xr22Xeva/C6S9p3bw2LTOZ5zFj+q82WL2HTKc1kfm+Yc
jf++n4zOUeBKuM/T3K4lXnXPMN1jjDVONaayW8er++91sMS6TljacoTEpmPz
FnjdUm7DJy+mZ/TY7Qg5C45Np8tDTGx6zFMbsxJjI8s4oCZX2cSm1/HOfq7p
eU3Tfj7X4f97vyc/ZdojTpRfbDpkbWdtrPn8z+0ahVU7vrPL13L+0GEjivk5
PLehq8fFfMri9w3zKSeITY958j9fXObS9b3HWM4TU7zTMKer//XeXh+XEJt2
K8sWsemUbSDVfc+1Pi4vNt0zlSuH2LTrsbqV2HTC/tI1cIiTTXMDPCvWPXOI
k80xHn3cxRyvUfGLTceUwRajmvL+9CbEpPXrxPmXVUGz7tu2ca9++3N9DPWj
ms+k8Y9jxc4NaCT089bZMa1lckxsOs9zzka1r/Sx6bTnsnlOD87RpZs5R4Er
YXquEt8NX59yLrHp8VzV98tTPddtOadHVN5Cr1urLPrmJcU8C/rtjEJiEanz
EB+bFvNsWn/Lbdu7v4/f71SIN/fbEfcvzjmtn3P5uuf08OmfKNt1XQnjDYtu
vGEfR9tuG9r+i2VuUuVcFsli0+I2Xc8X9Tbj7jGO8a+iEGLSxbQGrfb7Udd7
dX1kP6eHirIs6e8HadtAqvueQqJjq7dnbFqgKFcOc3okO1euZE6PZP2la+AQ
JzOt86Wf01ZcA034Z91YyDEfmvF9a36x6ZgyGGPTY3k0sR8l37L+KNY9E7cj
7Ds+7vWrjKfNeenL231mWS/OL+5lGAuQQsi6Ga2DYtNZnnPtdhzHem8Zm057
LpvXQuQcFd3QOQpcidC14vTzSGv67rYYS+R1Y4vYdJK8hV63dNtxzkuK9ekM
2xkEjZNLnIfg2HRdq+8JpmPmsu3o9ZRCnimFv3Oo1k4S/k21NqLT/j3jRNM1
wmstxK1i0379E2W7dmwX89fn8kyvzHtuQ3d+6a7Nxvh7bGw66nwxxwzD7jGG
80Q5Zt3C97rkUR/7r4XoO2e9a1m2+1tlmjaQ6L635bHV2iE27Vqujduf0zoQ
ntdqXfnryqN+Nix3cD5T95eugUec7F58N/3nd7EOmm1dNtX2lnGVOd6yWk/s
vK/353Ycsvr7PrHpsDI4xKad17XzLev4jr78PfWYzDk21851O/zbNOetqc5+
u3XWxrkI9GWe5wh4fDbH7rziXp79ufbcHN+DcF9n17S2w9C/PGnW1F5cS/z2
vXKR55zw3T/DOwGL9faEtrPxfNNpz2Xdv3OOrlzUOQqgNfeX5/fJ63o5duZO
fIf1/FlViuPQzGshLj6xzIGwWp+n7udgLT3ewVeVI/zZLj5vwdetdQk986Ir
c6rtDD8Jeoc7bR5Mz+b6djHGcuX9x4+blss3b77unj/HcbPr38U9U44x56or
s3T+TbG6yjBWP21sWvw7VVfPwpym/fvk4r1/49h0ipiwpS/R/qaQY3jdd89t
atyO1zZ073PrrrHiv7frI0p7iIpNx54v5th02D3GITbtOc+B+3XJrz7M9yd7
Xra9hviUZbvYdJo2kOK+l/LY+jznbB2b9inXtu3PXGee/QPxXZSiWuT1ZGxD
ypxtV+7gfCbuL10Dl7lvf74Wa3yJ6eH5wzgnrDouookHea1v5rZe2RQTiiqD
25weyjyff9vON/su/965rH0cTL99qX4V5ZTnnrXVWRd7dJhPQDenwMgn7uU9
V4C4BpPz9drQV++uI1VTyftX3Wu99q1wweecqS2q46UbzDcdVDfL2Lpq3cPw
uuEc1fzguHMUQG/xjrl0Pqo+G/vmZWmZO9JjXKb3Okie5Yh5tovKW8R1S1lG
n7yIa+jE1PcWsem0eTAfP127kJ4HV8k+Rsk8Jlt/7vTnj2rrcc+U8zhly/Ot
9p6eOjbd2OvBMeYVG5v27Z/YxisX4vwD45zR4r8JsfD2705B29BdP3Rx9unf
z9eUdp6QdaEiYtOx54vmehR1j3Ebm6lO/dqS6znCXa9LnvVhvD/pqmyva4hP
WTa4HwS1Ad39LcV9L+GxDXnO2Sw2naBcqdqf7Xzw7Xct1t12bUMeeUtV7tB8
puwvXQOnddmaLp6yWN+rG/PXxpPktbdGpjiZab+/3fptD09i3KaNw8ixK8/Y
dFQZzLHpMb5mjiWp6sG1rM0wXvJtEZt6UM23qyzn17Bvc51Nc2Rb13/TzB0h
59k57iWt4+JEPI8tfSbjfABj37BY/q1qLoRy3LTzvlUu9pwb8/XdjVF+ULWd
1Ze3WAsxpG7a8s8x4UW71f27Z91wjsqOPEcBTGppTZxCiGusPhvXdNfFXS3v
zhvGKLdrJhZi/7sbV+lx1mrLEftsF5i3mOuWvpDueTnNz1jrxynX7WwUm06Y
B+vxM7TvunvmE5/X5fignv1d7j4WID7nFvK4J59y2gjP1Mb547Xb3yA23e9Z
WQ/LatgyNu3fP9G3azm+o4lxDueeeo1A122orx/a+cKnOtJcexPMNx1zvmiv
R8H3GMexmcakqiv3a6xXfZjus/pS7HYNcSvLVn+r9G0Djb49JbnvpTq2PvGA
feab9juHN2x/1vPBr981voszf3fMp2mMgDZzm5U7PJ+J+ku4eWNsTRv/+XGL
EV0WSwx04Bz3Gu5nIXM5Ldcq34DhXrv5voFgnKMAAODKBfRPfNeBvgg31BfS
r/c5fkG3phmQHvEAAHmY53XVx3/G75jHXl8S41hX8XuOfb9aNXeek9NqrfLk
tH29HfYNBOIcBQAA1y6kf0Js+pKN8zqYjrluLm8gNeIBAHIxv3/fvbsvxZ7r
Ye4Dp/kbLkT9OcznaxmP2X136vudujnwu9d3VuMb+mu699+1p7n9Q+JlTjvo
83xS9PU23zcQjnMUAABcnUT9E2Xf52LdWl9onnO4m6tAMS/JtM7e1dcFDkU8
AEBuhjiQca7pJ3uMKG/zvCT/eMxPsp4L7Hzt7uZNGv6OPcz9Hj5PgDyfXTqr
NTaE/s3W+wb8cY7yDAIAwBVL1D9R9n3S53YXN9kXOpXG9cyM83IDiRAPAJAl
xdpw4/psL7r15C7Jz7xW3L1Hmbr54MtSSP3a6dMau8Z5549VV+Uy75XjWiDA
EThHOUcBALhqafon6r7PZbrZvtAwPlqOUZvXNAMAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAALhOf//+JZFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUikq04AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAACB3v83760fz+PzV1EdnRem7efzzb3P/5615+Tk6LwiXup3R
bgEA1+rUlHd3zd1def6vXIx5KpoqzxvvdanP9V209d2noqwy7e+4CG07dXOq
yqaMKnvO7TZF+a4xL0ejLtDK+drh65rKYqMraw51kEMeUrq28uBwnx/NP3/+
7dLD6+/RuVHIJcZXN3UtpiPzYpNhXlO3M9qtowzbgtYl5RUAtkRs+raNdS2k
Mp+W4C+w7ZzKOTYf3OgybrdJyneFeTkadYFOxtcOb9dUFhti0/u5tvJcs9/m
5amPnd3/+Wjek303te/m8SmHGJqOLsY315kqPTy9NY+v38n+3l1XxfIZIavn
xaVTKT3PFDF/90/VjlO3M9qti9tttwCwoyGWkS6OcVBs2lgOnkEWkh/z9ba7
438VdR3adsax4zFtLud2ayjflu3LNy83h7pY2b095iDna4cC9+/BwbHpmzoO
11aeQBdxfVzGoB4/DV/9+Woe/hwVm85dWIxvTPdPaepzjPG171SeTqdzqneL
m53KojvnS8cHlLo+9XmsyqZIGJumHfug3R7bbgFgR8Smb8+GzyLTvftqKvrI
tnOh7fYinnXz4tvvhIebbI8Xdu3g/j0gNr2faytPoIu4PvYxqPunty5ed//8
rf1m/frWxbAenojprdljfOt46W9Tf85x0hRzPhz5nDD3tYxfWuetrpLFpmnH
vmi3x7ZbANgRsenbs+GzyPgeUd7POT6ITXu7iGfdvAT3O2F3k+3xwq4d3L8H
xKb3c23lCXQR18chpvenXa/NFKsbvvf8NX3/tmN6spAY32CYk9gUT3WV8xiW
uu1nqa4JKWPTtGNPtFubbdstAOwn/bX2mNi0uRw8g4i2vL8Sm76WfYfLuf92
qbT9TljdZnu8rGsH9+/RsbHp2zoO11aeMJdxfZxjeu9DrEk5DnKYB+Hxc4xl
aWJ6P9/Ny/PbNKay297zV/O+mmvXtAbbmCfxM933h39/+uriQ/W5DA9P4ry4
wr6HvInzERjnAHYuiyl/YTG+dmyvOe6nqqNc21w9jBHQxPESx6bj2rFrO/vq
5pG2tyXa7RLtFgB2J6yZtUryNaw+NdX52lcI3+nmW1Je6Ayx6fEaqXwW6K+v
i30UDnMWO5VDylM9zsk6fq+0PJsE5k3c95CXLsbks++Quhf3Nf6uHZDpesyH
fc6fn/d//r2xuNpty+1AXZeVtjItZTLlxXSf1jyP9rF18bPQtmN77q37ecCk
bS2rIbbdRu7XWOeK8vlcU5zPqcC8LHblcw7lxtLvXDHURch5vfi51G5WSXHe
OJ23ntdX1+N5WHs01uL21z/xd6brj2udu7abpPeNhPfvqHtoFX/NDeo/pYhN
e7S1rPpR25xj2v1EnyPmPl5RCMdaPkc2qzOHdrtlfzA5IaYnxctE78/Sd1Yx
vd/zd+b42WpeWlUse4xtSftTx7dsMb52vKx6/+3223jlgzJf6ti4d1mC50aY
87X4fIih6v8GMHwu151TjK9en0uleN9uP2/bZvsd4Ryuh7ZfSN9t59+tzp+1
51OxfC45Ldq3kMTrTerYdFQ7jmhnyrZEu12g3QLA/pz6pbX+2ic+oyw3rIlN
j/9+t35vvZ4/UyXbe+4+z1TVap3dub+ti2sF503c9/meUhriOuvtRNR9+ywk
lbO7l7rU1RS7VX3HMBbeJTZtqctCWZmWMpnq3LBOn/r3qrYb2nZMz70nx7YQ
0W519eKzX2OdR8Smvc6pwLz0Owo4h2wy63euaOoi9Ly25UXbFh3PW6+24Hk8
D2uPGrtd/4Tfaf5G4Vxe13aT/L5xl+D+HXMPLbtzMu6aG9N/ioxN+7a1rPpR
251jyv3EniMubaYtixhj36zOPNrtlv3B5JbjGMe5eJVxtC5WrI9N9/P9nv/9
Rxiv2o7hfNLPS9vGCpfxrbCY4Tw+9Hu6/9RD7Hs53vR3ytf4u3W+QsoSt6ac
W93Mxvi9/DtrjG/8u9fib2n9v/W/qZtq0Zcd2qJ4jq2uW0JS3Wst41bSxqZj
27F/OzO3JdqtiHYLAMcxz8EwXEe7cRrLeMJ4fXWL79WG74+f9euALcIpp/Ga
6xI7MZVjeY1fjPkQ+v/b5M287/k+tR5fHF734+fqsS2muho/u1uMixnG7jiM
WdJvW7gnL8b9nOu1mu/LoWXS5WP9CH43/51A/nC8hy/+PbTt6OOlYj2IY9j6
mKcqLu67b5WI/SrrXP9c73RNcT6nYvIScg4Z5NjvdKyLqPNayMNircZada2X
82E6br5tIex47t8eVfa9/tmvP27ldW032903FHXge/+OuYemuOYG7T8mNh3a
1nLpR8WeY777iTtHTPVSy/HfbvxyvX2debTbLfuD6Ujv2A/jGhexoyFW1sea
LHN6qJjmpZXGWY6xq3Vcyx7je/xUx+pUY7MX+VJ95l2W8Bhfu35fm3dt/lb7
Us+L0DLG+HSxNNW86GKfvf37f9dO+/a+HgNl7kuNedLG8DaITYe345B21hjm
sqDdytuk3QLAMYLnBx773KsL6TpeIfZvddvRdnNtnzuVw9w3n67tmrFEcXmb
n3/U35ufI527+ta6Nx9Pl2eR0McO7banZzRNLF/7uW88oKc+pkNdn/+tz+dy
X+Nv1GOrPNuO7rnXVg/KbfjuW7WpdPtdfsczNu19TsXlRUt7Dmnk2u9cF8wY
mw46r011pV1Hy+G4Jbr22/K4f3s05G+n65/t+uNaXtd2s9l9o/803XVw3qH1
Hloq5r4I2lfQ/iNi08FtLZd+VNw55r+fuHPE3GbEvxMoruG6+ceS5sHcbrfs
D6Yjx4t+V2vEdfMgTHEwl9j0b/P++tXNVSDOoauLpU1xvad+ngD1XLWWuRGU
cxzMYzhNcw+bY3yuZQmbt7cW5hJeb1MTyzPkWx/j0/+9u/+N7lw9n2elpY9k
muvPOH5qykD62HRwOw5rZ/p4Me3WJd+3224BYD/uselaePdcHAciX++W12hb
bGWKW1uSLX9uz1Sa5zrNtT9N3uzPlPbnXd+6Nz+/usRq5LG1rnTbtrcz3Zwv
AXHHlup+PPxbt33Fs996rmmH/Wv7DeYYodszd+i+VV9NuF/Ld5zGYTmfU3F5
mbmeQ6btZ9jv1OZV8zeRkPPaITbtHmMTfxpzfXU/nvu3R31Zd7v+2cbPu5bX
td1sdN8wlWW9b9O5luge6nHNTbt/93YQ3tZy6UfFnWOx+0mdX2OdauIGyevM
0G637A+ms44jLccu97GrOUZmiE238w0YxlrqY2nCOFFd7C8wxqebQ6DPryHG
512WiDXlGn0sUpV/U5l0MT7ftebGMSZVZV8HwOk8NF1zNolNh7bjPGLTtFvz
v+tcXrsFgP1Yn2Pk9W7kZIpNL95nVI3hkd+B941PuJYjpN+eKm8Rsenguo+I
TTfNcu2h9nvyO8mm0iq37TY2XD1GJzQ2M78TO/5uEUcc7terZ7tksQrV73zH
yKeKkyTer+U7TvO6JI1TWOYN9TqH1rLud663qK2L8PNabD/CFXJ6t1zVrmzH
LfD6GnA892+PpvrTfyvt9c98/fGpc9d2k/6+4VgHxrVvE99DfWPTyfbv2g5i
2lou/ai4cyxuP+nz6/8e+AZ1FhqbbuLO63RUYxyFeXk/P9SfaWJ6Y3z58fWr
m/O2bn9nm4NgiLXlE5sOKUtcjM8658K0v/V44EV5leeEaY4wlbHPXjSl/WUS
p3PU+D7MRrHpmHZ8mbFp2u3ltVsA2I/7/ILtdbTq+qRdt9QakxvT+Xpd6cbW
reOH25Yj5JkqNm+hsemYuo+LTQ+5Wq31XtjGgGq3fURsZj1HRz/X9LzOZyWu
TRc6/pPYdEBsOk2s1f6dkHNIt+1M+52e2ww9r40xNmUdusamQ9qC3/Hcvz3K
cotNh9zTXNtNyvuGqSyLHzv0RRLdQ71i0yn3f+mx6b3Osdj9pM9veGw6YZ1F
xKbHPAXdN5JRv3/fzX/w56N5fJbjWeqYnjjf7irvxti0sP9P01wF+8X4wsqy
VYxvPBbjdsX1/BTlVZ0TvjE0n2ux4/tpxq7WZrFp/3Z8ybFp2u0ltlsA2I+p
XyrGRlafOj4P9pvVX0OD57v2KEdovz1N3tzfbV+MVYuq+xSxaYHH2nHZzOnR
71SI7fXbEfcvzjmtnmvaYf/M6RE0p0f0HBUO3wk7hyS59zvXG3U/X0LO66IQ
YtJtvE23TlnYdc+Y3cDjuX97VPwqszk9ou5pru0mwX1j+DToOrjJPdTj/E67
/8uf0+P4c8xtP6nzG7J+VvI6i45Ni3kOXEs4imZu2CHmtI6PqWN647v9yrlp
X3Xz0q5jcPp5dveL8YWVJSbGN3/HlM/us8V6for8qc4JzzVA9H32NeO86dP7
aZbxBxvGpn3b8SXHpmm3l9huAWA/oeug6OeR1jz3WNYScx+X6F+O4H57krxZ
9q15bz+u7iNi03Wtvn853n+3WwsxZKyfME+Ham0h4d9UayM67d8zxjAdO681
CRPGSVLs1/Idp/krfcchB+Ql7BzS5DfXfud6q+r6ijmvxbUdY/Oh2rdjGUOP
5/7tUZn5na9/mt/5lte13Wx13zCVRd6HJr6X9B4a8PfANPv3aAebr4W4dT9q
o3PMdT+J8xsSm05eZ6Gx6cjzOh1NTM8au1PHpu+fhdjXz++0Xpo5LiZuyzeW
t12ML6wsPjG+325NuXF+YP18JvN8CI/P+nkRuvJ6jz+tz01OnCNt/Nu9T392
/O6pOQk/kt9Pa98PUG5Tmb/T9I6D26mQph1fQ2yadmuzZbsFgHzNz0jtHHLD
vw1zyU3rsYjv7tXt+l7i2DnzWoiLTyzzPazWW6nb67rLu/HmcoT321PkTXqv
VzNfq9zHj6t78zOdvq7GWK5c1hTj35Z1eRLu1XU1z2eoX/84bG6Vee7fYt0m
p5hbpZlr2mH/wePfhnqul+2hLMQ+7kbvl8fu1/Id87noe07Fx6b9ziFJ7v1O
7XbFuog8r4P6ti7Hza8thB7P/dujvazbX/90v/Mpr2u7ib9vbHH/3uQeGhCb
TrN/n3YQ2tZy6UelOcfC95M2v0Gx6dR1Zmi3W/YH09HF9Jou/vT+qRu/LMWZ
hDmj5fTw/OE3zlMZ59tx3t6AsujXc5z/3ZS6+YEd5k7QzZ8wlVd5TghrP4vv
mnTzicl/a/f4e7n4d5R2W6XqPtFvvx3Don2mU52r4ppKTv2jRO34gmPTtNsM
2i0A5KwW4qPyPVb12fhcU5aa651pflbdmD7DXKau11RTOWKeN6PzJsamddtQ
1FVU3Vue6bR11T/z6PNqj7m5re2mK5dq63Gx6Xm8sOX5T/uclTo23djrQY4N
JYlNJ9xvSPnEPHqdUxF5CTqHVpWWd79zvWHlHKqpzmt1Krq5R0+LLLpeizza
Qujx3L096sq65/VPvLaF3m9d2018+9rk/r3FPdTnmhu0f91xMxxPz33r25rm
d7v3o2LOMZ/9pDhH7PkNi00nrjPjsdmuP5iOPqanpovpNV1s7FGIZz08fXRr
sa3XRWus6yOu5/bYc005z7JMZZpjg3O8zhzju39q16z77terM5rXuTPFAvXn
hNzmimW/S/q901jlaQyQeg6yaX/y32DWmVaOm57PUZfzIVU7vuDY9PAZ7dZi
03YLAJmrpTVOCmGM3uqzcY1uYb6ExcZMsenGOLamXTOxEPvixXKccXg5Yp83
Y/Im1kd//yos9y99eVzr3u3ZVXfM6yHuZrvPKktrnbtQroO+XPp7a1xsWnzu
Mo4T025/g9h0v2dlPXjF93xj06n26/Id0zVlzIfTORUfJ/c7h1Qy7neuN6wf
zx5xXi/+xuMUq/Ab5+l8fQ09nru2R0tZ97r+Ce/lrNuke527tpuY9tVvYIP7
d+p7aMDfA73bq+64GY+ncueebU2X5737UQnOMdfrSZJzZKPYdMI8WI/NRv1B
3BrD3wQExnMiV4ZzdbnOOi7PbbZbAMAtin3OAoDjWGPu9fxuyG7TjwIAgGwY
x9GK37uqGF/f/7mosmDhNtstAOA2EZsGcKlc5tCup/WAuMYBAHBb6s9hrmDL
2NPuu1OM79TNbV5n3W+o+zyeFDG+ae71Pee3QUo32W4BADeM2DSASyXNt62Y
J2Ra242+LwAAN2Kep/cfh/l6R+s5wvKN7a7W2hD6Of1cHvKceMjfbbdbAMAt
IzYN4IKdSuO6auO82Ln20QEAQGI/8/p0908fzcuneU6EUTuWsyxLIeUbN6ur
cplXxfoguDC0WwDAzSI2DeDCDeOj5Ri109pqAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAONzfv39JJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQi
kUgkEumqEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAHCMujlVZVOW1fm/rtCpbO7u7pq74kLLV5+asrjry3BO
xbUeJwAAAGSmbupaTEfnx+SS8goAAIDJGLtt457VFXbiLjo2fWrKuzku3aXy
dHSmAAAArsxv8/760Tw8/dv886dP909vzePr9/79x8+Pbv8Pr7/KfL4IeZTT
Q+I811Wx7IfelU2uPdFTKfWZL7LvDwAArtYQn7zo2OtmZRjH5RbNJVeP1iXH
pqe/G5yfAy4u8wAAAJfgu3nUxHr7GPVH8/KzY3YiYtNint8TZGWMTbfv7Z1O
p3Oqd+tPn8qiez4pHTvBdX3q81iVTXGpfX8AAHC9iE3frguOTU/PA5kcc99n
BAAAgLzNsd4univGoH++m5fnt/6z5+/9suQYm378XH9Wf341D+MYauXv/RzZ
F537ncYvrfNWV8SmAQBAfq4hrnsNZTjCBcemx3cTcznmwc8IAAAAOfrpY7n3
f/TjjOvPfef1qF/fAmPTgyG2nSKents4CVHd9jlV730SmwYAABnKuV/l6hrK
cIgL7p/mFpu20T4jAAAA5MghNq3327w/v03jlPv5nj+al0/deOV+7pD7p6+u
T1p/fky/7eLIQ0xZPUfH19CPDYtNj/Fufby63+79n7fF/CV5Pn/Uw3gJTf/+
gvv+AABgI/WpqUpxHY2iKcqTpq/Q9zUKYR2LoiibSjuHwLBW3ND36GNjwppx
wjp/q2Tsryi2W4i/Lc3xt6HMi3K087Qpf5OoDF71rNj/KqYo56sa5qV2rAN1
xaQ9vsZtF01Znctv7Z+q87TOkk9eIsuuPea5rj9jeUYAAADI0hzrfXj2GB/9
Y56j+kEZA55j0+9DrPgfcf6N6Nj07yLevfjcFoMfP5/203OLTderZ6X2uade
fN4+p7TfEZ436uHZopC+284bXZ0/a/vNxbLveyrltRkVfXFi0wAAQDT2DZRx
VSnOVo8xUnUqlPG/OV54ktaR7vpQ0bHpchmPldI6S7W+z6SNLSYog0896/av
jU2XXd9QnQePMbJbHN9p24bym463JU/LLDnmJUXZo2PTmT0jAAAA5Eocv/zn
rXl8tcWodXNU/zb164dhvudlPPtBs5/3Z9N80W5rIap+O25XNd5aN4+INTZd
D2uqL8Zb9P/W/6ZuqkLRlxXHeEz9TkV/WdWfnPr9mucQYtMAAEAwzklwtxi/
O4wfXfQ1hH7LYsxqfe5ezH2Xdb9o2YcpKvU4Yf+5EaTtivlvxycXuljhUI6u
DGLsdP7NFmVwr2dTWTWxaU0dlNpjorLl8dVtWxrbvOqfjr/r1/ZbjBE5jX1e
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
dotNz/Uwb7v+Wc/Pva7H324txEehTOr9uNTNsF/vcdP1+Volzk/k8v7RSH7v
5NSchB/J74a07ywpt0lsGgCAA4zvg0rrMSnHbwnzOnbzYk5f7p4Zx3kz9Wsx
m58D5+fSedu1ce5N6b1+If9tf2Oax1N6EJvWTRLfm67bNYTG2GJ4bFpfBp96
Vm45sO7DYtNJ6yYgNu2+f9d63bOdD/upl+2xbN+5PsnfVcdc/erfdu7ojs9G
53PMHC6nOV6X9hwOP/7L77fPTNK787WQz6Ja1OPJctzWcjgmoe3Jti/Pet1y
vulVllX16ptf+XdlU5a652mf9nia5qywxx93iE1v2Q8IPpdSta2typ5q3HQG
MRvgMBHjfYV4qyrd68Y9D2OCdXNbjPts49umdRaVMd5h7LF2bUbl/txi06pt
q9ZitOXZZc4Pc91oYtPCtbQQ33/r1hHRrCfs9ge4+TrWbkuaH0t8r6ld70E7
DxKxaQAADiA9862S9MwjPjsqUvH/t3c3x23rjBqAvcjXlFzBaURZuBRvlCbu
TAqI3IBn0kB22sWLrF0BryiJEn8AECApW7afZwYz51gUCYJURL4CgeC1Q+Z9
YGjdyeuC/vihgbIK3LMl9mG1XkeuR+buQ2E75657tO0L+6Nfo22Kxlgo3X5u
u77FeZ7xvlbeFGyzSe0fed95udS8i1f4PE/sNx2txyKf4dLjXzjPYmduvYLj
FvLuxyRSh5zzaWxbRe36dtl0/PNYPt9mpw3qEu6kmn8+ttc1evzeIpuurnsd
MPWztMi5da19L/kevvHMBt5N5jjJ53kR+315X6unuk/yQzuvrfPX1DjUsXGf
Q9v9W/14/NXJhA/rr/tSJ/bpqfee+37f7kB9suZ23LdDO4+vxx15Om0zlU2f
6zw6d2Re28Tndu1/D666/+b13p/1KMn28qzdejNc13l7/d8wh5WWTQPAO9md
7nvGrhFOSx++39v3Z6vk93zBfeCuNyfUKtV3p5019OuUqn9oO+vDXGqX/mwT
s+mRfShr5+DKC9u+MJsO1n9m20zIPcq2n9+u1z3P0+/rvi2dF5fuf/h9zXk3
PgfZop/nKdl08/tNq+/h8p/hCce/rk8771p1n8/oLH3qG39ZtmnDkeMW2/a7
HZOmChPPp4y5KPPa9S2z6VS9y86D7rbS99N552M7cx37DfONsulj7a92HTD9
szT33Mp17e/hG85s4EtpsuDCsaq/hLy2iWfTN0w2DQAUmXt/CQBLG8nBp6xx
7T4Z4C014zaH5xT82nLbRjYNAHx+smkAbsvy9+LH77oPdW8P8IHtfj9Hxgah
pG0u34fbw7wVyWmE3t3uWMetbBoAKCGbBuB21GP1rpbsM32eH3G5PtgAhFzG
UP5f7jjTX8a0tjnPs3out/tddp5n+zwmlGwaAMghmwbgvQ3n5c0aAzhnzevj
GMCGAAa4stM8isc5AVNzEn5BE9vmMH/Aet0qt5v37jbrbl0DY/MDAAzJpgF4
Z83YlOaSAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAG7cv3//FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
PnUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAN7C3+r7f/9XffvvV/Xj5b3r8lHF2vC1evr5
XH1//FPt3qtqAMAXsq3Wd3fV3d16/1+8vab9V9XGxd+N21Xbzbparzeu0z+L
7Xr/2dt//lb9Y+pYA8Btk03PF2nD38/V//Z/r8v9z9d3q93ntat2u3Z57/qk
fKS6AvBxyabfl2z6w2hyzH1ZOVifQyybdqwBYILX6sfD/51zzXb59vCr+v7z
b7VbLEdeMJs+ZbHL5LBv2QZzxdpw//eHd8r9Fz0WueLH7FCX5rgttLXdZnW+
zry78fvw7fquW9dBfw4AvqRTZrJcXiKbPli8XXPX/cbZ9DX389PbH6uV3xE+
lWi/6Rs+1j7DANysdMa3bF/cj5dNL98Gc91g3/MbzKYvvy08V08LbK3Jplfr
TbXdbvdl92Z573a9Olzfrrd5W9zttsc6btbVSjYNQEM2fR2yafh6otn0DftE
n+HS+yMAbt0l4/v+u/v33UvdF/fXgtns7WfT12+DuWTTR7Fjdnxt9/tPdb/g
MTtn0+9wLXe59kouNKzbbiObBuBCNn0dsmn4emTT72ry/REANyqV8R3tfh6z
2fl56HK5alOn62bTw+29fyZ8e9n0ssci1/gxazLzb49/Z2/tPbPpMbv6uit0
XyqbBqBl+e8y2XTtmtcI6XW/bTZ9y9dC8OY+4HX2V/oMR++PALhRGRlfa5lw
zvdaPT3+OvdTPY73+1w9DbLTsVw1Yz2tOf+G4zf86V0b5NZrRhu8HPvnfvsv
PHZEPLc9tcWpzrv9ft0/dMeiCLdRYrzpsbb9OdzGsC3qffpb/ei32+Of4bJX
ORaX7Z/Xtd+n+8f+2NHTsunzbwzRvPq43n473ua13O7UZyByXfwBr5kBuILW
3FyD0v+O2G2rzf67ZdVa5jCeVfCLJJFNN99BwWzg+P3V2cZqHdlGZJuneh/y
h1V7f9bpLGLK/rW31byv7qyX266nbV5e329///7k7matu9f+u2ac24XbouT8
uXabd1c8/Tw6n5/h31Xi1339+m0y23zsd4T+vjTnyK7arEKf06n1j22v5DPY
rKLkuLa2uxl+ZsPvKVw2sD+baGXmnGerar3ZH5vodXbsWE89d0616P9bNyiJ
HLboM1zalrdm5P4IgBuVk8tWl5yvnzm+HDPRWEbZXWciP81dT24eWlSvGW0w
O5t+PsxhmFfPVBumsum/mds45sfR9u3v4zWOxcufTn4dHzt6bEyP5/N6QuuP
Ha/z673zPC+b3g2uG+tr9F3n9fo6vl6mdf24O12brnrL1uNGb/av1deHq+69
x3bdn5sxcD0tmwaglpVL7OLfLdEMLJZNN3+/Gz5vvbu8FirJ57Pb695/L64T
Oc1wPTP2b99G296cyIfrgZx2PWeIoWUS/c0Ls+nNYM7mVF5V2BaTs+krtPl5
1TPPo9nZ9PpwfZbf5olsOnWOxNp5TjY9+zM45bie2iD7M1uw7Mj+rII7lHue
TTg2o9l06bmTuO7PeO9pBXn1n9SWY27s/giAG5WZywYzvUsf0++/X7tZ3u/Q
8rH8tHQ9VfX0mBpLuHR9M9pgZjZ96Zf8t5PlnvtoD9Zbmk23+nvXfbF/X+px
7KsdOJ6H/syt+rbqE2rvJY9Fs65vnX7Spz7Xnb7O0+evbLYROtax4zWaTTd9
lTr9Co5/O77n1O+lf93e7qcxuNccuaZK9klrvS6bBqCqv3IC2ctZ0z+z7pfY
zQCb769oTtfJonaJ5ZvXjvNXda4JtumsbbjNS1bS6Z+86n3PLrJ/zevhvs6p
dm1eu+v0kz71S8zIS9LHLN0W67uR41DUFmN1CblWmy9wHs3NpovbPJZXtq4P
e32Cd8FrxLn1X+IzOOW4dvez3Qf3mFuG/w0pXfay6H7fNpf2m3eeFR6bsWy6
9NxpXe+vu5UoHlMp6zuguC0TbvH+CIAblZnLhrLPU7/ZsTEVLq9H8tPi9Yzk
ocXrm9EGc/tNHzLb0LZidSrMppu+3rF+wrkSYzcveSxSuXHXeDb97WGYh6f3
JTyeRy3d/ySSAYfmG2mWra+l6v4Ah+vS47XWsG9Z+tqqqVM0e5ZNA9BSni2e
3xjJAYbZSDuLja0nGsmOvd7ZZmwOrEvWkd1VbnT/0m2Wk01P7baXm02HXj9f
J5RsPNoWM86fou1ktPkS59EC2fQ6MMZBvM0jeeW5P2skX4zNtze1/ot8BhNi
x3VsP6+1bPT1/POs+NhkZNNF507iM1k6t2HyMzy5LSNu9f4IgBtVmssO+7jm
910N56fl60nnoeXrm94GS2TTsTkNw2Mjl2XT6T7NKfX41H+q73V/5c4Y1f1x
pBc+FudxU7p9vEP1Sx2zXWvM6tDY18EMOjKex2F9o/cow+u043vC9yD1Nelm
PXLNlJz/O9Uv7VwB2TQAZ/nZ4q71zHSrj1o0gzl+B45lAufceqSk6zc+/994
Jlu6f+n+d1l5z8TxWvOy6Uj9ktcRjdy2mJtNL9fmi5xHs7Pp0jYPv2+0TRfO
ppf5DHa2lHVcS86dZZeNjS+Uf54VH5vRbLrw3MnIpnN/f8r5Ha28LVPL3uD9
EQA3aup4FnljKoxn01PWk8pDp6zv/cb0uG42nZu5t/cxPTZ1WTY97di2x4o+
vNYfY6Rg32J1Cx2X+LGKX+OXzpF4vO6rx4UcmZ+oGrlGzHleTTYNQMto9tCf
S69fUtl0ZzzTUF7Wf3b7HbLpyfs3I5uues//3zVzzi3Qz3FONl3cFhOz6cXb
fKHz6Cay6Yw+/otm00t9BqvC41ryLMPyy4afXcg/z4qPzdLZdKcurVbdXsbC
zu3nHv8Mz2nLoZu+PwLgRk2dBzA+/kFcPD8tW894Hlq2vnecC/GmsunLGNiH
sUZ+/jlkwruXyL6fLHssLu+tx6Nu5+T3j+1tFx6zwfgdzVyU/fM5chyD11il
47w1c6DU83uPXTClr1+zntOVTQPQkj92cf09tTnkp4cIdTSDaWXSm1g/vss4
t/Myg6nZ9Jz9m5dNn2p1yJLaed5qrH/g6Lrn5qQlbTElm75Gmy90Hn3pbHqp
z2DucZVNZ21z6m9JBdf5b5NN3/j9EQA3Kifjew3OhVc+XsRy407kjCORv77p
bXDNbDq8H9cb06OdhQ++7idl03PGFGkJzsU4N5s+1u3SXqf2CyxXC17jl2a/
Wc/W5iybed0umwagJZUttu/pB69mZpzH1ca/o5YZr3jas/jz9m+JbLplZM7B
/HVPy7qmtUX5fl6rzRc5j24im36/MT3mtN2U42pMj4xt5nz2VqtWJl1nueH5
WWPeZEyPW78/AuBGjWd858xy9jx7y83XlzP/Xv76ZrRBMmO+9EMuzqbPmXfu
9sJ/v9R7vC1S8xCe11OYTRcfi5fA3IXt9Zyz4xm/J5y3dWzjw2sjczYGr/EL
x3hr1pGzeLJfwsj9yGA52TQAVV4uEfreiY8jHckqRubAyu9PF9yLdL4TeaZ7
3v7NyKbr/qThN2VdQ1wjm57WFuW55tXa/OrnUWqevGWz6dF52yZl+In6L9B2
U47r+e8Z2y1Zdv5ciBnPX0SOzW7zRtl0e57Amd5kLsRbvz8C4EbFMr7Xw3xy
nTEVEuMJD+aue3mtnh7rcSFy+vyWrqedldZjEZ/+9jLsU5u3voXaoNXfuB6P
ojNmciSbPo+f0apj+73RsSgKM+tzW7x0t/P94dd5n5uM+Vt77Iz98s2cgrFs
erlj0Yyz0V+utN9097jF+6ZfxvH4/pjOz8v7Te/210/rwHObOddL/WfhttW2
9ab+82r1M8LBdcqmAWi5ZC31eMenv53GPT7PkdYeZ2JXz0vV7qeXngux80ow
A2mNd9ufG3BXf2+WPNN9zHhi46/2c5F5+5fOpuPt2jyr3t/X/H7TqWM2N5su
a4uxuoQ2f602X+I8aq2j1f+3cw69QTZ9ydOO77nsSj3HYKqdptZ/ftvNO66n
7bbOm+NYN6tW3liybHd/2u1XZ8erqcfxsIrEsZl0Ds/Mphe4nk9/hqe25WAj
t31/BMCNGp+v7jj2cGRMhqK581o5ZT8vLJ2D76Wb/Q7HgZ5Wrylt0GSzw208
V0+n/ripbDpex1BWGmvDRD/sQFu1y7luieXuH4/zE4ay6eWOxTGrjh+Ddnvk
zbN4zP2Dh+3odHxi4340xuaUWbWfazyMCRe598jrFHC5tqrXtQ7dUx7XX8+v
FL2HkE0D0Lbr5ladHCT0WpNFrNeR75PUuKKxLK58Dr7welPrCNRn1v6NjM8b
bddehjUoGXlM6pjNzbqK2mKsLpl1X6zN555H7f65gfPn1HZXz6bb7wm10/56
MnY8ptV/gbZb8vxpvzfU/2OJZYPX3pnnWerYFJ/D88f0CJfVYez6bc7F/thn
eFJbDjZy2/dHANyoeMb3re5T+/PvcS68kXU8/Xyu7h967/0dGuPhkmOG+rtm
r6f20psr7+FPL8vNXd/8Ntj9fO72k276ULfHjehosuQ6bz1msvetPPU+NOZz
sg3Hxq/ubuPYXpd+zvE2fT7MhzicO3DsfVOPRXXq89zqqx1sj3Q2nX/uXn4j
SGXY8XEH+/edq+51WO/9WZd028vzyKFx5M7b6/d3GVZaNg1A1643H9+q1bds
8Nr6MMfZpf9vSTZdJbKW3WHOxFU7H1t1+0DHtbd5/A5ejXwHx/c9d/8y5o5L
tOvulMmMXSuUr3vO3GqlbTG+n3l1X7DNZ51HTfXWnSzufFxO11Bvkk1Xl/7A
g/0YuZYrr//5nfPabur5M/jMNu+9zrLx6+T882x4bJr1lp7D0z+v0d8hOiVz
LIvRz3BpWwY3crv3RwBAy/hciLyF9m8EcfFs+obJpgH4dEqyS/jgXMt9eaP5
7S5zjkIAgAHZ9C1oxmMJzpXYXk42DQA3QDbNF5Lq+84XkDMec7OMfxMBgFKy
6fe2+30aQ3ukz/Rh2XM2vT3MGZKY+ucG7I513MqmAfhsZNN8IbLpL643dnPv
JKjHCzrPQekcAQCKyabfx3AOyuRciSfDcd4yx3R7B4P5UlyrAvBpyKb5QmTT
bNfJ+QmbMZZv9b4EALhlsul38XKZR/Lbw3P1IzbPZs9hHpT1ulVu9x6hnhen
U9fAfCEA8DHJpvlCZNPUTv2j+xl1+RyFAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHx2//79UxRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRF+dQFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4Evarqu7
u7vqbrWpdu9dlzexrdb1/t6tqs3X2OEPaldtN+tqvS49L5c8vh/4XHmXz/Vr
9fTzufr++OfK23yr7QAAAABwVbJpblFzXu7LquhAyaYP3uNz/fu5+t9//3co
9z9fP/52AAAAALgu2fTXdDruZbnvW9ofp1XkOCXrLps+KPpcv1Y/Ho5Z77f/
nqunycv+rb4/1H//Vf14mVX7EW+1HQDgc9lfQ/z3ma8hPMMGAHxAsumv6eaz
6QTZ9LiJ2XRdvv9OLPryp7r/LzfHBgC4JZ88m/YMGwDwEcmmvybZdM6GPu65
MiGb/vbw65A7f3v8G11y9/PX4X7u/kE2DQAsofsbebvU1ybff/6tdovlyAtm
06d8dpls1jNsAMAXtttUK9n0l7PbrD5sNp2uu2z6oOhzfcqm/6ufzUzdE52W
e/xzXl42DQDME8+m22WZDPj2s2nPsAEAn9eu2q5Xx7zqlLetN9tqF82wTrnc
6e+77fry3vV2ZN131Wq1rjbbWCoWWPfq8t67+r3FWWC4DsMqjOWNheuJ7MNq
//fze3bbarNeFezf1DpsTmM0J7bTmmNwUNrnQL/O+/Za7Y97stqpvrrNeRZp
9+26/1rgOGXVvXnfvr1O+zHaJvEdmrmu3OPYLH5s887y6018+eA2xj7XIZds
+il1n3W6F/r+u7mvC/TVid3vvfytfjz+uvSDqvteP/4d1i1rudh2Tn9/OI59
uPv959Cn59L36jl5H7rb7/t94t5Y3yAAuIZLLtvNZF+r3UvdP/fXgvn0bWfT
nmEDAD6tcy6YKIlsertZdZbt9FfdNflduKwGOXZ73etu1tcrwbcG9y9dh+56
Etn0lPXU+7Behd9Tt1070++USDa+dB3628nJd1Pny+qU0wYl2ra13WF/514G
HFtXYTa92WS2yej+TFhX0XE85svxz2ekzSd9rkNa2XQv3217euwtk5tNt/r3
DJ/Vba0jd7nRbLru//2rKF9+iiwvmwaAa4tl0xd1HrvMd/Fy2XRTp0Wzac+w
AQCf0q7aNPlvr89mpy90LJs+54mhPrOxde+q3eay7ngWecmvO/11VyOZXLAO
q2q9r0B7S3U/4lVO5jlrPcN92PUz1EP/2t15/9bRdlmuDuntNP2U06/ddfpJ
n/rnjvxg0Ly3v9jh781vEf0Xm4y18/d4zp2q+5w2WW5dpcfxtPzhM9T93af5
LMS3Ufq5Dmnuh473aU1/nGDue+jHU5ZN15n2/07vvdTl9ZAH37f6BeUuN5ZN
n/tWtdfzcnltcA95ysTr9X3/3XrtJbafAMByxrPpzhjLwT7Fp+uF9nVA/bv2
IH8ey6Yz1tOaB3D4W3r/t/3cenmGrao8wwYAn9Y5J43kvNFxGDJyvNx1D16/
5I7hqPOSu432nT5tI7rc4PVI5jl5PXeH/DFW/2A2GGvzRetwGZd5OAZLXjad
3W99dJun9tj/7bju7vnQvCe3f3tuNh16PdUmi62r+DimqrBObqP8cx3Szaab
+57OPdHpPul4zzgtm06OnViwXE423cmYT859rvr3tKd9C97rLvq8LgAwlJNN
V5fv637++9L9bbpfuutMZ7dZ68nNpovq5Rk2z7ABwOeVzvGqjGw6Pv7B6Lo7
2WnZunMzxHMf35FyqWN420utJ6ttImMBL12HVD6ZrN/5fakxwyNC+3b62+FQ
BnLZ4VjT6X3Ly6bL22SpdZUfx7Zdtd1sDmO0dMdgD2+j/HMd0sumO/dHR4d7
ofM9UuH90Ple8rn6EciMi5cbux+K3bfE7mkzsunUuI8AwByZ2fT5Oaf29cfl
Gqb+XbrzrNrv0PKxa4XS9Vx+Uw//fl26Ps+weYYNAD6rjP7Hk7PpvL7N4T64
S2XTrf7Js/LcpdYzrH9+Nr18HSZn01VvXIi7Zg6/nJz6Mp5Fs+pjW5z+/7Tv
g30oOP9uO5uechyr4TyL/RLZRvnnOqSfTV/6GLf7SV/uI8qfIz08ozl4njXQ
tzlruYWz6c498WVbzb1jXl9uAGCazGw69D3fea4rYPB6+nf0/PWMZNPF6/MM
m2fYAOCz+irZdO7cdrFtL7WeYf3Ls+nl6jAnm27qVI+P3M5MV+vxrLM/Rsdx
rOnmfc3Yyqf/j41Z8eGz6SnH8fi+9WZz+B3g8FPASP59rWy60zdnf08QfK1k
jMPTdvrjDt4/Dp9XHV9u6Wy6OvbLiYxvGFweAFhIaTbdfa5rbByIbq6Zzm7z
15POpsvX5xk2z7ABwOf1Ucf0yMtO85cb2/ZS62mUZ9PL12F+Nt2uc2pevsh2
j4N4HOrYfk97zOnwWNPpfbvtbLq8bdu/wwzeMXUbs7Ppy5iG3x/79xBTs+mW
ep6dh9SzsKnlls+mz/eXD625f/b//f1nYI4gAGBBU8f0uLxvXjY9ZT2pbHrK
+jzD5hk2APi8zrlXJKPabaZn00vMhRgecveU3eb0PR2rw/ANybkQZ6/nvAvl
2fTSdZicTdd9doObi/VxjtSr3m5o3r/W30JzI47t261n06XHMTX3ZOzzO/1z
HRLOpttz/XTvu0rn33kN16HfDyZ3uaXvh5p7Xf1xAOAdTJ0LMXL9khTPpkvn
2RvLpsvW5xk2z7ABwCd2znmPOdVlartdtV2vIuPZ1jKy6fbYuofxiC9/r7Ox
ZrvDDLE3hkFrvr16DIlzfUcz0GEdOnP37Y77uO6G0JH9Wmo9p7dMyaYXrkMq
h71km5fjtjsOInHKlfvbL+g3XV0y581hO72Mttn/9SYy1nR63+J1n9cmgYUn
rqvsOJ7nTmyPl7JfbpP6fE7+XIfE7qHG7nty7ocu87X/6M1t0+0PnbtcbDup
v5+MZdPuewDgHeRk06/B563S8xGGpMf0KBnTOGdMj/z1eYbNM2wA8Mmd+3EO
y2q9juSkOdl01c3IgusP5cvtbDpSVrl9h6vJ88gN9q1oPdfIppetQzKHDR23
w3K9bHNQ8o7LOT8ey26n9H+O1n1mm5TUYWxdJccx8RmKfz6riZ/rkHj/nt3+
fuRpMN5gyf3QcW732LOs7edy85aLbSf195OM+6Hwtn8d+go9FfSlAgByjWfT
5zn0YuMoD65JYkbGY85eT95ciPnr8wybZ9gA4PM7zmnXzgub/pzbSN/VzGz6
uPZDntnO11b9/qLBddc5Z/+9q0OeXf77+H49dV/tdh646vbJvmz+kgUOo/Pc
9Vwpm16wDqM57K43z2Hd/7Z56ZCttjPqwuPSyltDbXDJrmPn1/i4L+G630g2
faxk/jk52J/1YT7E+Ofz9Lbiz3VI6bOnE8Y4PDyn+auX9w77weQtt3w23dzz
pkrJ/SoAkCuWTb+ergvC4z333zt89ur4u/f3YKbbv1YoXU8rLz+Mx3z628vr
xPV5hs0zbADA2yrJvQGupzvXUMDL8T7LPDwAcA3jcwfWWWc/Gz5LjFM8zEFb
mfGgb3HJeqpznhpdZkK9PMPmGTYA4K3IpoFb0NwLpvpET5sjCQDIEc+mz+MN
j37/vlZPP5+r+4feeweZ7t7vS6Y8/M25YD21l958gQ9/etcTuevzDJtn2ACA
tyWbBm5Ba26lx+G9b31/9uPxV/Q+CgCAeTzDBgC8Pdk0cCN+Pw+eyR3229JP
BwBgeZ5hAwDeg2wauCGn/tH9jPq+Px8QAAAL8gwbAAAAAADvwDNsAAAAAAC8
B8+wAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAMCH9O/fP0VRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
lE9dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADgK/p/O2VGzw==
     "], {{0, 428}, {1447, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{901.9199999999961, Automatic},
   ImageSizeRaw->{1447, 428},
   PlotRange->{{0, 1447}, {0, 428}}]], "Input",ExpressionUUID->
  "49e12fbf-5d7a-48fa-b896-2672b4c9622f"]
}], "Text",
 CellChangeTimes->{{3.7930034161414814`*^9, 3.79300341856513*^9}, {
  3.793003460363534*^9, 3.793003464934052*^9}, {3.793003558153697*^9, 
  3.7930035581596756`*^9}, {3.793343639716717*^9, 3.793343686079944*^9}, {
  3.811856052479231*^9, 
  3.8118560538317413`*^9}},ExpressionUUID->"8043a1ba-32a1-4cc0-b91e-\
711cf59e5602"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b929761a-792d-4f0c-a7fd-5b2ffdfb2c07"],

Cell[CellGroupData[{

Cell["\:53d8\:6362\:8fd0\:7b97\:7b26", "Section", "TentativeExample",
 CellChangeTimes->{3.811856284093465*^9, 
  3.811856384777226*^9},ExpressionUUID->"351d9736-40fe-4492-93ad-\
7c2533b546fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds3", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<r1\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<k1\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<k2\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<k3\>\"", "\[Rule]", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\t\t          ", 
     RowBox[{"\"\<r2\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<k1\>\"", "\[Rule]", "4"}], ",", 
        RowBox[{"\"\<k2\>\"", "\[Rule]", "5"}], ",", 
        RowBox[{"\"\<k3\>\"", "\[Rule]", "6"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\t\t\t ", 
     RowBox[{"\"\<r3\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<k1\>\"", "\[Rule]", "7"}], ",", 
        RowBox[{"\"\<k2\>\"", "\[Rule]", "8"}], ",", 
        RowBox[{"\"\<k3\>\"", "\[Rule]", "9"}]}], "|>"}]}]}], "|>"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7930037476264505`*^9, 3.793003761480631*^9}, {
  3.7930042430661182`*^9, 3.7930042504027348`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"1931ec50-bed2-459f-8e56-303793e4512c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "r1" -> Association["k1" -> 1, "k2" -> 2, "k3" -> 3], "r2" -> 
       Association["k1" -> 4, "k2" -> 5, "k3" -> 6], "r3" -> 
       Association["k1" -> 7, "k2" -> 8, "k3" -> 9]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[17]} -> 1, {All, "k1"} -> 
        1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
             TypeSystem`PackageScope`AtomShape[34], "k3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134737640567127], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[17]} -> 1, {All, "k1"} -> 
        1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
             TypeSystem`PackageScope`AtomShape[34], "k3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r1", 
                  Style[
                  "r1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r1"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r2", 
                  Style[
                  "r2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r2"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r3", 
                  Style[
                  "r3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r3"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{196., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{196., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81906911098612*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"5c6e9d59-7e6c-488d-b198-5907c1b9a6a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f8b\:5b501", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds3", "[", 
  RowBox[{
   RowBox[{"#", "^", "2"}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.793003950282242*^9, 3.793003951579445*^9}, {
  3.79300406373984*^9, 3.7930040679865875`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"0a72eb7c-a4bb-4198-bfff-541a8f174dfa"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "r1" -> Association["k1" -> 1, "k2" -> 4, "k3" -> 9], "r2" -> 
       Association["k1" -> 16, "k2" -> 25, "k3" -> 36], "r3" -> 
       Association["k1" -> 49, "k2" -> 64, "k3" -> 81]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[18]} -> 1, {All, "k1"} -> 
        1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
             TypeSystem`PackageScope`AtomShape[34], "k3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134741935534435], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[18]} -> 1, {All, "k1"} -> 
        1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
             TypeSystem`PackageScope`AtomShape[34], "k3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r1", 
                  Style[
                  "r1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r1"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r2", 
                  Style[
                  "r2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r2"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r3", 
                  Style[
                  "r3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r3"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{196., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{196., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8190691235129633`*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"2c8a58e8-3cd9-4a79-903f-baacf674116f"]
}, Open  ]],

Cell["\:5206\:89e3\:ff1a", "Text", "TentativeExample",ExpressionUUID->"2302a4d0-11fc-4874-a830-b9afc4e3b925"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds3Normal", "=", 
  RowBox[{"Normal", "[", "ds3", "]"}]}]], "Input",
 CellLabel->
  "In[202]:=",ExpressionUUID->"0abd523e-3023-43f9-ae57-4da570d2f0a3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"r1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
   ",", 
   RowBox[{"\<\"r2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}]}], 
   ",", 
   RowBox[{"\<\"r3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "7"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "8"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819069135549967*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"ed674c97-8b47-465b-89da-777819534d6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "^", "2"}], "&"}], "[", "ds3Normal", "]"}]], "Input",
 CellChangeTimes->{{3.793004081032873*^9, 3.7930040876990347`*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"3be3fa78-35f8-46bf-a9c4-dcf8302b15b6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"r1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
   ",", 
   RowBox[{"\<\"r2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "16"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "25"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "36"}]}], "\[RightAssociation]"}]}], 
   ",", 
   RowBox[{"\<\"r3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"k1\"\>", "\[Rule]", "49"}], ",", 
      RowBox[{"\<\"k2\"\>", "\[Rule]", "64"}], ",", 
      RowBox[{"\<\"k3\"\>", "\[Rule]", "81"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8190691469551687`*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"536a645a-100c-458a-8b05-dcf0f88f8560"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7930040886678696`*^9, 3.7930040912444863`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"e08d85ab-dda1-4d51-8245-277be8d4ac22"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "r1" -> Association["k1" -> 1, "k2" -> 4, "k3" -> 9], "r2" -> 
       Association["k1" -> 16, "k2" -> 25, "k3" -> 36], "r3" -> 
       Association["k1" -> 49, "k2" -> 64, "k3" -> 81]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[20]} -> 1, {All, "k1"} -> 
        1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
             TypeSystem`PackageScope`AtomShape[34], "k3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> 
     Association["ID" -> 134750525469310], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[20]} -> 1, {All, "k1"} -> 
        1, {All, "k2"} -> 1, {All, "k3"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "k1" -> TypeSystem`PackageScope`AtomShape[34], "k2" -> 
             TypeSystem`PackageScope`AtomShape[34], "k3" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"k1", "k2", "k3"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k1", 
                  Style[
                  "k1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k2", 
                  Style[
                  "k2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k2"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["k3", 
                  Style[
                  "k3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "k3"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "k3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r1", 
                  Style[
                  "r1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r1"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r1"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r2", 
                  Style[
                  "r2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r2"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r2"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r3", 
                  Style[
                  "r3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["r3"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r3"], 
                 Key["k3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{196., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{196., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819069405608465*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"0904d30e-b539-45fc-bb29-df31bb1dcef6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"92734af5-9b5b-4d3d-a5a2-bf1bc59bea44"],

Cell[CellGroupData[{

Cell["\:5408\:5e76\:8fd0\:7b97\:7b26", "Section", "TentativeExample",
 CellChangeTimes->{
  3.8118564641060266`*^9},ExpressionUUID->"dd7eaffc-6b8e-466f-979b-\
a4629a6a56d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds4", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<x\>\""}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"{", "1", "}"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<y\>\""}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "3"}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<x\>\""}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], "|>"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7933416496287284`*^9, 3.793341649860227*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"ce011945-9a51-47d4-9435-91899e796293"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["a" -> 1, "b" -> "x", "c" -> {1}], 
       Association["a" -> 2, "b" -> "y", "c" -> {2, 3}], 
       Association["a" -> 3, "b" -> "z", "c" -> {4, 5, 6}], 
       Association["a" -> 4, "b" -> "x", "c" -> {7, 8, 9, 10}]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "a"} -> 1, {All, "b"} -> 1, {All, "c"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "a" -> TypeSystem`PackageScope`AtomShape[34], "b" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "c" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"a", "b", "c"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 4], "Meta" -> 
     Association["ID" -> 134754820437639], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "a"} -> 1, {All, "b"} -> 1, {All, "c"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "a" -> TypeSystem`PackageScope`AtomShape[34], "b" -> 
            TypeSystem`PackageScope`AtomShape[28.800000000000004`], "c" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"a", "b", "c"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 4], "Path" -> {},
      "BaseIndices" -> {}, "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 
     3, "DataRowCount" -> 4, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "a"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "a"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "b"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "b"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "c"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "c"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                   Key["c"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                   Key["c"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 5, 6}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 5, 6}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                   Key["c"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 8, 9, 10}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                   Key["c"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{204., {94.488525390625, 105.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{204., {94.488525390625, 105.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8190704386850452`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"98e178f2-b0c0-4160-8be4-59562734b3d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f8b\:5b501", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds4", "[", 
  RowBox[{"All", ",", "\"\<c\>\"", ",", "Total"}], "]"}]], "Input",
 CellChangeTimes->{{3.7930046447156916`*^9, 3.7930046447186837`*^9}, {
  3.7933416549695377`*^9, 3.7933416552385063`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"e56dfd8a-b4d5-4a7d-9b85-23819321599d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {1, 5, 15, 34}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 4], "Meta" -> 
     Association["ID" -> 134759115404940], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{69., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{69., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819070444483189*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"25c52053-c88d-454d-b68c-adc810d1b887"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds4Normal", "=", 
  RowBox[{"Normal", "[", "ds4", "]"}]}]], "Input",
 CellChangeTimes->{{3.793004649035679*^9, 3.7930046548245344`*^9}, {
  3.7933416607474146`*^9, 3.79334166302914*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"e8f585cc-3516-4f71-a46e-37ffa569ffc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8190705204050903`*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"ef3b1d84-f37f-4435-b35c-724a0ac89898"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s1", "=", 
  RowBox[{"ds4Normal", "[", 
   RowBox[{"[", "All", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793004676052549*^9, 3.793004683975156*^9}, {
  3.7933416664909377`*^9, 3.793341667076294*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"eea69263-d028-4894-b976-c9557f10d8fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819070563264638*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"c8a8f8f0-583a-4b8c-9b6e-d0980be046c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", "=", 
  RowBox[{
   RowBox[{"#c", "&"}], "/@", "s1"}]}]], "Input",
 CellChangeTimes->{{3.793004658221451*^9, 3.7930046911070623`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"6a0a5c0a-6c40-40a4-a9c5-6fa4ac29c804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819070569957254*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"50dba4e0-d111-4191-bd55-560dc25bc207"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s3", "=", 
  RowBox[{"Total", "/@", "s2"}]}]], "Input",
 CellChangeTimes->{{3.7930046925957623`*^9, 3.793004702342591*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"6e9b9bd8-b4f2-4bfb-af70-62b3a2aadf08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "5", ",", "15", ",", "34"}], "}"}]], "Output",
 CellChangeTimes->{3.8190706273479137`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"07eee61a-3d2d-4765-8cfa-c11d92398e45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7930047044497523`*^9, 3.7930047069183483`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"dc16343a-407c-4b7a-bbb4-79f31b67aabd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {1, 5, 15, 34}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 4], "Meta" -> 
     Association["ID" -> 134763410372421], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{69., {78.988525390625, 90.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{69., {78.988525390625, 90.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819070629276649*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"ce0cc47c-e484-4138-8059-dbb7d6006fa0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f8b\:5b502", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds4", "[", 
  RowBox[{"Mean", ",", "\"\<c\>\"", ",", "Total"}], "]"}]], "Input",
 CellChangeTimes->{{3.793341932270672*^9, 3.793341939148542*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"a2a40618-e898-4d1c-b3e3-b94386270d8d"],

Cell[BoxData[
 FractionBox["55", "4"]], "Output",
 CellChangeTimes->{3.81907064606404*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"4125849d-4fb9-465e-bf85-c46144b6b217"]
}, Open  ]],

Cell[TextData[{
 "\:5206\:89e3\:ff1a\:ff08\:8bf7\:6ce8\:610f\:ff0c ",
 StyleBox[ButtonBox["Mean",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Mean.html"], 
    "https://reference.wolfram.com/language/ref/Mean.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Mean.html"],
  FontWeight->"Bold"],
 " \:548c ",
 StyleBox[ButtonBox["Total",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Total.html"], 
    "https://reference.wolfram.com/language/ref/Total.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Total.html"],
  FontWeight->"Bold"],
 " \:662f\:5347\:5e8f\:8fd0\:7b97\:7b26\:ff1b#c&  \:662f\:964d\:5e8f\:8fd0\
\:7b97\:7b26\:ff09\:ff1a"
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.811856441947332*^9, 3.8118564564184313`*^9}, {
  3.819060104903002*^9, 
  3.8190601051841593`*^9}},ExpressionUUID->"a96bc01e-58e4-4500-8db0-\
f4a6734c068d"],

Cell[CellGroupData[{

Cell[BoxData["ds4Normal"], "Input",
 CellChangeTimes->{{3.819070672522788*^9, 3.8190706776957493`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"8944ee19-d7d5-4b60-bfa1-46dad05dd751"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.819070673738925*^9, 3.819070678106991*^9}},
 CellLabel->
  "Out[215]=",ExpressionUUID->"3912386d-54d3-4715-ae42-300d42a22dfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "ds4Normal", "]"}]], "Input",
 CellChangeTimes->{{3.819070722789352*^9, 3.819070729750135*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"bd5ee203-3754-4294-8738-f6c10cadc202"],

Cell[BoxData[
 TemplateBox[{
  "Mean", "rectt", 
   "\"\\!\\(\\*RowBox[{\\\"Mean\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\"a\\\\\
\\\"\\\", \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"b\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"x\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"c\\\\\\\"\\\", \\\
\"\[Rule]\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]}]}], \\\"\
\[RightAssociation]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{\\\"\\\\\\\"a\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"2\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"b\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"y\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"c\\\\\\\"\\\", \\\
\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\"}], \
\\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\"a\\\\\\\"\\\", \
\\\"\[Rule]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"b\\\\\\\"\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"z\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"c\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\"}], \
\\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\"a\\\\\\\"\\\", \
\\\"\[Rule]\\\", \\\"4\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"b\\\\\\\"\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"x\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"c\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\"}], \\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}]}], \\\"}\\\"}], \
\\\"]\\\"}]\\) \:4e2d\:4f4d\:7f6e \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
\:5904\:5e94\:8be5\:662f\:77e9\:5f62\:6570\:7ec4.\"", 2, 216, 1, 
   31748408132272872021, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.819070730304595*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[216]:=",ExpressionUUID->"fdf961c2-8af2-4acf-\
9410-a624a9c622d4"],

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}],
     ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.81907073043519*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"ba28d2fd-bb11-4e9a-89ab-cb60a580cbd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{"#c", "&"}], "/@", "ds4Normal"}]}]], "Input",
 CellChangeTimes->{{3.7933419869823666`*^9, 3.7933419972083716`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"c81c352a-f33a-4099-8b70-8c69dd013438"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8190707404391537`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"ce204ce9-88d3-40a5-b980-ad6fd1369e3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", "=", 
  RowBox[{"Total", "/@", "s1"}]}]], "Input",
 CellChangeTimes->{{3.7933419996367893`*^9, 3.7933420061088486`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"7bedb15a-76fd-4955-a2dd-707b1d1a3228"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "5", ",", "15", ",", "34"}], "}"}]], "Output",
 CellChangeTimes->{3.819070755826873*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"255cc49e-18f4-4d1c-9a35-0b24404cfdce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s3", "=", 
  RowBox[{"Mean", "@", "s2"}]}]], "Input",
 CellChangeTimes->{{3.7933420118473196`*^9, 3.7933420193426723`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"067eccf1-d09d-4cf2-b0fc-d12a228d1a53"],

Cell[BoxData[
 FractionBox["55", "4"]], "Output",
 CellChangeTimes->{3.819070764652871*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"5e85beba-66a3-4137-8e4c-ffad33e67525"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f8b\:5b503", "Subsubsection", "TentativeExample"],

Cell[CellGroupData[{

Cell[BoxData["titanic"], "Input",
 CellChangeTimes->{{3.793342043112658*^9, 3.7933420450139003`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"916006cd-134b-4924-8dc5-a90131e66956"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 80, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 32, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 59, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 11, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 76, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 70, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 4, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 13, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 34, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 6, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 67, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 60, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 38, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 6, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 7, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 55, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 63, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 60, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 57, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 13, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 70, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 32, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 59, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 66, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 13, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 71, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 59, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 65, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 48, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 48, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 49, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 56, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 8, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 8, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False], 
       
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 74, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True], 
       Association[
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 63, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True], 
       Association[
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> True], 
       
       Association[
       "class" -> "3rd", "age" -> 46, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> False], 
       Association[
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "class"} -> 1, {All, "age"} -> 1, {All, "sex"} -> 
        1, {All, "survived"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "class" -> TypeSystem`PackageScope`AtomShape[27.], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[54.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Meta" -> 
     Association["ID" -> 134690395921350], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "class"} -> 1, {All, "age"} -> 1, {All, "sex"} -> 
        1, {All, "survived"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "class" -> TypeSystem`PackageScope`AtomShape[27.], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[54.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     4, "DataRowCount" -> 1309, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "class"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["age", 
                  Style[
                  "age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "age"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sex", 
                  Style[
                  "sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sex"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "survived"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1309, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1309, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{275., {354.988525390625, 366.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{275., {354.988525390625, 366.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.793342045445464*^9, 3.8190707841956463`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"daf2e9eb-9f69-4951-b38b-3b1ef766d2a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanic", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<class\>\"", "]"}], ",", "Histogram", ",", 
   "\"\<age\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.7933420816954484`*^9},
 CellLabel->
  "In[221]:=",ExpressionUUID->"385fd659-e42b-439b-b0ea-4f4e0f881706"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["1st" -> Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.623]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.623]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {10., 4.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                Style[4, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {20., 22.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 22], 
                Style[22, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {30., 52.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 52], 
                Style[52, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {40., 72.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 72], 
                Style[72, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {50., 62.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 62], 
                Style[62, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {60., 46.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 46], 
                Style[46, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {70., 21.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 21], 
                Style[21, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {80., 4.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                Style[4, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{80., 0}, {90., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[
                1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.8, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 90.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "2nd" -> 
       Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.581]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.581]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {5., 15.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 15], 
                Style[15, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{5., 0}, {10., 7.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 7], 
                Style[7, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {15., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{15., 0}, {20., 24.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 24], 
                Style[24, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {25., 43.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 43], 
                Style[43, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{25., 0}, {30., 47.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 47], 
                Style[47, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {35., 44.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 44], 
                Style[44, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{35., 0}, {40., 20.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 20], 
                Style[20, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {45., 21.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 21], 
                Style[21, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{45., 0}, {50., 10.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 10], 
                Style[10, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {55., 12.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 12], 
                Style[12, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{55., 0}, {60., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {65., 6.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 6], 
                Style[6, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{65., 0}, {70., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[1, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {75., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[
                1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.5, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 75.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "3rd" -> 
       Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.581]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.581]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {5., 33.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 33], 
                Style[33, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{5., 0}, {10., 23.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 23], 
                Style[23, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {15., 17.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 17], 
                Style[17, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{15., 0}, {20., 75.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 75], 
                Style[75, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {25., 113.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 113], 
                Style[113, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{25., 0}, {30., 89.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 89], 
                Style[89, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {35., 57.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 57], 
                Style[57, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{35., 0}, {40., 39.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 39], 
                Style[39, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {45., 27.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 27], 
                Style[27, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{45., 0}, {50., 15.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 15], 
                Style[15, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {55., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{55., 0}, {60., 2.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                Style[2, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {65., 3.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 3], 
                Style[3, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{65., 0}, {70., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[1, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {75., 2.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                Style[
                2, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.5, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 75.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Graphics], 3], "Meta" -> 
     Association["ID" -> 134767705339913], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Graphics], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1st", 
                  Style[
                  "1st", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["1st"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {10., 4.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{10., 0}, {20., 22.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 22]& , 
                    TagBoxNote -> "22"], 
                    StyleBox["22", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[22, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {30., 52.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 52]& , 
                    TagBoxNote -> "52"], 
                    StyleBox["52", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[52, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {40., 72.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 72]& , 
                    TagBoxNote -> "72"], 
                    StyleBox["72", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[72, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {50., 62.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 62]& , 
                    TagBoxNote -> "62"], 
                    StyleBox["62", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[62, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {60., 46.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 46]& , 
                    TagBoxNote -> "46"], 
                    StyleBox["46", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[46, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {70., 21.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 21]& , 
                    TagBoxNote -> "21"], 
                    StyleBox["21", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[21, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {80., 4.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{80., 0}, {90., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.8, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 90.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2nd", 
                  Style[
                  "2nd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["2nd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {5., 15.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 15]& , 
                    TagBoxNote -> "15"], 
                    StyleBox["15", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[15, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{5., 0}, {10., 7.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                    TagBoxNote -> "7"], 
                    StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                    Style[7, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{10., 0}, {15., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{15., 0}, {20., 24.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 24]& , 
                    TagBoxNote -> "24"], 
                    StyleBox["24", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[24, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {25., 43.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 43]& , 
                    TagBoxNote -> "43"], 
                    StyleBox["43", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[43, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{25., 0}, {30., 47.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 47]& , 
                    TagBoxNote -> "47"], 
                    StyleBox["47", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[47, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {35., 44.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 44]& , 
                    TagBoxNote -> "44"], 
                    StyleBox["44", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[44, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{35., 0}, {40., 20.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 20]& , 
                    TagBoxNote -> "20"], 
                    StyleBox["20", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[20, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {45., 21.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 21]& , 
                    TagBoxNote -> "21"], 
                    StyleBox["21", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[21, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{45., 0}, {50., 10.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 10]& , 
                    TagBoxNote -> "10"], 
                    StyleBox["10", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[10, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {55., 12.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 12]& , 
                    TagBoxNote -> "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[12, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{55., 0}, {60., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {65., 6.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 6]& , 
                    TagBoxNote -> "6"], 
                    StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                    Style[6, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {75., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.5, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 75.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3rd", 
                  Style[
                  "3rd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["3rd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {5., 33.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 33]& , 
                    TagBoxNote -> "33"], 
                    StyleBox["33", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[33, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5., 0}, {10., 23.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 23]& , 
                    TagBoxNote -> "23"], 
                    StyleBox["23", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[23, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{10., 0}, {15., 17.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 17]& , 
                    TagBoxNote -> "17"], 
                    StyleBox["17", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[17, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{15., 0}, {20., 75.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 75]& , 
                    TagBoxNote -> "75"], 
                    StyleBox["75", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[75, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {25., 113.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 113]& , 
                    TagBoxNote -> "113"], 
                    StyleBox["113", {}, StripOnInput -> False]], Annotation[#, 
                    Style[113, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{25., 0}, {30., 89.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 89]& , 
                    TagBoxNote -> "89"], 
                    StyleBox["89", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[89, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {35., 57.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 57]& , 
                    TagBoxNote -> "57"], 
                    StyleBox["57", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[57, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{35., 0}, {40., 39.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 39]& , 
                    TagBoxNote -> "39"], 
                    StyleBox["39", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[39, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {45., 27.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 27]& , 
                    TagBoxNote -> "27"], 
                    StyleBox["27", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[27, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{45., 0}, {50., 15.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 15]& , 
                    TagBoxNote -> "15"], 
                    StyleBox["15", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[15, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {55., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{55., 0}, {60., 2.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {65., 3.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {75., 2.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.5, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 75.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{194., {145.988525390625, 157.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{194., {145.988525390625, 157.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819070825024289*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"ffbd9cee-d481-49b9-88e9-d16d4652097f"]
}, Open  ]],

Cell["\:5206\:89e3\:ff1a", "Text", "TentativeExample",ExpressionUUID->"45ff01ef-0d71-4223-82b1-65fb796ffa41"],

Cell[TextData[{
 "GroupBy [\[OpenCurlyDoubleQuote] class\[CloseCurlyDoubleQuote]]\:548c #age& \
\:662f\:964d\:5e8f\:ff0c\:5176\:4e2d ",
 StyleBox[ButtonBox["Histogram",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Histogram.html"], 
    "https://reference.wolfram.com/language/ref/Histogram.html"},
  ButtonNote->"https://reference.wolfram.com/language/ref/Histogram.html"],
  FontWeight->"Bold"],
 " \:662f\:5347\:5e8f\:ff1a"
}], "Text", "TentativeExample",
 CellChangeTimes->{{3.811856491326475*^9, 3.811856536402944*^9}, {
  3.8190700213845987`*^9, 
  3.819070024676834*^9}},ExpressionUUID->"c1a4ac41-1491-4a73-94b0-\
b6f1483805e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"titanicNormal", "=", 
   RowBox[{"Normal", "[", "titanic", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.793342048082781*^9, 3.793342054777481*^9}, 
   3.793342112117598*^9},
 CellLabel->
  "In[222]:=",ExpressionUUID->"95edb94b-ba59-478f-bf4c-7b4691715108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{"GroupBy", "[", 
    RowBox[{"#class", "&"}], "]"}], "[", "titanicNormal", "]"}]}]], "Input",
 CellChangeTimes->{{3.7933421133036404`*^9, 3.793342131381814*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"27d683bb-57c2-4067-9f94-32f0d94d9a1e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"1st\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[LeftAssociation]", 
               RowBox[{
                RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"1st\"\>"}], ",", 
                RowBox[{"\<\"age\"\>", "\[Rule]", "29"}], ",", 
                RowBox[{"\<\"sex\"\>", "\[Rule]", "\<\"female\"\>"}], ",", 
                RowBox[{"\<\"survived\"\>", "\[Rule]", "True"}]}], 
               "\[RightAssociation]"}], ",", 
              RowBox[{"\[LeftAssociation]", 
               RowBox[{
                RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"1st\"\>"}], ",", 
                RowBox[{"\<\"age\"\>", "\[Rule]", "1"}], ",", 
                RowBox[{"\<\"sex\"\>", "\[Rule]", "\<\"male\"\>"}], ",", 
                RowBox[{"\<\"survived\"\>", "\[Rule]", "True"}]}], 
               "\[RightAssociation]"}], ",", 
              TemplateBox[{"320"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\[LeftAssociation]", 
               RowBox[{
                RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"1st\"\>"}], ",", 
                RowBox[{"\<\"age\"\>", "\[Rule]", "36"}], ",", 
                RowBox[{"\<\"sex\"\>", "\[Rule]", "\<\"female\"\>"}], ",", 
                RowBox[{"\<\"survived\"\>", "\[Rule]", "True"}]}], 
               "\[RightAssociation]"}]}], "}"}]}], ",", 
           RowBox[{"\<\"2nd\"\>", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           RowBox[{"\<\"3rd\"\>", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{51., {2., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {2., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {2., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 223, 31748408132272872021, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{51., {2., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{51., {2., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 223, 31748408132272872021, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {2., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {2., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 223, 31748408132272872021, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {2., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31748408132272872021 === $SessionID, 
   Out[223], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.819070839143195*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"8ae32e6b-c7ca-48dc-8e7c-fc2120d2df01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"#age", "&"}], ",", "s1", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[224]:=",ExpressionUUID->"126006e2-db46-4dad-a99e-42e8a1aedd2b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"1st\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "29", ",", "1", ",", "2", ",", "30", ",", "25", ",", "48", ",", "63", 
      ",", "39", ",", "53", ",", "71", ",", "47", ",", "18", ",", "24", ",", 
      "26", ",", "80", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", "50", ",", "32", ",", 
      "36", ",", "37", ",", "47", ",", "26", ",", "42", ",", "29", ",", "25", 
      ",", "25", ",", "19", ",", "35", ",", "28", ",", "45", ",", "40", ",", 
      "30", ",", "58", ",", "42", ",", "45", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "41", ",", "48", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "44", ",", "59", ",", "60", ",", 
      "41", ",", "45", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "42", ",", "53", ",", "36", ",", 
      "58", ",", "33", ",", "28", ",", "17", ",", "11", ",", "14", ",", "36", 
      ",", "36", ",", "49", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "36", ",", "76", ",", "46", ",", 
      "47", ",", "27", ",", "33", ",", "36", ",", "30", ",", "45", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "27", ",", "26", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "47", ",", "39", ",", "37", ",", 
      "64", ",", "55", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "70", ",", "36", ",", "64", ",", 
      "39", ",", "38", ",", "51", ",", "27", ",", "33", ",", "31", ",", "27", 
      ",", "31", ",", "17", ",", "53", ",", "4", ",", "54", ",", "50", ",", 
      "27", ",", "48", ",", "48", ",", "49", ",", "39", ",", "23", ",", "38", 
      ",", "54", ",", "36", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "36", ",", "30", ",", "24", ",", 
      "28", ",", "23", ",", "19", ",", "64", ",", "60", ",", "30", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "50", ",", "43", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", "60", ",", "48", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "37", ",", "35", ",", "47", ",", 
      "35", ",", "22", ",", "45", ",", "24", ",", "49", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "71", ",", "53", ",", "19", ",", 
      "38", ",", "58", ",", "23", ",", "45", ",", "46", ",", "25", ",", "25", 
      ",", "48", ",", "49", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "45", ",", "35", ",", "40", ",", 
      "27", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", "55", ",", "52", ",", 
      "42", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "55", ",", "16", ",", "44", ",", 
      "51", ",", "42", ",", "35", ",", "35", ",", "38", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "35", ",", "38", ",", "50", ",", 
      "49", ",", "46", ",", "50", ",", "33", ",", "58", ",", "41", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "42", ",", "45", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "39", ",", "49", ",", "30", ",", 
      "35", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "42", ",", "55", ",", "16", ",", 
      "51", ",", "29", ",", "21", ",", "30", ",", "58", ",", "15", ",", "30", 
      ",", "16", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "19", ",", "18", ",", "24", ",", 
      "46", ",", "54", ",", "36", ",", "28", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "65", ",", "44", ",", "33", ",", 
      "37", ",", "30", ",", "55", ",", "47", ",", "37", ",", "31", ",", "23", 
      ",", "58", ",", "19", ",", "64", ",", "39", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", "65", ",", "29", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "46", ",", "23", ",", "29", ",", 
      "22", ",", "18", ",", "17", ",", "30", ",", "52", ",", "47", ",", "56", 
      ",", "38", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "43", ",", "31", ",", "45", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "33", ",", "46", ",", "36", ",", 
      "33", ",", "55", ",", "54", ",", "33", ",", "13", ",", "18", ",", "21", 
      ",", "61", ",", "48", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "35", ",", "30", ",", "34", ",", 
      "40", ",", "35", ",", "50", ",", "39", ",", "56", ",", "28", ",", "56", 
      ",", "56", ",", "24", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "18", ",", "24", ",", "23", ",", 
      "6", ",", "45", ",", "40", ",", "57", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "32", ",", "62", ",", "54", ",", 
      "43", ",", "52", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "62", ",", "67", ",", "63", ",", 
      "61", ",", "48", ",", "18", ",", "52", ",", "39", ",", "48", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "49", ",", "17", ",", "39", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "31", ",", "40", ",", "61", ",", 
      "47", ",", "35", ",", "64", ",", "60", ",", "60", ",", "54", ",", "21", 
      ",", "55", ",", "31", ",", "57", ",", "45", ",", "50", ",", "27", ",", 
      "50", ",", "21", ",", "51", ",", "21", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "31", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "62", ",", "36"}], "}"}]}], ",", 
   RowBox[{"\<\"2nd\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "30", ",", "28", ",", "30", ",", "18", ",", "25", ",", "34", ",", "36", 
      ",", "57", ",", "18", ",", "23", ",", "36", ",", "28", ",", "51", ",", 
      "32", ",", "19", ",", "28", ",", "1", ",", "4", ",", "12", ",", "36", 
      ",", "34", ",", "19", ",", "23", ",", "26", ",", "42", ",", "27", ",", 
      "24", ",", "15", ",", "60", ",", "40", ",", "20", ",", "25", ",", "36", 
      ",", "25", ",", "42", ",", "42", ",", "1", ",", "26", ",", "22", ",", 
      "35", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "19", ",", "44", ",", "54", ",", 
      "52", ",", "37", ",", "29", ",", "25", ",", "45", ",", "29", ",", "28", 
      ",", "29", ",", "28", ",", "24", ",", "8", ",", "31", ",", "31", ",", 
      "22", ",", "30", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "21", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "8", ",", "18", ",", "48", ",", 
      "28", ",", "32", ",", "17", ",", "29", ",", "24", ",", "25", ",", "18", 
      ",", "18", ",", "34", ",", "54", ",", "8", ",", "42", ",", "34", ",", 
      "27", ",", "30", ",", "23", ",", "21", ",", "18", ",", "40", ",", "29", 
      ",", "18", ",", "36", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "38", ",", "35", ",", "38", ",", 
      "34", ",", "34", ",", "16", ",", "26", ",", "47", ",", "21", ",", "21", 
      ",", "24", ",", "24", ",", "34", ",", "30", ",", "52", ",", "30", ",", 
      "1", ",", "24", ",", "44", ",", "6", ",", "28", ",", "62", ",", "30", 
      ",", "7", ",", "43", ",", "45", ",", "24", ",", "24", ",", "49", ",", 
      "48", ",", "55", ",", "24", ",", "32", ",", "21", ",", "18", ",", "20", 
      ",", "23", ",", "36", ",", "54", ",", "50", ",", "44", ",", "29", ",", 
      "21", ",", "42", ",", "63", ",", "60", ",", "33", ",", "17", ",", "42", 
      ",", "24", ",", "47", ",", "24", ",", "22", ",", "32", ",", "23", ",", 
      "34", ",", "24", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "35", ",", "45", ",", "57", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "31", ",", "26", ",", "30", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "1", ",", "3", ",", "25", ",", "22",
       ",", "17", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "34", ",", "36", ",", "24", ",", 
      "61", ",", "50", ",", "42", ",", "57", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "1", ",", "31", ",", "24", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "30", ",", "40", ",", "32", ",", 
      "30", ",", "46", ",", "13", ",", "41", ",", "19", ",", "39", ",", "48", 
      ",", "70", ",", "27", ",", "54", ",", "39", ",", "16", ",", "62", ",", 
      "33", ",", "14", ",", "2", ",", "3", ",", "37", ",", "26", ",", "19", 
      ",", "28", ",", "20", ",", "29", ",", "39", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "23", ",", "29", ",", "28", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "50", ",", "19", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "41", ",", "21", ",", "19", ",", 
      "43", ",", "32", ",", "34", ",", "30", ",", "27", ",", "2", ",", "8", 
      ",", "33", ",", "36", ",", "34", ",", "30", ",", "28", ",", "23", ",", 
      "1", ",", "3", ",", "24", ",", "50", ",", "19", ",", "21", ",", "26", 
      ",", "25", ",", "27", ",", "25", ",", "18", ",", "20", ",", "30", ",", 
      "59", ",", "30", ",", "35", ",", "40", ",", "25", ",", "41", ",", "25", 
      ",", "19", ",", "14", ",", "50", ",", "23", ",", "28", ",", "27", ",", 
      "29", ",", "27", ",", "40", ",", "31", ",", "30", ",", "23", ",", "31", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", "12", ",", "40", ",", "33", ",", 
      "27", ",", "29", ",", "2", ",", "4", ",", "29", ",", "1", ",", "5", ",",
       "36", ",", "33", ",", "66", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "31", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "26", ",", "24"}], "}"}]}], ",", 
   RowBox[{"\<\"3rd\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "42", ",", "13", ",", "16", ",", "35", ",", "16", ",", "25", ",", "20", 
      ",", "18", ",", "30", ",", "26", ",", "40", ",", "1", ",", "18", ",", 
      "26", ",", "26", ",", "20", ",", "24", ",", "25", ",", "35", ",", "18", 
      ",", "32", ",", "19", ",", "4", ",", "6", ",", "2", ",", "17", ",", 
      "38", ",", "9", ",", "11", ",", "39", ",", "27", ",", "26", ",", "39", 
      ",", "20", ",", "26", ",", "25", ",", "18", ",", "24", ",", "35", ",", 
      "5", ",", "9", ",", "3", ",", "13", ",", "5", ",", "40", ",", "23", ",",
       "38", ",", "45", ",", "21", ",", "23", ",", "17", ",", "30", ",", "23",
       ",", "13", ",", "20", ",", "32", ",", "33", ",", "1", ",", "1", ",", 
      "5", ",", "24", ",", "18", ",", "40", ",", "26", ",", "20", ",", "18", 
      ",", "45", ",", "27", ",", "22", ",", "19", ",", "26", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "20", ",", "32", ",", "21", ",", 
      "18", ",", "26", ",", "6", ",", "9", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "40", ",", "32", ",", "21", ",", 
      "22", ",", "20", ",", "29", ",", "22", ",", "22", ",", "35", ",", "19", 
      ",", "21", ",", "19", ",", "18", ",", "21", ",", "30", ",", "18", ",", 
      "38", ",", "17", ",", "17", ",", "21", ",", "21", ",", "21", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "28", ",", "24", ",", "16", ",", 
      "37", ",", "28", ",", "24", ",", "21", ",", "32", ",", "29", ",", "26", 
      ",", "18", ",", "20", ",", "18", ",", "24", ",", "36", ",", "24", ",", 
      "31", ",", "31", ",", "22", ",", "30", ",", "71", ",", "43", ",", "35", 
      ",", "27", ",", "19", ",", "30", ",", "9", ",", "3", ",", "36", ",", 
      "59", ",", "19", ",", "17", ",", "44", ",", "17", ",", "23", ",", "45", 
      ",", "22", ",", "19", ",", "30", ",", "29", ",", "1", ",", "34", ",", 
      "28", ",", "27", ",", "25", ",", "24", ",", "22", ",", "21", ",", "17", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "37", ",", "36", ",", "30", ",", 
      "16", ",", "1", ",", "1", ",", "26", ",", "33", ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", "36", ",", "19", ",", 
      "17", ",", "42", ",", "43", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "32", ",", "19", ",", "30", ",", 
      "24", ",", "23", ",", "33", ",", "65", ",", "24", ",", "23", ",", "22", 
      ",", "18", ",", "16", ",", "45", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "39", ",", "17", ",", "15", ",", 
      "47", ",", "5", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "41", ",", "41", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "18", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "26", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "21", ",", "9", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "18", ",", "16", ",", "48", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", "16", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "9", ",", "33", ",", "41", ",", 
      "31", ",", "38", ",", "9", ",", "1", ",", "11", ",", "10", ",", "16", 
      ",", "14", ",", "40", ",", "43", ",", "51", ",", "32", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "20", ",", "37", ",", "28", ",", 
      "19", ",", "24", ",", "17", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "28", ",", "24", ",", "20", ",", 
      "24", ",", "41", ",", "26", ",", "21", ",", "45", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "11", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "27", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "18", ",", "26", ",", "23", ",", 
      "22", ",", "28", ",", "28", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "2", ",", "22", ",", "43", ",", 
      "28", ",", "27", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "42", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "30", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "27", ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "29", ",", "21", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "20", ",", "48", ",", "17", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "34", ",", "26", ",", "22", ",", 
      "33", ",", "31", ",", "29", ",", "4", ",", "1", ",", "49", ",", "33", 
      ",", "19", ",", "27", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "23", ",", "32", ",", "27", ",", 
      "20", ",", "21", ",", "32", ",", "17", ",", "21", ",", "30", ",", "21", 
      ",", "33", ",", "22", ",", "4", ",", "39", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "19", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "35", ",", "44", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", "26", ",", "4", ",", 
      "29", ",", "26", ",", "1", ",", "18", ",", "36", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "37", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "26", ",", "29", ",", "29", ",", 
      "22", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "32", ",", "35", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "36", ",", "39", ",", "24", ",", 
      "25", ",", "45", ",", "36", ",", "30", ",", "20", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "28", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "30", ",", "26", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "21", ",", "27", ",", "51", ",", 
      "23", ",", "32", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "29", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "31", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "35", ",", "33", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "15", ",", "35", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", "19", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "56", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "21", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", "21", ",", "28", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "25", ",", "6", ",", "27", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "34", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "18", ",", "22", ",", "15", ",", 
      "1", ",", "20", ",", "19", ",", "33", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "12", ",", "14", ",", "29", ",", 
      "28", ",", "18", ",", "26", ",", "21", ",", "41", ",", "39", ",", "21", 
      ",", "29", ",", "22", ",", "61", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "23", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "9", ",", "28", ",", "42", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "31", ",", "28", ",", "32", ",", 
      "20", ",", "23", ",", "20", ",", "20", ",", "16", ",", "31", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "2", ",", "6", ",", "3", ",", "8", 
      ",", "29", ",", "1", ",", "7", ",", "2", ",", "16", ",", "14", ",", 
      "41", ",", "21", ",", "19", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "32", ",", "1", ",", "3", ",", "26",
       ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "21", ",", "25", ",", "22", ",", 
      "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", "28", ",", "19", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "25", ",", "18", ",", "32", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "17", ",", "24", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "38", ",", "21", ",", "10", ",", 
      "4", ",", "7", ",", "2", ",", "8", ",", "39", ",", "22", ",", "35", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "50", ",", "47", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "2", ",", "18", ",", "41", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "50", ",", "16", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "39", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "15", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "24", ",", "21", ",", "39", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "1", ",", "24", ",", "4", ",", "25",
       ",", "20", ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "29", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "40", ",", "21", ",", "18", ",", 
      "4", ",", "10", ",", "9", ",", "2", ",", "40", ",", "45", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "19", ",", "30", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "32", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "33", ",", "23", ",", "21", ",", 
      "61", ",", "19", ",", "22", ",", "31", ",", "27", ",", "2", ",", "29", 
      ",", "16", ",", "44", ",", "25", ",", "74", ",", "14", ",", "24", ",", 
      "25", ",", "34", ",", "1", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "16", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "32", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "31", ",", "44", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "25", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "7", ",", "9", ",", "29", ",", "36",
       ",", "18", ",", "63", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "12", ",", "41", ",", "10", ",", 
      "36", ",", "30", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "33", ",", "28", ",", "28", ",", 
      "47", ",", "18", ",", "31", ",", "16", ",", "31", ",", "22", ",", "20", 
      ",", "14", ",", "22", ",", "22", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "33", ",", "38", ",", "51", ",", 
      "18", ",", "21", ",", "47", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "29", ",", "21", ",", "27", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "36", ",", "27", ",", "15", ",", 
      "46", ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", "15", ",", 
      RowBox[{"Missing", "[", "]"}], ",", "27", ",", "27", ",", "29"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819070903738215*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"eb55d117-2679-4198-ac8f-6d0fdc53b5e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s3", "=", 
  RowBox[{"Histogram", "/@", "s2"}]}]], "Input",
 CellChangeTimes->{{3.7933421568590236`*^9, 3.7933421681747675`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"7232879f-045b-47c2-a6e7-b20e949389ea"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"1st\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.623], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.623], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {10., 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.388660928742993`, 43.96455497731518}, {
              40.38256286319103, 47.57878718771334}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {20., 22.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{43.33955497731518, 65.91544902588737}, {
              10.812053402840675`, 47.57878718771334}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 22]& ,
           TagBoxNote->"22"],
          StyleBox["22", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[22, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{20., 0}, {30., 52.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{65.29044902588737, 
              87.86634307445955}, {-38.4721290310766, 47.57878718771334}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 52]& ,
           TagBoxNote->"52"],
          StyleBox["52", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[52, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{30., 0}, {40., 72.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{87.24134307445955, 
              109.81723712303175`}, {-71.32825065368812, 
              47.578787187713345`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 72]& ,
           TagBoxNote->"72"],
          StyleBox["72", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[72, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{40., 0}, {50., 62.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{109.19223712303175`, 
              131.76813117160393`}, {-54.90018984238235, 47.57878718771334}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 62]& ,
           TagBoxNote->"62"],
          StyleBox["62", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[62, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50., 0}, {60., 46.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{131.14313117160393`, 
              153.7190252201761}, {-28.615292544293133`, 47.57878718771334}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 46]& ,
           TagBoxNote->"46"],
          StyleBox["46", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[46, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{60., 0}, {70., 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{153.0940252201761, 175.6699192687483}, {
              12.454859483971248`, 47.57878718771334}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{70., 0}, {80., 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{175.0449192687483, 197.62081331732048`}, {
              40.38256286319103, 47.57878718771334}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{80., 0}, {90., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{196.99581331732048`, 219.57170736589268`}, {
              45.310981106582766`, 47.57878718771334}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.8, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{0., 90.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"2nd\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.581], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.581], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {5., 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.388660928743, 35.18419735788632}, {
              9.20420064258525, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0}, {10., 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{34.55919735788632, 48.35473378702963}, {
              29.337313466653583`, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {15., 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{47.72973378702963, 61.52527021617295}, {
              34.37059167267066, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{15., 0}, {20., 24.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{60.90027021617295, 
              74.69580664531625}, {-13.445551284491629`, 
              47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 24]& ,
           TagBoxNote->"24"],
          StyleBox["24", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[24, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{20., 0}, {25., 43.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{74.07080664531625, 
              87.86634307445959}, {-61.26169424165393, 47.578787187713374`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 43]& ,
           TagBoxNote->"43"],
          StyleBox["43", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[43, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{25., 0}, {30., 47.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{87.24134307445959, 
              101.0368795036029}, {-71.32825065368809, 47.578787187713374`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 47]& ,
           TagBoxNote->"47"],
          StyleBox["47", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[47, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{30., 0}, {35., 44.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{100.4118795036029, 
              114.20741593274622`}, {-63.77833334466246, 
              47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 44]& ,
           TagBoxNote->"44"],
          StyleBox["44", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[44, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{35., 0}, {40., 20.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{113.58241593274622`, 
              127.37795236188953`}, {-3.3789948724574614`, 
              47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 20]& ,
           TagBoxNote->"20"],
          StyleBox["20", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[20, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{40., 0}, {45., 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{126.75295236188953`, 
              140.54848879103284`}, {-5.895633975466005, 
              47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{45., 0}, {50., 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{139.92348879103284`, 153.71902522017618`}, {
              21.787396157627956`, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50., 0}, {55., 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{153.09402522017618`, 166.8895616493195}, {
              16.754117951610873`, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{55., 0}, {60., 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{166.2645616493195, 180.0600980784628}, {
              34.37059167267066, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{60., 0}, {65., 6.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{179.4350980784628, 193.2306345076061}, {
              31.853952569662127`, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{192.6056345076061, 206.40117093674942`}, {
              44.43714808470483, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{70., 0}, {75., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{205.77617093674942`, 219.57170736589273`}, {
              44.43714808470483, 47.578787187713374`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.5, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{0., 75.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"3rd\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.581], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.581], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {5., 33.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{28.25415332265813, 41.601331064851884`}, {
              11.344053838527458`, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 33]& ,
           TagBoxNote->"33"],
          StyleBox["33", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[33, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0}, {10., 23.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.976331064851884`, 54.32350880704564}, {
              21.455152535570615`, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 23]& ,
           TagBoxNote->"23"],
          StyleBox["23", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[23, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {15., 17.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.69850880704564, 67.04568654923939}, {
              27.521811753796513`, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 17]& ,
           TagBoxNote->"17"],
          StyleBox["17", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[17, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{15., 0}, {20., 75.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.42068654923939, 
              79.76786429143314}, {-31.12256068905382, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 75]& ,
           TagBoxNote->"75"],
          StyleBox["75", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[75, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{20., 0}, {25., 113.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{79.14286429143314, 
              92.4900420336269}, {-69.54473573781783, 45.33567953876988}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 113]& ,
           TagBoxNote->"113"],
          StyleBox["113", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[113, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{25., 0}, {30., 89.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.8650420336269, 
              105.21221977582066`}, {-45.27809886491425, 45.33567953876989}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 89]& ,
           TagBoxNote->"89"],
          StyleBox["89", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[89, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{30., 0}, {35., 57.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{104.58721977582066`, 
              117.9343975180144}, {-12.922583034376132`, 45.33567953876989}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 57]& ,
           TagBoxNote->"57"],
          StyleBox["57", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[57, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{35., 0}, {40., 39.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{117.3093975180144, 130.65657526020817`}, {
              5.277394620301557, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 39]& ,
           TagBoxNote->"39"],
          StyleBox["39", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[39, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{40., 0}, {45., 27.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{130.03157526020817`, 143.37875300240194`}, {
              17.41071305675335, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 27]& ,
           TagBoxNote->"27"],
          StyleBox["27", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[27, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{45., 0}, {50., 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{142.75375300240194`, 156.10093074459567`}, {
              29.544031493205146`, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50., 0}, {55., 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{155.47593074459567`, 168.82310848678944`}, {
              39.65513019024831, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{55., 0}, {60., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{168.19810848678944`, 181.5452862289832}, {
              42.688459799361254`, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{60., 0}, {65., 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{180.9202862289832, 194.26746397117694`}, {
              41.67734992965694, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{193.64246397117694`, 206.9896417133707}, {
              43.699569669065575`, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{70., 0}, {75., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{206.3646417133707, 219.71181945556447`}, {
              42.688459799361254`, 45.33567953876989}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.5, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{0., 75.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8190709257752*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"2443a374-c5f0-4223-90ec-5d113465e87e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.793342170814466*^9, 3.7933421733111258`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"822edc25-d813-4e2b-bd52-f6bcb35cc615"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["1st" -> Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.623]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.623]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {10., 4.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                Style[4, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {20., 22.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 22], 
                Style[22, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {30., 52.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 52], 
                Style[52, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {40., 72.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 72], 
                Style[72, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {50., 62.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 62], 
                Style[62, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {60., 46.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 46], 
                Style[46, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {70., 21.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 21], 
                Style[21, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {80., 4.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                Style[4, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{80., 0}, {90., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[
                1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.8, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 90.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "2nd" -> 
       Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.581]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.581]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {5., 15.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 15], 
                Style[15, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{5., 0}, {10., 7.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 7], 
                Style[7, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {15., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{15., 0}, {20., 24.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 24], 
                Style[24, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {25., 43.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 43], 
                Style[43, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{25., 0}, {30., 47.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 47], 
                Style[47, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {35., 44.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 44], 
                Style[44, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{35., 0}, {40., 20.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 20], 
                Style[20, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {45., 21.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 21], 
                Style[21, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{45., 0}, {50., 10.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 10], 
                Style[10, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {55., 12.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 12], 
                Style[12, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{55., 0}, {60., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {65., 6.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 6], 
                Style[6, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{65., 0}, {70., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[1, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {75., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[
                1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.5, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 75.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "3rd" -> 
       Graphics[{{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.581]]], 
            RGBColor[
            0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.581]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{0., 0}, {5., 33.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 33], 
                Style[33, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{5., 0}, {10., 23.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 23], 
                Style[23, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{10., 0}, {15., 17.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 17], 
                Style[17, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{15., 0}, {20., 75.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 75], 
                Style[75, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{20., 0}, {25., 113.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 113], 
                Style[113, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{25., 0}, {30., 89.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 89], 
                Style[89, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{30., 0}, {35., 57.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 57], 
                Style[57, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{35., 0}, {40., 39.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 39], 
                Style[39, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{40., 0}, {45., 27.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 27], 
                Style[27, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{45., 0}, {50., 15.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 15], 
                Style[15, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{50., 0}, {55., 5.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                Style[5, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{55., 0}, {60., 2.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                Style[2, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{60., 0}, {65., 3.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 3], 
                Style[3, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{65., 0}, {70., 1.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                Style[1, {}]]}, {
               Tooltip[
                StatusArea[{
                  Charting`DelayedMouseEffect[
                   Rectangle[{70., 0}, {75., 2.}, "RoundingRadius" -> 0], {
                   "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                Style[
                2, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {
         AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {-1.5, 0}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{0., 75.}, {All, All}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Graphics], 3], "Meta" -> 
     Association["ID" -> 134772000307312], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
       TypeSystem`Atom[Graphics], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1st", 
                  Style[
                  "1st", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["1st"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {10., 4.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{10., 0}, {20., 22.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 22]& , 
                    TagBoxNote -> "22"], 
                    StyleBox["22", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[22, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {30., 52.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 52]& , 
                    TagBoxNote -> "52"], 
                    StyleBox["52", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[52, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {40., 72.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 72]& , 
                    TagBoxNote -> "72"], 
                    StyleBox["72", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[72, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {50., 62.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 62]& , 
                    TagBoxNote -> "62"], 
                    StyleBox["62", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[62, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {60., 46.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 46]& , 
                    TagBoxNote -> "46"], 
                    StyleBox["46", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[46, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {70., 21.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 21]& , 
                    TagBoxNote -> "21"], 
                    StyleBox["21", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[21, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {80., 4.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{80., 0}, {90., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.8, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 90.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["1st"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2nd", 
                  Style[
                  "2nd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["2nd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {5., 15.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 15]& , 
                    TagBoxNote -> "15"], 
                    StyleBox["15", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[15, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{5., 0}, {10., 7.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                    TagBoxNote -> "7"], 
                    StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                    Style[7, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{10., 0}, {15., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{15., 0}, {20., 24.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 24]& , 
                    TagBoxNote -> "24"], 
                    StyleBox["24", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[24, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {25., 43.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 43]& , 
                    TagBoxNote -> "43"], 
                    StyleBox["43", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[43, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{25., 0}, {30., 47.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 47]& , 
                    TagBoxNote -> "47"], 
                    StyleBox["47", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[47, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {35., 44.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 44]& , 
                    TagBoxNote -> "44"], 
                    StyleBox["44", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[44, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{35., 0}, {40., 20.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 20]& , 
                    TagBoxNote -> "20"], 
                    StyleBox["20", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[20, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {45., 21.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 21]& , 
                    TagBoxNote -> "21"], 
                    StyleBox["21", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[21, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{45., 0}, {50., 10.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 10]& , 
                    TagBoxNote -> "10"], 
                    StyleBox["10", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[10, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {55., 12.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 12]& , 
                    TagBoxNote -> "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[12, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{55., 0}, {60., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {65., 6.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 6]& , 
                    TagBoxNote -> "6"], 
                    StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                    Style[6, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {75., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.5, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 75.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2nd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3rd", 
                  Style[
                  "3rd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["3rd"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0., 0}, {5., 33.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 33]& , 
                    TagBoxNote -> "33"], 
                    StyleBox["33", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[33, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5., 0}, {10., 23.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 23]& , 
                    TagBoxNote -> "23"], 
                    StyleBox["23", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[23, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{10., 0}, {15., 17.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 17]& , 
                    TagBoxNote -> "17"], 
                    StyleBox["17", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[17, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{15., 0}, {20., 75.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 75]& , 
                    TagBoxNote -> "75"], 
                    StyleBox["75", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[75, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{20., 0}, {25., 113.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 113]& , 
                    TagBoxNote -> "113"], 
                    StyleBox["113", {}, StripOnInput -> False]], Annotation[#, 
                    Style[113, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{25., 0}, {30., 89.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 89]& , 
                    TagBoxNote -> "89"], 
                    StyleBox["89", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[89, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{30., 0}, {35., 57.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 57]& , 
                    TagBoxNote -> "57"], 
                    StyleBox["57", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[57, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{35., 0}, {40., 39.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 39]& , 
                    TagBoxNote -> "39"], 
                    StyleBox["39", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[39, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{40., 0}, {45., 27.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 27]& , 
                    TagBoxNote -> "27"], 
                    StyleBox["27", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[27, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{45., 0}, {50., 15.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 15]& , 
                    TagBoxNote -> "15"], 
                    StyleBox["15", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[15, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{50., 0}, {55., 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{55., 0}, {60., 2.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{60., 0}, {65., 3.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{65., 0}, {70., 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{70., 0}, {75., 2.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {-1.5, 0}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                  PlotRange -> {{0., 75.}, {All, All}}, 
                  PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["3rd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{194., {145.988525390625, 157.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{194., {145.988525390625, 157.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81907092847184*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"f1576c41-e3ed-46d4-acdf-5ca1d90ed6e2"]
}, Open  ]],

Cell[TextData[{
 "\:53c2\:8003\:ff1a\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
UtvSfT+gyVEj1YdzHSzM/aDq68Vy9klyfe9byOYblb7z2/J3bf59yN+lNquz
JmqR1cK/p2I4k/luuUYU99farp7KCWelrlc6/5py+Tlsjcnjz5V1dtOtQ8Nn
ia3/9oQ+KrHuw8fqwcPkm27ueu9/mBNH/BuLUZ5TF6TfLpjPYkLj/OGWziXt
L7sp8zMmdcGkn+oSMA9q0fZV+QFV7wV/b+yzZF3txHI3Kn/f2KbnumLKtr7J
rimSeWyJ/DxmorZP9M6wmsSt49XESEAXBAC8Sbh3Dk2uTBoc96R5Utl2kXXB
+m6Xeoc9RdOpt1dn341iXVCMXQfDDB3hbEDdyF9Go+7xgAzVckKHOOlGY+pc
XTDyl6+a/zkLZzbnnTcOZ75wB6Yff+q6rteEHhDX5AjntCVdcOzt4SyZBzJo
VXOIxTZm3rVUX9/+QXwMRbn5pLiDDXWOvirE8TmL2VOvrS54T8fHNbXkfaiU
X9Bm+QWVWtfqdME4x86CtvnS8wvOsI3M823s6WQl8r6afNw4y9fFc3hvbHZT
Y00AAFgJd3J9Ar/fOjCi7wqvb7ChtSRNMFjfTK1fE3rZbANy/fY69a8SG0jk
U6jtDdLftHn3EdnAGtU2NUUfXSP9PLswiD3sKed9tK02GcnzmDFJaJRci1Sx
iC4ocJ9d0Kd/ydbAPnr0Hb3IqqsxvaXhowx9753PaKiMwY1Wpste2mdRxBV/
8Q+RcO6WPp3F6r6brPk7vY41yT9/p9481wXf+1Z97tffKrXB93tBzsQX19/T
w/fS/ot+eysrxljgUH9XfqaWqwu6sl2jGNfI2lst/d54x6gnNf3NFo1u3Nn6
ckxK+4Q/h3Ltv2QMsTPzLRStqainnTw2XZmz2xtXHKQ18sguynu0FgS6IADg
jUDS5tSttt0i/cwkvwx8ieWTrZwuuPyWN06X551q1D5Q6Zsl20GH6my+Kjsn
bvzd1JK5L6Y26Xstau91aDD7Vkv6j5heFXbsZp0a2w2viX+3aFBY7yKNau55
npalSTnXBjU1ednG0aJzeIk84QtoHNAFVdjU0codn+RrNxU+EgYZwxGNzg1W
F8N7Ns+9vw3Fb+k28n4zjsK56Rr1zoL1jQtuL8q6YP/CJJM143i+WODJMLZP
U3Wmq7JkXdC+GlF3t5561zQtPf6szfxKJE1Qyrsj5xiHNggAuDemLk1m+ZOd
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
H9Ra1+caAFAanpOmsyKdIuxXavsvucbCUoj7/a4qh9c8uuBvl/SupAl26fKZ
wmfu2Tl94P/+GVmvmb/gix++egN0QXlct5qahouwel3QHsZ+DnH8q77yPuh1
Y+HrCF0QgLVlsBN/J0azV1nKE3BgknNjSOO6+kG2fZWqfbCjZ+bcuH9dkOW9
WtAPrJQeMHXJOtPTsXFafT4fnc1a6m+NfZ2sW3n/vLZr3Gqkn5veGDvuzzun
2TaNO+5Lx9iu5Hcm6xDZTe3/NLcuuNkl28+tnNZYhfZqn3ejfXfP7Qw9Vui0
dmw/vWq6IIvfXuvajkwXrIc18aYU5Y2L9KpNhS/Ztp6Ze06sP9qDLpgiei5E
baPZuyxps3U5xpjdiySDndAHMB33F8X0X5g0OpH7obA/qR/0fX3R1yCHI6//
Cs4n+52L65S8rnlBAXjz4PXrivNaz4PF5lQL67KvPQ71o763ocwbPI8uePlJ
R9IEczW/32/o+a9Fwd7ToGbJs6f04udbcn8veSDLZnrn7d87Xu84nv+cbwlZ
vfgaVIojfpV0QWcU+22spV27el2QmC0VjT2Yzfw61iNcCYteR+iCAKwlXN9v
HJm+juXYcj2M5l5SY6qTcWWRdeWN6y6tVLPGFumpercNGinyHkt6T4apMam6
TJEuqMzfVZ3iegNxLQVZxwtyBE6OkvHBRa1BIpuMyN3aVGhu0jFMbaledPMg
zIfsUC+Rs3Bjq0NWwgwSzwXXBFsnFW2fm37Jc6ovVxcsuqelNZyKmssa4VzE
+T/X2maVdMH0cfLxjaTnbxTnpi8zT8Df30ytqUydmvEroguKNby+3Wbv+oTn
hOX1XliMdyOZA/Au9gmP/cuVe/O+A6r6c7Pt7uk04f2OFM+c0BvZeAZ2OwCv
IK5No1OdOp492dptk35mkXvLdIqib/edTcaJTm1//Q4NLh0/R605NEg/7Kbi
P5yxSZ1E/pTehUWT6wm5WbJWxX2ETM4Hs/NqUedAJ1PkefHOV/fOs6jeh3s7
ka5Le79L/WGiz/Xs8slFP+FfX6fReOLZ27LeVVkX/PVC8hX89IeyBUpU3NHl
N1/Ru4qaJe/++Su6fJYxtzbL7SdqnXygP8ld5u23PqYvfkgErvz+hD56S/zW
pkf/EL85NPzkM0VexM/p8hd+810aPuzSu+915Dor3j4evCOaiKX+G73Iyclb
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
Ja8XUiNzGsaNauratS/d9pvB31dhMyXiuSM9eY73dLCj5ax7z7rg1KHBYZsa
LO9qsoncn/rQSh2LwepnN49HpO9k7UPkMWj6tZCdnDiTfkbdTYGsw8njZZ63
fIONObKvWy91jo09nYzzgVSnXJ0DnRKxO+y5hM8gAOuLK+esqh8Y5LgOmcez
/mO3T6OjuJ/pno1m367Qr5vn6grXd8m+MqIxZGs77hPbZxaNDmvEc3Mk5+Tc
WT3QeFy+2D7Csb7K9op9q5N9lcPyJgTjdP2CJxNxaBReo42mNPdiSVqjE/XT
3Yy8CnPpgiT744Xtg4ff0PCHC7r88Z/09aPPpHjjP/yxQ9bv8fl9/Y687qNv
/knPn93Q85++p0d/kn/7+qekP95Teiht+6/03Y9P6Pn1OX3xl49Tx7UKXfD5
48+kc3v845hePHtCQ/07hUa6iC6YHAtkz7XZUh3aOhljh9w7m4yD4B7Xd1ss
/0ubrLERvH+Rbchj0MX6VpArT+vGdoKk5Tf9/MXR9me6ffS7Zw+a54EtGM0t
p2pyi20wX1lnQvre7Bne0RP2Sfa1KbTPeYysf/7V8/0UIvVnLUp58/Ecfd71
N4b6rM8Illz4/nHtLuVbLedAbSd1vcQcTe+oLR3bIn3SUoAuCMCrw9Szka5N
6ntj2VqU196zMVgd3Nz8gpRfLzfYR9xnJeueprYWxdEVjAtfoi7Ifc3L1HzI
aup6xN72vO9Fe7dN3YMuNbfK58NOEutrc4yxK+YXTGqC9aQPfAVeOV0wWTdh
Kzv2lvvxbWx1aeK4vg9cN4yN3o19AUUciDWzy6J4ZG67bPbIup7lo+OxwGtl
+2Vco6xW+T0tqisi/57LmL+H+Ytm9iuuuo67tinykRo0yfDTNqV80mKO143z
wW5m57Hh2rLLaxDl1O2wjuV3VRXPzn0J/fin/Mvhj7O7O8kaVvJ9VTKVx+2a
xt6P7fusFQUAqIrUT2yk+4zJUTIvgqyLGLtZ34JgOfsknVehx+YblblwE/3G
/PuQ7bg2q7NmX+hRP5+sDSCQfHt4Y/2btqun5lySdQV8mznH7ptXFxRMHn+e
0uDUrUPDZ4mt//aEPiqx7sPH6g/p5Jtu7nrvf5gTR/wbi1GeUxek3y6Yz2JC
4/whORG6LF0we47VJ5GXO2VPszGZ0tZ0VbUlmmRJtTFUy7D8OYo5uqQtbybq
7sTf7vi/W8dl7P8FdEFlLunF4PPh2t4ovYDChpWuzYL3j+uK6bz0k+yaIhnH
1jiS78G8fdJSgC4IwNri3jk0uTJpcNyT5knlfkLWBeu7Xeod9hRNp95ePbsv
C5H6rAYNhgYNTgfpdjbwxpZxffbu8YAM1XKn3von3ej7lasLsvmz5eRa5f5a
WXGyzI44MP36Aq7r+mk+XDv+doRz2pIuOPb2cJbMAxk0ZW2xHGIbM+9aqq9v
/yA+hiLfKcnPbWO+HH2cOD5nsW//S9EFN7u531X7rKW8t9FY5EYVfxV/31Xx
WSn9ZK1sP8U1ymtVxze8BkuRv6C4xqcZfU/imW8c6GScqd8P40yP/eBS+wz7
HFEHqEP9YUGdlqlD/T35Wod+tpl6Z/Rca6ymj1xHT1f6Cnr72pX31TzJ6jvt
RF2+Ym3QX0uaM+dNo/aRQXIaWyeRizSwxXksz6J9CQBghdzJ+XCDvtOI+iue
L2tDa6X9UO7M1Po1MTYNfdwPeX9Vp/5VYgNjWS+o7Q3S34B59xHZwBrVNjVF
n1Yj/Ty7MIg97Cn8oIW/eJuM5HnMmCQ0Sq5FqlhEFxS4zy7o0790MvW5jx59
Ry9+z1h5ekvDRxn63juf0fA6TwSb0mUv7bMo4oq/+If4eN3Sp2/NdMFeQhec
Xsea5J+/U2+e64Lvfas+9+tvldrg+71kzsTFdMFeGDdawn63jpO2P3vGPBuq
xm22vX5Ovk7xTHRkTTBxLtEzxm2AROxL80idPz2cZ042ESdg5d32jGMpts+T
tsvydUGeOzCrtno967rNWOT+8TmBVKwH9yVkNfeyji3LNp+nT1oK0AUBWD9K
jMtr2y3Sz0zyh7Flx/G8nyulCy6/5X2rZX2jRu0Dlb5Zsh10qM6/u5m51+Lv
nZaMsZzapO+1qL3XocGsH5b0KzG9KuzYzTo1thteE/9u0eCyep+tmnuep2V9
s51rQ4oT9O0CpR1RhUSe8AXmru5NFwx9xErEXPpaSNLHYrNFo1nOvGRMZsr2
cEzpu15XjYPWyvabIfUB3vhwVlvXb5cm6aHNV5TPkF/fqXyMqTzNGddiqU01
HpuWjLsf6infwlZ0n9hxa23yUzhNg20PoniS2MaS8mUr7Ebxrib74KK6Pcka
OGKckUolNTtf67xPrXC+hPUJmpa+Zq0jMVcia4J+rFO0PXm/0AYBWGO8938y
y5/sJHWI8LdxTmFdtn5qDiX87dr251dVuPbE+4ZYmb7Yi+xD1I0P+yXXcWgS
5ooeZx+PvO1gHt6crZO6PgrsseUvX2bZRXXBiN/v6MXk2rsGT/wmYoJLnZ9g
ekfPxbo/XXrrXtOLXypMwP/61FtP7G9Mk/HTl+Af7vrn/fzZU+8cntKL3/Lj
f6rrguTHY00q2EvieY6eMdVvefnhXcf/3cqrGxE97xPlPQ7fp8K80Y7t7cv0
j3VyU/J9kPdUue6IG/n05eUuXx3hvbFzHvGF7t8ix3Zb8r7N0SctDHRBANYP
lTan1ai51yPjwqKUS0ti+SC+K9G8v0kaxRrqgso4kyW1VI4H6Zxd77NZrs9d
lX61Sl1QVTe1lzN3rsb15wC1zTrVtxvU3GnKuuuCtu79+Qu6/re+VDztDGH7
+/aU4iMe/pb17Ijvf6FtsTa2X7jDeD5TlUsg8ivJyxvDfUO0tP/GIjH9c7dK
tYJn5zrU5efcb4l8L2WOO9TSEnPFA542xjapt1NLrdsZlnxX78xE312j/uw6
O5cDamXEDtf3Yn8cEWPcSuVe502Rh/0m4dO61VtNfAsAALyiRDZeUY4MsADZ
ubDBYlTTBVkMg8pnDqwv0AUBWEuMgzZ1joJ6xE5ebJvAjX2eO3m1IdlymqL+
arhMOG6N8kFPF2yOmd5mBs7VgJrKOJB5mkY1kfO/sgaWzep0wXDMXqOR0JD8
WOYSbSpybfTyj8kZxeP2rQ5Zc7mg8zjvdGue5ueiLNz6femCoAQOdWc2oDJf
Eou1z8QeZD4roi5Lpu9uVNe3F2i3CzdWY3CO/NfJnFzaTk8R75OTDybUV5mf
py00uk3hWyfnxQlrY8daYjPyTS3NnUUtHj9+GvR9qpj25kE/sy+YnAs91Nv/
9UjOf5mlf48HTBtsQRcEAABGpAt6/Wp/aJBx5rVTY057DKhh8T/et9qYXefB
2ajSXDAgv96teD7953TYj+KNCu1zzwbpsnnS/krqEYOl4trxvT7tzXQC6IIA
vLJMbRoc9Ug/GiRyQqmW073ldDKzxpveMr3dJrW81lXkaJ73+MQ2m7ttGuUe
4PrDa+op81rMyeSkTdpmjeo7c/jajPtU02p+U/theTbpqU79i8Xup32uU3u/
49dYCVqHOvtdMq4Wf074da2amxGsIy6Zfs6/PvWPgz5HP/HGQAXvv3HQ8voe
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
18VrSV2K5tMFh/9piTpWlub3zyW9/ivPaGAyzVny6iW9+eOK3FXrYqnVuPbO
79XXq8frP3LW51j8vWJ+xC0aprST7499T/ATnler89rxz0vWjintzmwdF/ZJ
Vpw/aL9XJYwCgl1dejPb982fKW3P7Bzf+3BVuqB6XhGNnRYck/9rYGPseNzs
RPOk/HEmdEEAbjx+vJW9TpynIyx7LN/BqEe19SrVNmvqshHb7mkbKdt4pbrR
VI5hhPn8Zi+wjVPazaUWf75fRsNhesNSNRrFkSY21RVaSG0WI7B8voYa+dFk
nHNDzLeiqoN3bp4Lob4XxmHz+nEpZqGvOVjSMMjXXbgm2DgqqS1cdgteU3W5
umDePS1s41ki5l4GQq4c1bFK+o8knzmH+sc96mXE0UuPr9cj49wpdK2R3aim
pdyHeW0202K7ZN/TuB2qQb/CbVNrh9nxIPP1fLV9buId8N6xptfv+O9Jwq/4
2gp+k9/fPP9/IY6qVPxcNX0hL7mY70S05Y11+bwYsQAAsHK8cVr/WKfWToMa
203STyxyr5gNet63+9om40inZrB/i3pDJ4jBbJ4apO+3E/4fzsiklhQ/pXNm
0fgizUa9/DlCxoPe7Loa1PLHz34/712v7l1nXr4P92ostEtzt03dU/lb49L4
rCutoVepPxqTNRK/KaV1wb/OBFvBr3+ZM/hxwDUNn3xPHylylnz04HsavlLX
KIztlxUfL4r/9/6X9N9fJI1qFl/Pz/3x6Cf/N4dO//NNog7v3f+Whn/ym+/S
6cM2ffRxS8yz8n6YT8T3pf6B+fmKumCWfirG85NtBuP8JffeV9leul47fqeM
9Thtx+mA/fWPXlt/+BV9dF/cJs6F0qZBmOs4jEGojOU3q4/3+0cP/xf8Zfzj
D5IN6fSan/6aow/++Ts9/lzlU92kh/r/pucdv6DPPmx5df8ypd6Kezw36nkF
j8OpfCr9uag9JnPgvft7bTJGbCu/nzjsBP1Ec69LdhHfq0uTul4f0vT6iObu
bI7tjL2xeJc63jvflw/in//SP3/P+71DFnvNx2d+fzPNyTkdw/P9vDnBUWd6
Hr9uReYYrt/H+edpTvugnRZ1pNjd3DYwHjeztoUuCMCth8d1kUsYD869kP3i
5i0pMRyYLqhttQOtolxuYDHPUVldcCEKaEz2SWybVN3uCHZ97pUt+V1ml7H0
3bBOdSEHREJxuDKps9+jsWLp0znvSTaMGunDmQ2SpIk0j8vn3ehusuOejQN/
4bE3hh2PfN9hlodZqPcy7AWz739x3+/FdUGlxsP8GIxZXt92CX/2+fN/Zx41
+1rDd1TQojN0Qd++zx9PpOTF9bVQZ9DKuJ/5dYrboU7GkNu1Nmi8QA51eyjP
vcR3QzyQlZNXx48NmvRt9v16ZfteH+sofl6q3nhO39KSz4+v823p03fa7gl/
rx+z54jVrZydLwAALBeT+ShUNhvU2Ej2bVnrOXxMom3UqT77NvBYCzx+alps
hrB0FZJD2XNMEXPD1XdbVJPWbPVRynfaj/u8Fdez6s3HhXaJYgfm2eLXhG9e
WV3Q/fUHpod9R68L7KNk8pL+WyAnh0rv4bH90vxg+TYfPJLi43G7s4+/pYeZ
9fiKaXTX9Ph+Xp2/ZHaBxXVBX4f7hF+34JucZXc4odPP89vRt2m0/vNl7nZf
/+ok2yjhsyv6Rz/6vJV7bhVvFDEqE+XDp+T89kPudvfke7wA5p6W6GPGh1X1
Oz1S2zQ0T6ftKOefC46RFZ9g4q8PsPd8qx6NzbjtRRgTwD5pKc8/zdPuKMaF
1djmxu4nxq+Z68ITxxujxuNOzeubm9vcXqXJ4rG60VpznDOexTTIjSEPXRCA
m46o+UnrquexLujHAazM4uEnCh+vaCnb+HH/tLp6/v8u/IhZvNn+KNSrSpZL
myyWiyC9n3PJPDHIWmQJNgfL9yucZ+rvfRO6O9k2ix1F/Jo8hBhrm13FFnFM
PG2Hx82+O7pgqt3X7Fj2oagX1faLxT16+7qgyzReaSySpQv6f0rNc6LwAy5V
J94ONdJZjuki8anS2tBS2e/6trRph2R9V1a+7aQG7xeWL8Ufm/EYhrN8693Z
9QdjWccUbI9rx2Mxp7v8rjFdUL/AGAwA8A7w5sTt9fibwW1uzH2x/1LHLua6
W1WI1SrGtZD6Od/W5toRtvG/sf7fnCu5Q5/zHOTHa6lH+/G4weGaX5qvL49n
ovn59bjPRNRebF+v3q5jCbGEO2f2LF6KtF5cUhfk/rMfzB2bzqXnD0Rd57OH
T2n42+80/OkpfSLZDz6XcnGU1QUT2/wzFDS4qA6PntLg1wE9lnSuz56GwoZL
g8539OjR9/SFoCW26b//8fOJfEcPHz5heYVL6IIew0exbvfoZ/6AZxxn/Eyo
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
cJaiUzgWtaU1FCMn5Oki5zWFHPQVau51qLM/Z9lrUZXFbEj182N9orYn5x2x
Sd9pUHOnRb3Z2FC4Pn951R/Hrleptlnziv/fBvXmsPNelq1mWps7FwbVNXHb
2sGicc6kOOELaBzQBVXYcZ6yMvaCE99GwiDjtE/9gcHyYnjP5sD726n/W7L0
vd+Mg3B8V6HOyXR/44yPg0RdsCvFDo3ji5bTBcenbTYmU8dnKsySdUH7vE/t
7WriXdO05PyzMrMrETRBP0ZNNO1yxXVpaIMAgLeF75M2i5/syGuv4W+jjEEe
29925Dgqs98u7NT4vq49JnNo0fgqo4ef8xx+XOEoh5Xj0DiMFT1Kr494bG+f
c+87Ntsn0T4K7JEVbF9k20V1wQjfd3V84bXB70HxfYKLxVP2mFzTa3/f34be
vhf05s8SC/B/vfT28883ovHo5TvIReEG1/361UvvGl7Sm7/fnYbh/nnptcFF
0BbWaFSgLhNy/XYb+3UflWv3JTOt+/TZ8evjpmnJId59H3vX6F/r6z8y9GNm
0/dO4qRc22T5fYudcW5/m6D/GJPctQS/eX8fXy7bT5eCeAR+3awCx/b7Mb+P
9OuS6P9WAnRBAG4bQjzVo2Lz3EV0CntoKOfB7Yz11mWct3SOhhKlmRZP2scb
azp2sXHgqvSrVeqCPF5vtF2Beyni57qpkLZepepmjepbdVF3vZG6Wu5Zb5Qu
6K+5Vvz23fA1Zq99+fplqq4921fwQ/euS1v8WYqKHPNwPa5TApZ/OdXmT/A7
SWprZX3wk8dfgi54ZXp9YIrv8EaT+pezVWbbos5WJbP99EQcUpuawv2pUn8l
/iEAAABuAtE3uojdPgC3jNivTJWLHNxkoAsCcMu4Nqmm1cm4LP7O8hjPZd/1
RIyX9QYZo2LHWFQfcc57VFf6gcxTNKps1DP9R8qyOl0w1GEr1PfX0gNf5gIl
yPWQc6+dfqxvbLTImms5TLKzl0r9eLEcZLdeF1zgfQvhccyT7Zv9DMv2gnIc
44WK1Db9MC+bSqtkfvipTDJivay3SBkOvAwL5P+JcJMxXStbbepfqF8ed9Sn
xnqFOmeWkBcqNUa0d/wG0wZ7JeMOAAAAuD1E32hvLN/1bfRPvHJszDkeA+CG
MHHIYLl6awk/W3DjcKyg7wn6oNNu5EsGXRCAO4xjxjmMy77rkzE1NY1qO53U
eXAaQvy9O9jHcP0nLRf0PIyPmqStV6i61SnvVzjqUkWrBCXNft861ql7tpg+
ag90au62ghwr09Ki1m6bjPPFdVfermVjMy5wViH23kJ303vf6oFfqTa/D8Wo
R9XIJ31afNvB1lG+v7d1OI1bp/FYy6oYoPOWJTM+m+Y/6R7ppB/6pUv9JTxH
AZNpHC1fC68fzm97aJ+2qbLRIP3EJLuM289lz3sX69TPuxw/TsGmlhmrHgAA
wO1HjI0Yl9YSx5EAvG34c71ovHLwdnDP28q+aJlzWgAA+FfA88vCVn55hO2K
zxIAAAAA7hDOyEzG9T2BvSC45dgGVdc0auXk3QE3iIlDZiLGeJ+yQjMCAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArIqXL1+ioKCg
oKCgoKCgoKCgoKCgoKCg3JECXRAFBQUFBQUFBQUFBQUFBQUFBeXfVwAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACsgEuD2vs9Gjtuse0nDpmnBvUHBpkjZyVVsgc6NXdbXtHJnqzk
FDcG+9S71p2mV3QaF7wFi+AMu9652qQfdal/sZr7twzcS9N7xvpeMclZ5Bm4
Mqm5Vaf6Zp2M0RIbeGKTvue147H3HlxmH9c+6VBrT6fuyYLXclNxXXIcxyvL
f4DNgxbpp1b+ht79aG83qH2gk7GK59rr98Yr6u9uJN57o+93qLOvk2kv+dj+
u+P1QYXuk/d9amx7z8Bhl6x/UfMDAAAAAAAAwNvC3NVobW0tKPpF/rze3K9G
26+tNVai21nROSpkLio1TFZUloB11GBt6RWtSdYqtcFrk6rsfM3BghPtiUPW
uVW+DC2yr7MPbe1XlvIMuOed6Ho750ts3As9Om7tcJxVA9LXwzavL/S+OMMe
6Qc66YcLFu8Y5tX89ZBZ1r1KMLGoFj6vGzplHnrUje5H42Q5QpZ7ZZN50qXm
Vtzn6cvUlmeYx0u4p8F97S2tP+bvTXuZ743PKH53qofZmu/4qB5t21u2PgkA
ePu4LtmXFpkDg/T9FjV2ewTJHwAAAADgHcLn3WtNyp12XfZEHcuf1x0UsOVh
uN54sH9mknlmkZsyh7UOarPjV1N1siLHIdcSdLBllkU1JjO6RrnUyczRzObD
oc46O89Wb+Ejcu2gbGkPp+3nXjuBrZl8D4s8A4XqyPS7ZeqC9nGs6XYvMzbk
79hCbc71xcXLMrWeZd0rGfesHWuvR1naKwk6rX5R4iQTl5wrh+zRbJ560KbG
VpW0tLbb6HrPq0md3TZ1Anu6nOLblA4yetbJMvuo5emyq3pvfMy9SnTszHeH
+LNVI+su2toC8K/B+4ZtKPotrQ1dcAHisTArw5zvJQCgMMp3LGvuCQAAtxBn
0Irn3Zk2T8HW1NJUc1GNjBK2R0Vsi4roDIVslJY6516WLuhSb6citJ/ufWP0
TX78Khk5vqllz9ndSt63ynqFNE3LLEH9UuxIF9cFXerMnqnKvqgv33Rd0NgO
7WzrNM4YG/Dz148XMXhicyqtRp257Mlakd61zLZYlS7Yi57ZCvW9cVlr3Xtm
N6pUVZTKemz3rGkV9Tbe81yX7NPifiS7VLea1D2d+oHze1qkyM+2ANONtc0m
6Udl72uX9N3lt//KdMHJmOph26x3aDzqUTXlfk3vWdyO2nraNpVCtu4AgHeM
6wZrgQYbA5VdWwYiad+wpdt559Xjybd07/+a9N7/fUmPf8lZ8AGlcUddb/ym
BeOY1ul0LOl/p8O/1fbNd1zD28HY99PS/LlPjYzZkNw6DP9Woc5ZcpXC2tMU
79iS/WMAAOCdwtduq7k2atzGo+rPc6/7sU1NifXeQprfkrbxsYdGMHfuHi1Y
jnvUZmvdc82Vr31tQ9TmuuF81o+PJtmDtU+X4Djnn1O1Rr8MDXTikH1pT4tt
kzMy4v02vDm/zX6XyjTOXvwMVlekC3KfxVJ2ZJnYkbah7fQzt4x94jUyFjKK
YO/reo5PbRrMj/zG64JOnyrhs7TZW5rGX9kTn7OExqfx8V+FeudOIm6AsI+m
BZqkqKdXZpq6+tkWYLpgdc5xvTvsLL39HWarucxnxTlja1FHtvB+LlLe9hwY
ADA/8bqaH5vhXdfmdhN9f7U66cc96vnjVW/MmxUrZPzkG3rv/S/pg/tf0r37
39HrAnZPVqcd7/P+N2T9zX78Z0gfBZrgrNx/Mt8YJZVrevrAr6t//iZ99PmL
Avs49PjjeJ97D54tuU5vFz7uiNYaXRYbaL1zq6/vbWEdVBNjG27joFrHdc6N
ICZ798h7vw7D9fXlroMDAMA75TKOx6XtZmsb3K6Q+xtbh7EvrLZtFDrt29YF
lwprs7JzZftMl3wTq9FaVcTEkewG16i6QOwdP3+LeE6Nmnsdau+1M4rv+1gX
6lD4WpnulKmFRMyvC46HfTKCvCQZ5cwk4yD2960fGGSe5ewT7KewnfXujTHT
h3XePust6p30Yv34hF+HTU2mMXWODTJO0oo33jgxM8Z1KT5Yy9Z652AV76LF
4pi2zvyD2qTvtpTPbGe/TY2NeJ5Z9318Vc+2t3/Sp9clezQm+yr2ZReuRzFf
KmRLJ+h9xXTBxctq2r+7tJiK3Be+Qn1/Leqq790XdV/U2W9RVYuvrZXWd3n7
92GeAsDtQOjzVhOjOsAxSfe++Xdl6h7EFz5Jjk2i79WGXvhYVqcVa3he+frX
vFHmS3rIdb//a9GQ64KTEX3Bf//w6dJ1wccfSuf/K2eXVy+Ea1y+Vvl24eOO
aExRJgYzCLBYDKdIF1S1bRpRm0MXBADcHeL12tgP2L3oUUvOTczi+fulJ8y/
xJh1lb1sfdHnNuuCc/nWTWzqCn7DUy0pPfewS8ZeVdx+rVYux+qVRe1Nye5d
a5BZ8BD2cZPtV9wWNLZbiuMH5uwxpy4Y+x+vpGiKdVfXiu3XCu7L26NYyfJL
kHVBlV/DHdEF+Rq41sqPe+rRC/X0JayZ513PSnVBbZH7ukRdcAVx/fj7oO0U
WUeK7XIzfbEBALcGbptTdD15jrPMvpeNQt+PG08YK1vRXlFfXcKPwOp8NdXK
3p9pZp9m29+5F09Eje3/WqK9oMeb317Qw0/b9MWn39Pwj2UPymNd8N6szl/8
+DJzj+ga74oueJ6jC8JesBBKe0GVLWYa0AUBAHcN21DMz1ym8VWmc0FvO66F
NFTx0RxT2Kaymz3Oexe6YP+gRc2dZnb8/wKU0wVdso7byfwFvn/ttR9jxw3y
bSSK/9vEJfNQylXst+22TuMskc4ZU3e3ltjPtzkc+767Bb5hspbVK2GHw22M
2oMxObbahziuxvy64DJt5xJFNb4uatcV7TtPHbOeZR5fsFP8pqRcQxld0L3y
7enSt8+8V96zbOzXA106Kw4jx9ytJMe/UWVmObAv4jK+MKnJcj73L8bC7/72
Y7v49Y4PczSxFemCc2tfkS/uKuwF1TaT5RHj08rt5j9j8n21hl3mS66TNUre
1xK3FQBwA+AxaVqD1WQcCb9Jld27EHMt/va3VbHPFtEFM3Q+zuDhl6W2Xz6S
vaCvDX6YpfNd0qP3m3dKF6QrI5pPRGMKlluxkuP3BabYp83EOIRrrrl9EnRB
AMAdQ4jnP+sChfgKeyY5l4agaVX30sdXiRhdW/osflySt68LMt81lR1YCYrZ
CblknejJWGhaRo7TTJ2pkvhbbdebI0s6Dc+PG5cK6QOTjMP4O9g6TtcepnGN
4/2bJ2V0VIfahWz4NGYTtwRdcL1Ntq+lKjRWX3u1B+3o3O2BnaLH+jqtHevi
ObpgFAduQlHsuUhHCffl78Tm9H1w/ZjrUvH37++U1QWr1D7Qi+XDDYu//W7S
f6IIxvZ0H22zrfT5yrpXPCZ6o8jzJOU8l5+LeXPdaCn9lzvqB7GYQj/w3kk3
zovhPast77eeEGe0T9ZwNbqgttEkveR99bdvbWn5z8+1SXVtmmuoSJH7kWrB
/TStoayD3D/J7VY0/4tcitklAwBuBnx9ID+u9TxYbE1Vv/VxRx3qRv27ep1q
Obpgkx7+lLIIPLmgz7ht4TJ1wb8devPHS3r96iW9+Sur9rIf8bSc/pEy0Rg9
E7d9v4Au6I3d3T8vC9bnHaBc1419tpC/pyAX8TpqNBcpE3sbuiAA4A7B10Vq
B2bwLXRsMR9GfUfWmKpk+LYc5yaZQytRrJFFeiLfbY36irjHebG7fMZlt8nT
BUM9ZcH4G7m64MRmmgLX8aYxAscHsn9wXqmRH03Gj3lbV2huQh28c3N7nPqe
MdNmvXGDFLNwbcMb00njcf+54Jpg46jkGOOyW/CaqsvVBfPuaWEbz5y8Hjk6
Dx+bi3HU8uOqF9O4l+s7XVxP4fO4nHmJov68v8n3SY/HuIl18fB4JXMBr6Uc
J6p7aT2qRsZgibqgaxbzTy9U0v3Q588d7udRWbAO1+E1xj7SCV3wIGnnXKQs
NVcyAGB5uDb1j3VqeePJxnaT9BOL3CuWTyrv231tk3GkUzPYv0W9oRPE+TVP
DdL32wn/D2dkUkuKn9I58+3Jx1Hs2EXPETIe9GbX1aDWnk6mH+fFu17du86s
fB9Bs1yNhXZp7rapeyp9I7xx+fisK/koVKnv20yPxK/osnTBtJiA7i/fR9v4
+TvSdMEwl4mfk/jxhTjAdEfPgr/f8/Y7/cP7w9+/038/bSXq8MHnz+iN8l6p
dcFP9N+V1zd8FNs3fvB+tr2gOz6jx58r2uP//Pwmyfq8fvrtLP+Kdz0fP6E3
yvZt0z1/G+/cX/+c7e9cGGYbGH/32Bg6TRd0/RjKFvVPutTe1YUYRu6lSfpe
i5rec9w+yopvHRPkctxrTp/9/V4wz/DfPf89anvvQmLt+NqZnt975tv7LF66
/54dT9+9ZmDrIO3nWNTdj+tWhCLvVjwmZXMRNl7LXUuALggAuCvYMxvAjHle
dd8Q4ttVdzrUWC8yR6uSftxh2pLabzCe//m2bFNfsFhjNAP/sDgeX5FtyumC
C1FAY7JPYtu86nZHsOtzr2zRDy6nyL6P1imzQ1RpLFcmdfz4kIo1eOe8J9kw
aqQPp0eQfZabx4q8Gzl0N9lxz8aBv/DYG8OOR77vMNOdhXovw14weyxc3Pd7
SbrgpjdH4PEZt3oZ5yxyrTHjM+/dPF1COTHIKuq+xXxX0q4lNxYk10gv0i+Q
5zFaS2lrfj8Dn6oUO0zfFDPQyjPumVj3oqW+XF1wNgddyn09NVPttOnSoPpm
PRjLZ5cm1RX+77WdZoF9vePv9qR3x53lUpLm66m6oDdW9/vMieqeutP5PXsm
oQsCcPMwmY9CZbMh5IWK+pTD9HEGH5NoG/WoT+JrFNwGPG99p6swhSt7jili
brj6botq0nhaT8vT5Md93orrWfX6WqFdtllMn8y1mJowtl5MF/yKHkWa2Jc0
+FPeckKnD0Jd7Sv67MN0XZDnMvnvb+IAg8cn/OTz78TcxXL5WKVPsviCH39L
Dz8O7QC/T+pyLAfKBx9/Qx+l6YKTS3r8QPaPVhT5HFKOlc+eSgu/f/6PPuA2
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
YnP+orpgwp+wIG9bFxT8MteSOTakM6TaVN5oXdAfJ0m+yJEWOscz1tvScvfl
9oLN3Ra1hNKM5z2Sn7EpxUGKx3NtUt6Za28sNbOtKJpjouy9Mnen1+vr5co6
vLX4gt7Y1b9WyZ61jC449U13yXV58ba5Mgu8s7xvqkv31Cs79Wi+K74f3P5F
LJm6XqKdx9G9nj4TLcpT+hyWvzAYk6fln1ddLeILAnC3cMVYX9U9gxzXIfNw
lmPK6+P7B7FdUvukP1vDCG3jeYyzcH+X7HMjmns3NuNvWPPEov5+hXjeY24/
FORtn+VRjfvCxc4RaiSqfjz+vsp2Sw61hL5KI/2M9ZVeG/XDNlqrk8k+hJag
NTpRvNt2Spzf5eqCfh6N0L/2W3ot/HJDdUGvrcPfwrzEEQX9iH098fmvF/Tm
j5c0/vUFfXFf9g0Wr3f4KM41cu8ht6mcCHrjew+eJy+U+8gG393ycT9yEd7L
RvK7zmP0aU0yTvXZsz/d0hbyCFfJGDnkXttk7E2ftep2I9bmvP2t0SymdTiW
4tpdwkZYjCfTlHU9aa2hc9AU6rbIu7UUoAsCAO463rzWvjCpu9+Mcxho3hiD
5cHNjC9I2flyp+eI+/rIZj3taIfMpyzLXukd6oLcRj+5Fiedt4BeIeYj9o7n
fWeb201q77WpvlE8HraM4J+34viCsiZYlX0HSnCTdcHMUvoZY89JEXtBRUx1
n9jOr0b9ke29u2G9bVH7mZVu1hq1t495VlzvKX2vLvvUPc3oAwrqgrU9nYyT
HvWO1cU4ZvPFtP7hOjloLKMLFilF+qbaoaq9437VfzbGNqvrpWi7F47/C7/j
3ryhITwXVWXcLRVjKR9n46hYn1RMF/Tzuvj3Lu2+GtRjOgN0QQDeLb2tlL7P
67P8LmWc0Pyrwlzd2E7rO6fb2UfJNYMOW29U9seb4rd0/nOI47gmy7Nmn8Vx
HuScCj6CTRQvWjye07b1hE2+ao0kK27DorrgUJVP4x9X4bcs6oLyflxne7u6
oM9kWmeZv4dxbpFMO8O8wq539Ez99+icYj6TRz9LxnKyLjhXnrBs+PqdttNP
bqAYzwrjdSk+eGI7NjeM3/dOpP9xXTEZX32cnlMkpW61A3EuMe+7tRSgCwIA
7hiuNxcen5vUO+wI66Ri/yrqgtXtNnX2O4qiU2enmv4NCBH6+hr1Tg31vM+b
57e34rz26XNEb/+jOC9o5tyb+9gtJUatw/z20vxkmS3cnhnoNJEtkR1/c8M1
bTlumnMix4Gc6TnK2F/pFJ9vJ9u3u1d0/u2SsSvmtFbG6CtB7J+z2JjpxuuC
3K9W3td/ZhyHHO995e3bOzOD+6gfdAJbwfpmNaERcf24n5gTaYU1oCIsS8ON
yNL7R3PGFyyhp69cF5y45Pj31RmzfqRJ5rDvvXdd0vfb1NppUI3leY+uOVqD
cISc0dOSYgMq11+Rr9oo268civ2Tb4OTd+uz3kW+FpQf0dKO3pns9SoAwMq5
FmMRBPN41h/wOGNrWiNpv3NtJvav+HP62QGsfd4PVql7Lh1gJOoslZ1esi+a
9xzRGFijyrpGa2tyn1shfZC+hmafdhTrN2ukbTTJkK9jxljSKLkWqWIxXbAt
+t1m4sa2cO9/S68lzeX1028iLeypvO44fh5pcJ89UXfaXBdMbsN0wQfPlPsr
mYzo4fsptoTBOV/E9oSsfPDgB7L+ntDrJ+3E9XJ7wC+eqgchr3/8Nj6ewr6x
uy0+b8vWBXnswLQc4XwM0FSs7cnfeOFZ9/av8O//juj7wbXtrtxE3JZQFeNa
qlvjUG1fMM+7tRSgCwIA7goFtI3KZoP0E5Mct9j2uXPgEudepGT514q+lBVq
7qn0zYJlr0VVbmeTauMV64LanqwL2KR78/7mTot6s++XMGf2h0T+OHa9SrXN
mlf8/zaoNyz/rZvXP08uaZqac2FQXbJHk9f2yiPFCV9gzW81uqA3tzln+SGG
JunhOC/D5m96HP5vN/LLCN49yb5SjK9crjT92G+ORa0Mm9W6n3e8bNu6buw/
Hfw/90Vd0viW64K+nufaZJwY1B/0yThosPr3pn87NRSl7/1mRDZx2laH+mf9
4DhWzmtURhdsHBhSDpisnCGz4wtz0DKlQr1Ll5zznqTridt0TtPXSCL/vqjU
qK+Im1UE2T54bb1JZsaxZJto99IM7pV/X6L3x6//ST/9vnp/7590oraNnwGz
/LMMAFgO3rdsPIuf7Mhrr+FvowwbdLa/7chxVGa/XTA7eAnXHnvfYYvGWTGz
5zyHfWFFmoe/TjcOY0WP0usjHnu6Dm/O9km0jwJ7ZAXbF9l2Hl0QcFx6M74g
67ffvfs/ojd/vZ1WdCObvqwY3Cs8v/fOBO9CxjMWbhM866rfisSpn6duV9P3
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
1V7X+zfi3lSiXKZx7rlBFwQAAPAqsfaEBqLrK8o1N138Pq+ZEcY2qUjxUTtW
5nPyWO3CjZbWn13uGLIv2ThR1jjDOV3tf8z9Ok0uBddWpHzL8LML4cvIeRbK
Nd2JLujTA6b5vT/N+83w5y/0PtfuRkzs+nsodMEF+xHzvslf/yaf52unC07Y
7yujQb1pbr3I6XDY2m92jZv7dcaeJt9F6kfXIFfV3m5tlntciX1/Q3wvhO8u
cmsqSd68pElrNPgl3uulgC4IAABrw2aaTjcnhv1VUKY3SXn4Gm+LHNeLat8t
a3Mdt4Q2I69Tr0jLCWtXh7WNd/Nyh+vUv3RFPbqiWFDNcxhreyDHz61/mfhs
LJ7QaCk1EZfVBYtN0m6V/todXb50WV3Qd7L9phe2/HhX96QmfP2Cc+P+Y+3Y
iWpd52np/q2I6YAuCAAAYFm8C6YD7PS12zis71omZ9Jl83NOPxI+7zfV2Knw
HM5YTUNVn1vRMex2RZq/eZ8E56Sb1myO8dOeYaGpNQ55DmakCynxYpLOWlDf
5U50wckV/ZvpfWe/5znmEzr7NKcO4IK6YNjzePzkgs7/+6PoZ6zR/l47XVCz
Xls/FjU1/UvWEy+jnfE8HH1uuqwbZrU3bxr/Z/D+38mj5Zql5jvhs+9zduzl
3uulgC4IAABrQYox0q29xluRddCMeq4195ozrbFbp85pjmY28cg6Msk86pEz
I8SvdK/WdEyTrGF+TZRV9SOeD3FcY6dLg4tBHNN2btPgWOhpqS7Inkfj0CL7
whZ2kt0+96ieG/Usa+VqgYtZxo8P5ucK93fa3UzP5NqBRQ7zESqZXIM71AVJ
+e2yUZHqAyXXVC5e0KXurO/Efos67Q51gn/mb9eg1lFRXjMJPbakLqjWQ8qS
f88BAACAuZA0BiOTmxtvM2bb1DJzeo/18jA1+ZDyNpq5m+ScTd069yqOkc3r
CK43p5+ZP2T+Bo+punWpt8/8s81mVjuR7qk+xzThTnTBv4ZMk/uGXhSs1/Ox
3uf63By6oP/7U3p0/xt6X9Pz+E3RBUWeTPI7qyddM9eY1djVMcsfrh3r+/OM
j1iOsSY+N9aVxXdCWgu/7sV/12mGJOcBqWMv9V4vC3RBAABYPTx+3Zj2DQ5j
yy4H1N0LfYzkb7ak/ZSx3DxXX+hIlXaxHlFaFyw1Jo8XfDW6YKYG3SSbEypr
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
JV9ys0lmpEPyHuOLv9crAbogAACsn0ngI13Z1DtoUiXJtzACH4P1TyisL0jF
/XLjYwhdo3ZUXEdZ1MaYEaf+CnVBXh9EG1u2hC4YjTeyqLnbpE67Q/Wt8vWw
VYSGNivmX8Oc9QVVTbB6oMuvLkc5XbDY5tUFi3VQ3j+uzu5l8fvlX/Wpc2iJ
PiXsnU16aPOck2zeSHa/Il2w1jbJOu1T/0Rv1gn7DQVdEAAAwBLw+Uuyrbif
1jgzX1clvSCKldLO4fF27nF2vu+y9Ubtuti2PBcvfgzZj2uyPmvuhZmu8TUz
uaJKjWFJixL+nLFrZmrP6fybTJ033fZr1wUD/noqaXt5du+R/geD85W+1/C/
/u8/9JImdH5vxtjviH9/X80Vfv6zsv23crxiiKoLqvGjK8BuC41ZVx9Q977y
9zmtcaPzacPtrnVxuMLX5rpixo+9LugpknduQyXzf8H3eiVAFwQAgJXj33o0
vrSpf9SV1knl/8fLumB1t0Pdg67GTOruVdn8NFsXDDWq/pml1y5O+9TZSeYX
gzpHoZah0ziC/Y87aaxVoS7IYrZWUyfXm655T/U27fzEYuHadpQ36vtxz1rf
FT05kjVttUacd6rWgYwtW0ukGOFjFt1L/f3ttcU5zMrJlfIbwuvaz6spWA6R
n5P129alC/J4QHVfXpNFXoPNqy+YA6spmP6W4L5YTo+SQg18tGB9wTk1ZgAA
AEDiVu6DEOlYbSudC3kfhQ2jkY0hurUz+1dCXWE6gHPAfdQq9S6VAUay1lPZ
62fn4UWPkfrABlU2DWn/2CpknudXBnbPulINwtSH2GqSpV7HlLGiUXItUseq
dcEHRbpgyOSGzu539Lrde9/Q2ZUm4TrFo0effqHZ90ty/oo/P7v3pebzL+i7
n66CY1+lucRST5MIn84+l8ce/pU9fm9Xftar1QV57UD97w1Ze6tk3+fgHE1V
a99s0ODan+7fld+PY/5+cB27kckh9s6FH1vX9LlWz80c6t+FRd7rlQBdEAAA
Voekzemtst0g89SO45tKbK9aOV1w9VYU+2SzOr7hXNds6/TNktZuUdVgx87V
gsT8bLTVviMumXsNau61qD+dQ6VYtXCpNfRjN6tU264FFv6zQf2cObqIshra
ohqbd2VR3ZC3rR0uHic4HVWuE16wnl4/HpB9YQs7M8vnEbNx/ZFVUINoTA12
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
mBhNAAAAbzZ8TuR+Xge64BL414GfcxH4bNyGRb7Jq+Plk5/pwcMf6ZH5Iw1/
f0PWghOC3wyOep8DG8/0o3Le+5J+oXuZPaY9I1dlkX0AAAD8synUBSeO0JM2
a9Tcb1JzT2ctauxUCvUdrhXNa5XNSikzNgwyr5RjT0I9Sq8Njo9qC5+TakWx
YHKs3nJWnTdWceJSy1j8eDqNd9bxGun+NXISn4dpWsbemnVBHs/HbcdayfDu
aaPUc5e+Pzv9JY/qU29bfy3L6M5vTIwmAACANx/fj9bsrD3hM1YP3+I6NndA
3rr7XP7bXx69/P2aXjx/Ri//WJ9K63z1Bf3r/5qRff3bG6YGB35sRetLlYhf
iOIMXOn3iLFfZq3ap47umIUxE4vsAwAA4J9OWV2wejRj7fF6hr4zic0bsrzR
MA9yQsy8dE0t0Y7sOfVEvbbkSz5oaH3XXzyGcU59hWtfyTX7oW9cyoIBPKGp
zacLetTVrlGuTzcSea6K/ncp7kHjRKxZrite0A/jOF05TrJ1vhoftL+T+Fit
whgHrteJuMnFEN/T+Ltq37LjBPcwjHM1DGMu29Dp6AAAAMCasXaNdE4zR6/6
bN5sUv/AqJN50qf+cfmazS9+e0yffdBMtTpun917RM6KY/qc7pfp+N89ecN0
QfabqLZvUv+kT73wXp+W98sHe8bc/rVz2ouPExzPbNfj/bfMQo1vkX0AAAD8
s+G6YLa+II93Msl1XRqPxhlzr12yj+ql9J1iHUjE2ifrx+5pl2pbTL/balCT
50PuNSXtp+jYFpuPNzaD6/Fcci6dKKfWuRqTM+yJGoJ7PXJG7LPzTrqv/JkT
jVFU9m9p7Yvrs2V1wYlLHSWHOrzm6OiTPHNlHXGrO2ftE086Zp/F0on3zKA+
T2UYiXtjXs1zrHLnI2IlZS1tXmIfK/C3jzpsvbhK5unULwws7C3C7xd/3xqH
/bi+Zo71Tyxyc87PPWtJz7Gr9sQBAAAA3hS4b7mKGht5eDaZh9Zbo4V4w37g
c2TX6FP/asucY7QJnd9vafVA1e4/erqya3jddMHxw2/oX+806d13viHnrxkb
s/d2MX/VpWb63i9Y5zvxmTfn0PgW2QcAAMA/AI1elLHpfCX5bsvG7MWU1gW5
/pVqRwZZuvIY7PN+YW8HfxrDXyNb546w3iJGW+07Mk7vReazGdy1Lhj2wM19
bltdvQ9+61CTvxebnbl9dR4rKPcb8anLxu6cJbVObLKORE5u48iK6xpm6rcs
VueQbkS9yOXWSf1MnUq9sd49t7Y+l3nO742qCTYK6xkCAAAArzc8lt7YXU19
D81Rpv5kg96Kqmr+tD6K5n6luuAcus/L/34v63/vfUnfPfyZzv77mB7c/4be
V7TBB7P69pXkddMFxfm0aDiHLriQL39dvidfHunviTme9SL7AAAA+AeQWx9D
o28ouqAR1vDT5SRGf1+jLsg0Ft3Yok6gJhc6hGtKYa+R3NMLawoPyA7tOruR
7zqRTjVvT+C71AVtprNFZjTJHjnUknStKvVY/WH33BT6WZF2WHiOY6qzMXo8
L4jrcwuZkY1lLYF7Iu5FbVYefCF5NaNVE++fnPe7gC4YvKdWWx6jfiye/fjU
JPMMNZkAAAC8WdjtSjqvraq+h0oyB1dK1XB73RE+SFSLRmF+XdCj794Tmt+H
X51nN5l4dN7tRJ9/3B0uewHiXF8zXXB4/4s70wXHxyKvqn6ymFoNXRAAAMDK
mLjUO+hQ96BL5qFJza0k19GgRjv8W5c6B71YF2JzYGVWnFpJ7UvtwVFJtcYK
VZi2KOlfvKbHUfY80nzNTbWnnU/WfiW6NlP1pYIxG8Fx5d4lVapt12Lbqmb6
mlS34s+r6mfBOEVxXPyaF8o9YLGKs3RBXrPH2DFZXqtHPfZZdO93mtTcrsh/
21ss58ZuszqQiu8xb43IrNVpvEC8IO/TUdgfZCZMF9zsxu9YkntNvHZiVRNn
WycnzA/W1Y6chJpsU/u9cQ7le9bkuUPeQOis8PMAAAC8MayuvkceDlsfNVdY
t/jVEPhuO4nvxnq5MebWBf8a0odpLOCX5Pydv+nL589KDDgh/4+kZ8mNvBav
nutcumD5cfX73kTn//L3G/K11+jTg7S2YqvwPsRDLqML8vXlnNynMqNAFwQA
ALAmRKydxt/g+saeld8vQ+knMo8umGey/iXyOCv7A2VEVtNO6fk6PpK1lfoR
WzcuFTdZ3irt/DVpfs31gz4NziyyStuArONmzn3R4VF3u0KtE/12al6qpD2d
LeiojHryWDxnV9HIbDfsyZaYTy6r21g7dqI+heLzwG68uPfKvEjHbS6ZR8T8
OU0+sni+1eg7xHtvz4pTzI0lZbnxSf/s5Fy43lk/Cu6Z50Y1Phe2V79kDwAA
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
rT8Uvl9rqGy9Al0wrLMotCODqjtNMo8tcq7194U/h456Pul5+eReTWMQ9+px
nB3v+ezHx+xO99fm2vouOUVF/LhOvCJdUOScB377YY+aoa9udNLfCGP2ubbm
YQb5t0C+yTU63dOm9NlA8yhm6YLeRbY2Zblzzjl/+IUAAABWDK+flrd25RxW
8/0Ol+lnOdoIX8fW9UnzzlhNQ1WfW9Ex7HZFmo+53+KcdMkcylpXl+VhqDUO
eW5xlG+ghLhJOutFvo+7sC6YnOXzC3rweStHH2zR2Zjna/OYve/pZd6gzx/P
pwsuM+74MTvfb/S1B7XIuqCzJl1Qyq1J9mfvP/9e1E+Ku+RBFwQAALAyQq1n
ZFPvoKWvS7bVIvvSuhNdsMi0+hjLJa4fD6iX5hAX1+OQuGH9VydMFzQaUf+Q
zn5j6jca1NgP/rsdW43lpbamf0vrRZeYa0WPWiOTtyLpgnNrPgLfdcm7LXcj
eM3DZeL0/LTOTY72FNX2Ce65q7GbsBeK0HZbp07+tqWb5sr9etP341Z8LuUZ
FdTC5GMuoguGSLq72jOHinRBn+zDuvY482vH0AUBAACsiYnL6uBpfJxoG96j
LFv3hc/bulwSeZuKdp1N1JWRdZdVHkOK/0uuN8eP4OvBUqzgrUu9feYbbDYz
mqB8T/X1mROW1QVT/nwW9fJ9N6MNspxdqZdxWJewFffw1Vja1+SroTjXPF1w
iXH9Jyz/+KMf57jgu9AFE/9LvJvV9kD6XGjHRib3PjMadEEAAAArQtRMVs2Q
1jl9P6wV6JF77ZLnedP/9iNfJa2Tsdkld0LpZ6rpWEoXVNZeU9st6iOi7D/V
9yphTgavJZj4iEx75H5jut63aWr/NqNjBKsr3YjumQQ7D2O7SeaRWWwHJtl5
S4o8HyF4pkbki8hmGNkc4fhvOWbo/fjMNara0wp65c7SmbOnMdV6WX3FDs9n
uuW9dHT1jWZcm07bS3OjND29g627TFOsKD0+8nRBtVdNPXjmrU3oggAAAF4v
eP+3vFhByfdU82lZjeXcPEoe66erwRb4G/UC3XElx0ivpaH4Jw19rUO+Rrlj
0uDUlPsPG1UyT3Pm8+vyuaUr0wUT/r6mx/fk+MGPzafTz4ZSzm4Ze7+MLrjE
uLwu4Yfdp3Nc6B3ogonPaeS8Kzz3XeNfqkAXBAAAsDJ47bXNCvNrND3UmEYm
5kC5B8O8c8ysviPdGdoHzxNJ9burkmfBrj3KMdHM8ZJ/y9Zoee5Ia5qzXNoX
41qUTsPkdRJLWl7u7yp7H8+ny2m0pwX7WevNKKUL+sP4+lPfXq3Xw56vocsz
mnVtmndevNM6XZCi58/jb/n7mvt9YO9MZ5rLlF97c47zh18IAABghfA4PK1v
Evg4dTYHqrmSIp9Crdkn4LGAurwKac1ZU8dvFceQtk37Dyf+hFIvcaKrU2NQ
bbe4xkt6viz3tHY8Lt521brglOFXrJfHew/jsf+W4/oe/XpBw1/Pc+38f7/Q
+A/x46JIF1x0XK4Lvvvpz3Nc4fp1Qfk3RfD9UPLBpdz39myfFLogAACAlTFx
qRfGm43iuUnUYstqGkJj4vkUcj82TxsvmH/40v2Ic30yN64Xl8yzc2iT3C+M
YgGZ35acy2BPiaWb9mmQ80jjHrdl4wX5vK+tHTK3Lmjk57+6NnX2O9Q96BZa
Z1fci+puie3bZjbOUUIXLxjWJ3TIybHxyCWb1VVpHtvkhj1rtNuPC/vjJdiS
r16VeqqE8Ho9uXUVy1wb/3SWLkiqbyhiRovyiK12iwau+G/oggAAAF4rJP9F
n+9q7U0/n+YlyLmSvE6HPndXzTMxR9lZjPt3WT9r+WN4rjqmp+SvVOW19RuL
rYsW5wFrzoblmOT1VRasSxf0n/yg0QV5j49v6MWcY+brgouP6189YnGEBbUJ
M6xfF+Q+p06v5lp0mRrb0AUBAACsC1FjOatpiPXKmtRndXattfzYsll9FpKx
K/tWVAfRbHfJlnxIjzrMXzL2sj3ttPBaLUYrjtWX5niS4tsaRz1qTPXHMIez
rlyjsdcn+6heYq5V7pcuT4DnEScxbJMZtiwj1u/jSvmsZI1CmQW1J+k8lvVY
WI57+NzUNXapXs+svGjO8rpgiLU7fbd3e+k7wL8Pak3yvHOALggAAOC1QNEF
1TnQPesIv8lg/ldK4NMZBfOyz/yj6J91Tc4uH4PpjhPd5wsc4zqepzN+rVJr
sMe0RDl3Q5OPI58Audcl6p3kjDG/LujRo0879OBJcTE7/7f/CL3tg0fTsbmW
1qR/Pyrb+3d6rrn9iJcYV4k1/Pq3svWo+TG/JOfvGZvPqwtKPqfGx5Ny33Xv
dRboggAAANZFkS7Y29H5UcvpglL/2aR+38SP+gTbZz3W30MYj+uyD7L9k3Vr
xyo+65VXO5rqKlJ9QZ/GaexacP7B/Oydxrpf1Id3Om87NywfJjnXorl2lK2n
mB4/YRX9iPPw7GjsUMeUotFy9FnnZBrbuNXJ1sEuZDHtaZZOPBcs711b74fX
XkzWbUtprEvmEScEPqI9VBb+031n/26ALggAAOC1Qo0XZBOMqL0rLJ6/Yj2k
fuxG67HVnP3DObPF14HDf0a1QcLafQY1T6fzKdfnjE40x8Ux+pV4Tl7yGPFY
+p4Q3CeV1jZ53bgNUX8mg+dQMzp+J52beX5B0ld5sB9em77m4Xy6oE/n90Tv
jnsPL/T7/PWU7r2jrxH48n/fs/i8L+jxSO8s+s+fZcbmuuCDK3m/xced0Nnn
vPZgh4Z/Zvd78esjevBf3nBG1iIfP5/hEM6rC/IakZp6lVKMavTOudH3oiiX
BbogAACAdZGrCyo+jah7wXswNMkOczwvZbMD0+Z8Bn9zz4U+F9Va2cz2wFAt
mX+T2nFZa5bPceU5JOkcb1D3pCd8251pTbqJR/apKbTKaT1tpx2c87ZJ1uHs
eMFsb9zsuvLadEFX7itdYbnZWj1OWruM74t5UXbd9dXrguNjUde8epCt0yLe
9Q1qhD76TZ/K1S3M5s7z2E0v1Zxn6IIaRP3yWftCFwQAAPCa4ct19Kptizw/
8J2OpmuMuz0aHIq5uXM6mOZ8JGt3cpx/vL9P7qU19Yuq1NiupJ83Tx0aHFSI
9z3msXlhDRp/ugYo/NbljpHkKOvmXlG7RF3b86iV8afYumBwjwbJPdqoSzVP
pJo3V17q20g91Bhz6YKTEd3L9PD4gu599YjOfr0g58k5Pf5K7UncUnQ2j757
Tx7j392f6cXvN+T/eUMvnvxCX38Sa48fP5QTUpyu6GfyWfcXevmnv5Jx6Y9f
lHP+gr5+9Au9eH5NL67O6btPW+nfz35PHpRPjz/hPZC/peE42H50To8e/qLp
bTOfLjirRiT3SeuH1rRHXavw9wx0QQAAAOsiTxfkfTZS3WaqEfHYqXIofdnK
2FaLrKFDrjc9qRtZp2yc2DRg52gU9STmcWTbffH3nLp+PakPsfBn07XgiRfp
nrPqC0prgeE2ku5WTX3adeiC7oWioW6bUu5Orh43cTPPqnZYpj/Hq9YF5ThW
3ks6+3ngn5/243u+V6aXdZkY2cV0waJ43bxzgC4IAADgdaG/kzMnbsV+x5jp
H8l8x3WwpMaGbk4Nt3OP1f2FPxqi1gZMfB4+1y1+DHn+b56I+de9MFO/NI1d
ZKg9J1IzxHq4sZut3exk7lfoh+XP+3PnEU+e0YNPVG0w3x78pgmUVOIJc+2d
H6RzevHTN/Lnap+QBccNefnbw3LXw+IQ/d9+yN3u/A/1vs2jC/qs/qTQsDnZ
51ybWYcSuiAAAIB1odUllFhBYeF6py3q+5XWBeXautyMzSrV9zpkngxofO2k
Y0t9R3y5l12YAxr3tRhLtTsy9eSm8F4iXR6fz+b41nEvHovpRL4u75Tfu0Jd
0KMWy4lO8gLUmMfWiU3ejchxmdUDbyYTj/r7Sq71TlHuq96/sQ/q8nPa6VFx
5OAr1gWlnr+sHo/u/HK00oKzXJsuKOJJq6X7PUMXBAAA8Npw62RqMNfaVjrX
OKy/2IbRyPQDC+dvdf9KqJdNB3Ci2D0xV/YulQG4rxbuq9RNWeoYgZ+Z5JVU
tPktFTLP8xuDuGddqQZh6lNtNclSr2PKWNEouRapY9G+Iy+e/Ez3PvoiVxf7
8NMfyPmjKBnHo7OuGlso7LP7j+nFn8r+YbyipPv9R+s/zz1uwvMLup9zTe9/
9D0Nn2eFN+fht3r9UMlznksX5HEAm5q64qR8LzabpWr3QBcEAACwLux2NfWD
El2Cr/02z/2odot+zbNJ9sgl78Yj75b1I74N/vsm+Dub47wLk+q7LTKP+zQI
4wBvPG2ucUb7yPhySs6w4g9m8iyk+s1KvWteX1DtvUEsHjCnrkyqdWrmWmkd
UKlJNz5u6O/nRtyTYuwG98/zonup7zsS3uNs3+fxuSnl80Tj7Vt6P+Byth7H
64Unvo2b61S8Yl2QvQcid0g5P1ZDSPu7If8sJV2wd2GTzcw6KpsLLDPm91dT
eybvHBbSBTfnfzYAAABAKQK/ZDytJeOp+kby2aigsS7bP80TUT+7cvU1agJ8
d0x24FuObwpmuAWP4V45oldY4JuNk/o5o/zzkccO9rm0oxo74T6Z+6PBHcU1
ecpsu3Q/4r89ejkeBdf+NLLx+Jr8v+docBfcu5fPR8F+z+jF6IrGz69n1G6+
De7hMDrWi98LVmfnHpfx1020T3RNoxG9/GvGnQnuQbj9i+fPotxjX9eDZIF+
xIWwd64s0AUBAACsDp96OxXaMCrK2mc1qo3injbF31jvXO/S1K55FlpOjeSi
c0u1j8Nx4DqocYu17Doz8RptU22Q5ZfwfOioxjWnxBxvHzaoleaHeNTbq1N9
t0nNHb7OJ8+1npTDq88f4Pkni1tV1LOZuJm18NapiJ/0ryxqBufdaXfJPGhR
lcUydotqHCt1w3U1UqZbvvL6grMP5pET/m7IFzfzdhS6mi5GNr2Ggn47Ug55
NuZgdpxoSV0weA8621Wq7dSpEb6n+y2pbtJs/REAAAAAbwqpLjhHDg9YgBmx
BHfCaAGNb5F9AAAA/AOQ46a4BhjOFxaLFZR6q0W7ejQ4MamxXS2lERr7ZerS
KefGtQ8p1k+vCSaIuEemC0pajKbfqy/GL6VJZfpyTPXGE1n4c1n/i7zc5uR6
xxcWdfcbrOfxPLprR57jk95nWy2ylfhGVTuVdEtNLKR0lqN+dJ+q7UHhtSwS
k8brha9dF1yCQfJ+afoRh+vXcaxswQATV8p5l2yzReM5ep8U6oK+Xag3G3tF
zxAAAAAAbxKpLmjUqXdmkXUa2IlFTtm2caAcTBesH/TISu71+Qr7BWrwr+3o
eYbH6yc1fnS+6JL7AAAA+OfhnptRHFGn3aFW+M9Di+WH+mTtValeps5dmM/q
eeS6LrmjMY0jC2Pip3kaJfIfZML+JLE+1jqLtbYwXq261SqVnxmed0PV4YJz
dE5N6p7k1B48CDW5GvVH5WZL57gb3LNOeu/MM9198uNc7N1+qTHFuVKcgx3c
z+g+XrJ81fMBDc4s4Yec9mmgqU0TPg8tNxbVjEpwL6tTC/59u0nWVUnHsUTu
hn1Qm9/38GxqhOezWZV7NL+FhBpw/6RPvWOTzKPQesEzLJs/Ir4bRfXHo3dv
N3y+NaptCwv/u3U0gE8IAAAAvEXItRFZzkhBLghYgNx1184afSufutq4gKLc
j0X2AQAAAAAAAAAAAABvGt7IjteMuZ0iXnDlTDyy1fsc2kVRXtDyhGvK6jFn
rSkvsg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AG8Tz549g8FgMBgMBoPBYDAYDAaDwWBviUEXhMFgMBgMBoPBYDAYDAaDwf55
BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAGC1eJ4//07ugFp7LWrtm+TcLnZc+6BO1Z0WmScD8iZl
tm9QY79L/TOH/BLbS/gelbrMiUfWcY96xyZZQ0/zmUnmUZ8cT7/7645zVKeN
jQrV9zpk36zzSB6ZO3XqnpZ4VjcO9Y56ka33nFaJT4PDDpnHfRoM3eItr63g
e9INtrVW9t64V2Na4Fu7IK/2WvXHGVD3oBuYSXbxKS2EHXzPw/F7F2zw4D3O
vMsTl8z94N6cBNd7fXdPBAAAAAAAAAAAWJqJR+b2Bm1sbFDtYDDXrv5lN9ov
tM5wgd/Dvk3V6f4bRodmSgjB9hW2/VxHdK3psSpkjWbsOXHS41QOnPKfzTx/
lwanFllnS1owhuMupj/4V2b6zDY2auSsU8Zw++JY273i81r2XXoVBO9C+v5u
FV+fc1hNr693vfyhvfPWdLwKmRd3IFC/wmvNO596+h6H1qJlpMHBQT0ap36Y
fKd9Mjez33O7XYn+1jy2xc7sO9U4W4NACQAAbyO+T+61Q/a5ReZBixr7/dl+
IABvOsF7712PxXu/Z5aKiwAAAADWiXvSYL+tA9sxS/tlXGPqXs6v5dgHVUmj
6hx0qNOWrbXfJHP6W9s5rLHtjWAubVJjt6GxOtX3LUk3TH7jJ2ZesqucBHP0
jUee50Vxk97IIiPR/oJxvFv22bUl9JGdwIcN5/fws3D/2+J7wLWvZc1o24XH
0nJrU42Ps2WScxX45EN7hi0QmxngsOfbPEvud6hDV6i206DWodChl32XivCD
5+eO/j9777bayJW+cV+MT+YW/hdRhNxADiwIg3AOcyATcmaFYDQEjOhgRAej
JHhEglPugZYbHE0Tp8xAIn+YSPkcyiBQaEN1cL7q4FABwfvVKqmq3rVq1Vby
pjvPj1lk2qp9rVqbZ70bm4YnA+rttqh9WOHZ6biKdc/m0TTrCsjcCJ97i5xl
x39cTxfPK9RRPZs6W82UbyK9NLfaNMyz0byve007x6bmm9ixKh/R2jEinXV0
szjH4j7qoS7oDqN2ob4f1yHv4vbqLgAAvHnwfoKVIuvDIBXvyh/nnPtjNl7G
Wf31/fHq5+/pydNv6Zn5LY1/e836TX/OYKvP2S/TXF+XlHpfcKzkXCTPOcrx
39DhXg5pcGLRVPexLXyi+icl7R4A0W/joD4/e/qMTn+qtii+qncMAABVcc9N
uY9a7xbqo5bSctgcO18Ds2V7pSLF6Mn2hMwuUtUGp4eN4sfNKVn2UbKt3nKl
XtZWceZQx6h+vm7Z9+ufrxXt3yA7rE9M0zJ2blkXTKszW9X1I45zEmvqmXZx
/nVEeuzWYMmzetTf1N/LMrpzno3m/dyrntEeW0/YaFKDaf6tTM0yA1YvQ/tA
VReMn3szrs/E1yvqC00RAABAJp4XrNlZO7V4XHMALWIZ7P2avn8vM6b606VX
v13Ryxe/0qvfb0+ltT//lP7xf+2gfPHTa6YGc98lqfTy/ZgCOwNHmo8Yu0XW
qj3qFpnr5OJSRxnr6O/tttZ131y8n/8T1el3H59XOcKK3jEAACyJY8kaSgFt
sLqWo9j7rDeps9ua90WhdrXRDmwFW9sdGl27zJ5H/NYh87BHTa5zib8dmIt4
Y37R2oR50hhUlIHjpY6lVq2v8OfVFb6fIlaZGBsXKv4B3Fi7KKcLutTTrlGu
TjdKnDHyc1X0P2Zb1TqO18Buy17QE3acjmwn2TlbzRh0sBX22Z1MGweu18V2
k9WQbWZlHUo8Q6G1G4ZRqgjbW/My+5nfx73qmMfGDO+/RVPRRrmWtMbQPau2
thrbtzb843rUX3wzjUObnNNYF22dyMcfRm1KjUbiltO+YYyxAQBAwtqOx3bm
5L6v5vUmGh8YTTKPBzQ4Kh6z+eVPz+njf7YjXYOXjx89I3vFNn1277Po+F/9
/Jrpgmz9s7Fr0uB4QH3xrEvY2A3ZnKbo+No+6c/P45/P3FuMhTbMcprRdTxe
ktZ4w/HJxIzGl9H6p2bsMn36Jf3jrU/pbf/9PbnEgqjAu3wa1en3Ph9XOsZK
3jEAAKwCV9ZP8uLnVdVybG6ftx6vg3jn3fjczCdQ0gK4LsH6t7XN4u2mpDGu
m+S4DtkXduBTa19OyR734xiCO32yJ+y3M36N/Dc7OEZW2L+ltS82FimsC84c
6io+1OKeg7PP0ooj64gbvZKxT1zpnAM29oh1LYMGXF6ZxM/GvCxzrmLXE9tK
LmfTNe+z/fH2YZetF9fJPFmMC/0i8m3w58XrW+tgEMSHTCuDY4uclOtzTjvS
e+ypOXFWzH3eq47RAdcEa2SxuY7L2o5AkzypYDco2j/Dv79T8W3F8QUDGxZv
SuZ2nYytvtLOeNRTv6+UUtuDLQwAAERw+/LbtE/y23bzwHpj5tbueOD3w8k+
LhpfbZgljjajs8cdrR6olsfPflnZPTw0XXCuc7Xp7be+JPvPnI1Zva02XnWo
HdX7inG+wzHzejnNyDkKx1HtKCZzOCerb3eouxP7Y7T2utTamK97dpU41nav
86De321TpH6sQheUqPiOAQBgZYQx6Dby4wxW0rkkX9paIq6ZtbBLqm+b0RjR
Pon1kIHiwxj6ABubxXyfF1e+sFdszO17VFhuEUOdy8+m0Xgg8VveWe9YFxR5
YaV4grxs9PTP68amNtc5CvqUc7itoJxvRNZQuqdh7IwRWYfMHuvQmsc1TMRv
qRbnUNKPl1p38xJxKvWlRqPwJDejcv7vKXVD1QQr+8u+BvequxbVzldn32gf
NaVt6nvF5oGxjYVBxnqNan5JxDjwfwv+LrbhY/kS8Q0qxQQFAIA3FG5fbmyv
Jr6H5iyLmBCtpXJTPRi8RZ+jeV5RX1ZCR3j13dey/vfOZ/TV0+/p9Lvn9OTx
l/Suog0+ycvbV5CHpgvG19OhcQldsNJY/qp4Tr40ovlEKc0ojm9Yi3yX02Ie
ykX18X9o7++2KVI/Vq0LVnvHAACwYjy3kP5S2V7wpOvPrQ0yTy1qSTHvjDjf
B5ubi/8fjR3XDe32wd/zNB9+TyLXSOrGIqbwkEaiXCU38hw70KnK5gS+S11w
dKjkkzHaNJrY1JG0njr1WTxb58yU9ZA07TDzGqdSntg+9wu6tgrHlNQXI9ag
SsBz6zQOl9HTio2fAv+LxXXKfr8VtDK/nlp78jGaR/G7n56YC/u2VXMP96rj
Rq2za2Rm2EnaB7I2uLbeITtnyJoWR8DIjMdZm/vYsG+6uT+g4dk8Z/jwNP67
sdWb/+3yzR87AwBAUcL87qKsKr6HStgv1QrFcHvoxP2yar8lKK8LuvTVO22m
ZZwlN5m5dNbrBr9/0FuBDVR4rQ9MVxo//vTOdMEpW8NsHldTqytpRjdxXET1
up0LKzHWCuYaO6Y/d9DUtQf2/m6bIvUDuiAA4G/Nsr6fkg/JCkpq2+mRtVsL
dCVTHUv519Ba2ALFpU6Nzca8bNSV32pU35j/Xld/84+TZcfFdcFqz2taWBfk
MXsMkWM60vdc6m8b0nOrbbWpvSlrI8KPu0o/JOWEUN6HnH+6SmnO48mVhOfp
yMyZkQvTytZ7c3va0PeaeOzEemRL1mDXbguf2ZS4c85ZW6uV2QfyM5P8Y3nu
npWPG+7+XlWcczOhI2dpgiHTk45SbwzqnWZ8l5MRWWdDGp4Jm1QlN1AU77RD
1sJuVWh/o4XGF9fpOo2UuhnWO8TSBwAAldXF90jDZuuj5mufK94fu22FY7eG
lPsqpLQu+OeY3otsAT8j+6/0TV+9+LXAAWfk/R7mLLnWxqWLrrWUrlT8uPp9
r4Prf/XbNXnae/ToSRRbsZP5HOaHXEYX5GuuBlkVjViraEaxL49+LK3LwdhL
iX24Ml3wD/5uKgzwgzw5v87rxh9l8+sUPW+x+pGqC1a8RuiCAIA7Q8Rb2evF
eTrCsmfGMYonA2pwjUwtG0x72kjZJtDP2toxjKQlbA7IEzZ8rluiCK3BiX1T
U9rO6aGsrTR5TpLUvGLVSi3DV9BTbYtO57ZFxcqQrKNYT8n3I3apt1mjzrF+
O9UvVdKeTisOVCZ9+VjcflPRjUaO/B4dFrexcWQHeQqld33tznOvlEU6b3tJ
PyI2ntPYpsbvdx6v2WY6aJ6dYqotaaS9G1H+7PBauN7ZPPSfmeuQc7VEkYZ2
93Cv0QYOmds1pV4a1Fd9h68Gi283mTfFuxwkv+vNbr7t4KFib8iKsdmhoWQ/
7Eo5vuUYBy51F7/lxWkFAIA3Gr9NHx6b1NlpUWu7TeaJ319dD+M2Os/X48bx
xz8mtYP9OzQQ60Mzl0b+2Mjc75Kp5JpyJyPqbMrrn71zm6aX03RfmJLnCJme
DRb31aKOGD+LNaOgD2vn5vvwrqfSc2nvdqmv2v/74+LpeV9ZQ6/TcDIlW7Hj
uk1dMJsbGj/9OuFzHOQsefycXuk0zEK6UvnjRsyu6bT3b+2+H/zrGb0UNl9/
XdIX739GH/yzE+TPCH9/+51P6V1R3vK31dpQLqELeizeipTHzSP7VNSFNrV2
uv4YOfu4VTSjME6Tzgdd5J6M1mGNGhs/tbQa4rK64Msfv6WP30m+m3c//Ibs
35Mn9CbfBu/o7f/r0Olv/h/+/IW++igZF/Pdf32bWS+8yff0iSa/TvTOF+Xt
//uUnvy/41L1g+uCHwjjD79+VbnG+HjQBQEAdwOP66KWMDeWd2mmblOu1PX+
n6xvNba6cU6vwmXg72PGeYmz7AX3ZG2wtmtFv42OetSVNFKTeiz2bn27O//7
gRnH3jPq1E1oquljx9U+z7L5iPlFuP7Yo0/tLVV3YcW/t5YY306c4uuysym1
1OOw98HXIbX2U5It5QrzEY9Z/CKWF1mM263DXjAHaO/1M/PFsJ2YDV2WVtYk
a9xntm76cZV+X9WP2KGeX/9sxZbCOeF+4l1ymS1p1SLHv7uHew2+RY1ebbS0
cUB5bmu9vjil7mbyPpv7ljaGAI9PWPfrhLllaJ9TbcukqXgfzkA+LvcH8uK4
g+2TNyKqFQAAlGZ0GK9n1jZb1NpItqtZa0k8Joqx0aTmol/icR5435UWFyIs
Op+BsueY4y7iVC/a/90ONZTYE2ZaLL5rm7psDFbfbsvPZTsen/Yy41k0pP62
tC44m9AnTK9479H3RfZSjnFFX6XkMY5jFn5DL5VxQa6uVPG4Ab+f08e5eVQ+
I/v/G2t1Q6m89Z/ks1xCF+Q50iI7AncUz2OicU8v8x2W1ozYNet89u2DsD4u
xnAs7k9Xc4/VdcEZjT//LOfdfEqnL+QXK2lu//qa6dma8v4z7TN59b9vcs4r
l6/+nx9L1Q9+jYH+V+Ea5XuGLggAuBtkjUpZV72IdUERB1D1o439ZnkflrKN
iPtnNPX5tu7Mj3iO6l9o7GTFuZ7q841dLZ5bqXxvi2eeocWWLWVskIQd2SjQ
AvV+vI2dLnV30mLDGdTY7lD/ZEhTJy3upEf9xTpkvN7I3ofL81Ho/YWWjr2Y
wmg3HnuH8XjccdI/tVhOiKJaWYPMg3ieUSRuUpn7V/XloH6yXDlVSzVdcFX3
qs9zUt8dpOY/KvrM7GOd1sjG3DOXrF32bSzW8PuL+w/mrGLczr+Z46mcV10U
Hj+c6YKr1LkBAOC1YOZQN2rT62QxjWy0L7edaj65OVx3q9OAxWcdbMntudTG
Cr+TG1faprE/Cv4m/A5Wcg4ScYub0X5DdlgrGnPofX25b4Qh8utFh+V9INvX
v27PtaV119654/9t7mvBqZJ3JI6bFmptX9LpZRGf4fk1P/9Q1nO+enZGL3+7
oumPz+kDrpE8PpevNVNXqn5coXU+UjSYjx8/o/HPv9D4f8xGTegyf03oyaOv
6YvHX9N7b7F9Pvyavnr8TfD3x70fkre9hC443InnWz0xdvNG0bFqGzVW51Ls
KcInVFIziucfaT77Hg0PTRqyZcy0vNeCqrrgy2dfyu/m8+dkT6/o5eSMvnif
10NZj1U1t7BefPH0exr/+D09UjTk51Plqfx5LmmJ7z16Ti//uCHvjwk9fyTb
9H317Dk9++956fqx9DWqbwS6IADgvvDS49GmsqyNl2Qv2AtifBX3q52X0RnT
SAq0nUITknSHwxR9jV2bpAtOquuCwvYu0tVm7N9hubbi6xIaDf+NF+FQm+EL
Y1+MAn+YznZT1m4Vva+1PyCHjw88l4ZHPWrk5KE11uvU3GpFtpFSTBLuf7B4
Hw77vbav199uRxeU4xeJcXZsY2ZQneewKdTvyr61CSaxVibOFfhsbM2159Gx
Sf3zYrakmfd/JeduaYS2lzORK2ee2zmt2BfMvs1o0/DCjn8XeXQkH9m7v1ee
H0asJVg5eTpK1ZmbqeSb3AvjFPrfOdf7xHOZ21/E9x/Z5s78OeS2+Juwz3Tm
+0nfVzyX827J/hUAAB4+XBOskaX407pn3N5dF9+Dx8moJWKwcVtxfaw0OW/W
QNsdLXMOOf6u1MKHY0fNmMLl8VISYyGHjVeasqbIfU8z8ipX0QWFr+MnCS1D
2EF9Rk++G2fmIJR1kC6N/8g69mdks3wNWbrSUsc1ZVu05xNVBHPpzPxW2kcM
qOP4cZ/p4x5Jm1fVBR1qs/c49cJ3LnRz8Tvz+1DrlUJZzShaI8/z2S9IJV3w
z7Gk6T75SXW09+j5R+x3dtyE5vb+U8VW9FqyL32v94t05OnTbvTb2x+pdrEz
OmXnff5CvfBi9WPZa0weD7ogAOCeqNDPrTK/bm27T/alTfZFyXI5ok6GXZP2
usPxntGZj/VmU+ps1qmx1aRmWDZj+yEROzH8uxRTcZNv36DGziD//MJ/9Ujk
LXCS460S+YbTyPahMfxr7JF1wc496VMtsPVsSr6aIu6NddSjpsbnJyxhHMI4
lnGNhtcuDTbV9+EuxtDpeUNuRRd0Yp11bWsQxDMKNLX1xXu/is+ZplcqVxnP
BYwmDU6Zjn02pH6UN7jO7GO9yO4s0IhS7q3I/XuTgWzn6N9TWaJ5UK6ufR/3
6tFgt03mWbGc0VXqjDsZknkkv+soR4+Ufzu+/4Zm7cBhPset/V40ZwuvI9bK
s9f8AQDgTcNiNlE6G3KuuRm7w8Tv3Ba7fZrcX1pD2tL4fbgsduFaR6ujLXcO
WXdsSTll/d+E1qPmP2Z+mZJteXjJTDNU47+557HNe5afSyVdUCDsoj5S7AZZ
eWT+oImH5tEzZt/1xY96bejlf/+t1Y/SdaUljjv7RdKdPvlvUbvHGymvxK3l
I76KY3DXtk0yg++E6eY8RneOfldOM4r1yKr5j1Wq6IJTptkm7DxDfvs+iuX3
LsvdIWluH36r9xP+7utYc1PyAdu9DrtejcEkO/6j79R6U6x+LHuNyeNBFwQA
3BP3rAuupJTJy3Vlxzl6mc/fbZ/fG8djv46a52sFuiDdjJh2ZFB9q03mkUX2
lb7f5u+wm5J3TNiiOZcLG8Sd5tzObr0b+3d683OGecu0/qeeQ3ZWED9uX7Ui
XVDSbg761BZjdaMbzRGmPJ5coZyx8lwgvdQlv3nnpC39NtS8irxvyVXz5Ba+
5pTrz62r93evhe9mVVqyN6X+cYpWuKl/Tu556JPT9r+D2P8rjGEZ6a9hLmcA
APgbwOOnpa1d2Qfxumti3MHzH6RoI5H+tabPk+aespiGqj63onOM9mpSX8jH
LfZxj8yxrHX1mB+GGuOQ+xYHdueKbCHprOfpPUplXTC8yhfn9ORfyTwJoR5y
yv0eZ9xm72t6lXbQF8/L6YLLHHf6nF3vl/rYg1pk3ce+JV0wL98v/y7y9LtS
mlGkNxoJ292qlNcFZd/w099TLzZ6/++l6IKpdnZp+YCV631yqdEFJ88yjl+s
fix7jcnjQRcEANwTD0AXbO91qbPbKVnasaZXpu28ZvlXZ0wXNFpB/pDubmsx
bjSotev/e29eGswvtbP4WxQvusD547ytRsJvRdIFS2s+MZ7jkHtT8B2ymIdL
aTRRnJsU7SmI7eM/c0dTrkUulHg9vHNip2/rFFVZ5Hy94TuL46oofkba+EbJ
Y1bRygQjnvfG6Ca0osxcHAf6HLnltePb1wWXu9eSd7MqXVDx7Rd2HbXw+jf7
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
3FnztxOlTvZiamjv16O/japMFz2bamvz4xp7o8TP0/PhYv5TopwOaVpwCuee
dRbXXyPz/OHM+26D+F2tUd/J29qj3vp829q+Td5ln4zFvublLegCMyH/Cf3P
ptGpReZ+l1pbDaoZa9E11w/swoez92vRe82tl94osw4W4qofXWfRY5S6RpWb
aVDPS38b2u/FirXfZfG/5/paXG9Wdcys9+OeD6i3b5J5ULT0qHekeUdCHz6x
yDotWfx9iujsmcxusSwJ//bnxaDBLWuDI9ZWra11aLUts0fmRnjsBtkZz8i7
NKPraB7nNpoyfn2yL+zyZWyTc5N96KXaDgAeEp5HzpUdrM2Z+x1q7Q5W/L0D
8ADx6717NY3r/Y6JNR4AAAD3inPUYPOvNWofp8zlZ1Nqhtut96Jxm30Q7h9r
haWY2dQIdR9VR2B6QNnSHRe4GG8UaRii9MJ9/PN2tprUCuwgi5fmVpuGD9ae
yaE2f0abrYWdZ1ia1Ny1mG1dPHcO9Lhri72LOg1zBu5ivDOdTMm+nM91R2Nh
3yI0lAH1D03q7XX88zepsVEnwyj6XmuZc3hOqXqZVQcLMtqrRddpXhT7EJb5
dryLXqXvIrWsm6uxmV3Bsyx7TFvSkAoWo5e8X6YPl25vCr5zPf63tr7Cd8nK
stqsOzZTj21e3M7s3T2X6/bgasUn8PuyVnj8rUHmpvZho/J1LPONhv2Xd+OS
67oJm8al+10A7h2uz/O2uQtdcAm8K5uG5yMa8TJeke3+inn18/f05Om39Mz8
lsa/vWYN2cwjW33OfpnmzgFS6v1ai5wC41vnInnO0bjkmhV4+Nw4NDpT3rP/
77w1QwAAWJbRQVPqnxoHGpucyK7O//0wHmPcqi44syXdrkzp5eqCHvU32T5b
VvzLCuZzD41C9yRpQ0wXXLwX74JpBEaH0kciHvUKa31ZxaD6ZpM6eyYNTkdk
XxWfLdypLujvH2nmJeY0/BrL2vxwO6aVlNdZFzyItZuG8HXdSSutWPfT3a9X
vb1ZM2pUWy9SDDI21XPfni64zDuwj9vSsZqHQ7L25XWkzslq5yNSG7Mohnhu
hv/cMsua5rmm4AziezrKun4+f2uVjpOxfD8St6OqvgtdELwReF6gfc99VhZt
Vgm/AJAktiVW2pQya1d/uvTqtyt6+eJXevX77am09uef0j/+rx2UL356zdTg
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
Vn6tliNixWv0Iv9vnjOMxzoi7lyKriT+HsepS2ob+W1El/pnTuLa8vTVYn7T
SnxMI857ITTHND0zvo5m8jrYuFA3lwv2j3SjnNgLeRTUBZ0Li9qJ9sCgeqWc
QbWE3Z+x2aHhpXKvCfvlRV3ZMWk0Ztez4bcbqZ+O5/dL8hpRnu+h9K0Jf2ce
24D594Zjbh6XIsi7PPOCOisXCt5rMV2QxxvIKgZ799AFwZsOjxGTHxe6CvZh
i33Lr/vH4lI/WgvXryeW1gX/HNN7kS3gZ2T/lb7pqxe/FjjgjLzfw5wl15nx
Y8rpgsWPq9/3Orj+V79dk6e9R4+eRLEVO5nPYX7IZXRBPsbQxUYqeJRb1wX1
fdAoHKvc07r/a4e2rriRXUF+LG7oggCAh4Mz7lPvKMXG5bCZOUbJpUyeAs8l
ay/F/m2rn52/fRL7XZpSXDw5L3Hz0PZPo7fjKFwewAKamteTxz9xJyPqbspz
UaH1RPYr1y6NDuUc1Wu7FrnXyn2m3mhO3pFlS27utZL2ikxj47m2M5FyEHcC
XcJzXZqO+0xjzr7O1dgLpmth0wJ6WdH4goV1iBK2apWOqWkj4uPM6zEl9Jt5
ETYPvSq6YGqRrzv2h6vRUPk03PNutF8/Zf1iZVpPgXcQ6eaSjteda3GT8rZy
prgn1/bblWT7rNrgSrEcjGYUp1SNbytK51i9fj4vFqVV6FllPlseJ0rkPLhk
15Hn31W0vl8VjdFbhy4I3kw8h4bHJnV2RMzVNpkn/ljrehivR+b11TcOWUdm
kFe+td2hgYgL7bfpo1OLzP0umWeyuCLGOR2lPeqdixgpcRyVZc8RMj0bLO6r
RZ09k0ZiPUTETfXvMy/fh3c9lZ5Le7dLfdV3ZebNbayVtmI4mZKt2Gbfpi6Y
zQ2Nn36d8DkOcpY8fk6vdBpmIV2w/HEjZtd02vu3dt8P/vWMXgqbwL8u6Yv3
P6MP/tmht9nvb7/zKb0rylv+tlobyiV0Qe5T4o8f4zv3yD4VdaFNrZ0ujZyc
ke496YI8hqU+f5uYT0xpdOZ/N3tdsrjfufjGDnvBN9be61POLc6v4mpEff/7
a4tYzbvm/Jtyp2Sd+HNT/3sZqgcR578S5x/4v/ekNcbp+WD+fP3v21JjpPvf
+vCoNz+PuLYi43JPtA/iPO3597vT8efLlhwzm9kGxnWFPVvoggCAh4Dfdtrn
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
XfiDpM258nnouqD/3A/ayjq2yEVsJWJjJ/SXjW7Sv5gxUvUhzRjVG8e6SLRO
KOmCTbLOMuLdSbHveoVyq0bnZprk3FZR1niMHb42y239GsH4zNqKrzEt50f4
jIdKPsXmTivxzNfWesHWxXQmuST6/yt9HoaVl/vWBUnYerA2gq0769qI6J3x
b5HZgZYfR+XkHYl0vzRNRs41kfadqNy7Lpi4V81zyOwj8tpFV2r7+Xi6scXi
AQk7RJ7LKaeI/OpxnPY8XTArH3FaXZGvW4o1mPU8bmzqHyfrq3dlJddINvua
64YuCF4/uB1ewj9YoIw7VH88vhasix0m4LaAuj5BijGsieO3inNI2ypxRBPx
Eme6+At+u7fdDnwD7KtsBYhrEo1EzDNl21XrggvGn7NcHu88nR/7L9mu79mP
5zT+8Sy1nP3vB5r+Hg+ssnTBqsfluuDbH31f4g5vXxeUNPO1ZGyKLF1Kx0PU
BeWYukmbv3Q73iJ5ghw5J7fmuXN/oZoSh1ONPd5UYopaW0bKsfVrxbXNFnW1
MfBXDXRBAMA9kKcLSjkpZLuLNF0wtJPi9nvOqRlrhWxdt4w+l5kXQIvQKDs0
dOJ/v7m6oKpL1KmvjQnoSX1omv2fyvQ4Hru0NfmM4/goLNakJqdsIUrksRDw
MUnUf97IMSyjGOhXLIfw5rwecb/BZMzhGOcoXyerb7WpL2zVpNwm2WvAXNfU
9f/ejUuuqy/C/m2aiJ1iKP/ukCPs6lKOMS/J83JdMPALS8uVwuOFhmOylG1j
O6xkTFL3vE/mcZE2In62fO2Zj/+CsfeMSsSrLJGPOOUYfE07Of7Vcztaj/+N
bzeotd9PzZN+d7ogRTlbjI2GP54e0GiyGE+XiEupI++8y+mCpOQwYLZ9Jdun
CG6vtKazFRRAFwSvGdL6n97f1doJ+0KDsnLtpPnuqnN7Xc5POysO2ArO4Trq
MdU1D6Vv8L/3Ws5zSceT/A0K252veGzq/fwfjS7Ic3x8SS9LHjNdF6x+XO/y
GbMjzIhNmOD2dUEeI1KnV3PNrEh8uoenC8pzj5Y6P5g56fEDuHaeMk6WfZY0
sa4VvyT1W5Ft/5VzqDbG0rFdKd9aLy/G+sqBLggAuAdybB94/Dl1PVSrC7Lj
pa3JCh+uKvOq8rpg4sRvsC4Y2+y1D4fkXLup8fgD377DRUz/6G+U1EyCGBo9
6i3iNoqYhZ29QaaNixRHv+r8ucx+ik0i79flddr5mJ3HDI/qpzRuybAZdOR5
fah1dPb7NLpI5s/m9TXTzX4ZOzeeZ3vTJCuKp9kk6zS24RRrqGXrbGivIPx4
s+PGZfuZ6o4pfNuzbFQz24iU86nzOl1Jj1eZ831H+YhFfpApjY5N/7tQfWW6
7Fz+3LfAMPK2dMH4e8yJvadpS1euCwbH0F1mxfah4HmX1gWJ+Sfx+F9s37wY
8dL1Mpuq9Nyi0AXBa4aiC6p10zmN28Ug/lci145sw6/L6xTFN03to1Ni/s50
v1c4x9W8/U/kxVNiDfaZlijHlsjJ3eV/9w63H5TimrEcpynHKK8LuvTsoy49
+Tk7mJ330zex3vbPZ4tjcy2tTZ88K5r7d3GtqfmIlziuYmv4xU9FNRx+zs/I
/itn87K64Ey2dVPzzqix9bL9VeY8OF2Qr7Xr8vFONHa84X3ytTedH5I6ptPE
KODr6knff/7dJ20atDbG4bV5sm1Bah7D8ExXq8tEvLgA6IIAgLsnZc7njvty
TEAjOY+P29R4/dWb9KNxUmpblhq33SXr0EzJy2DGMdyNRmo+B1PoXQVsgu5U
F7zDfALhuYahT+ZW7KvmXorYGE1q7sn67vQotDeT1/G5Db1ufT7ihvXtLP7k
XeiCPI+bsZ2ca8e2kQ2yxlaq7avks5OqbXk09OuYdT6iqePm+BAUry9VdUHn
jM875pqolO83+DeP6dTL1uKqUvU9Vz0m863mvxXRBfW5iIO9mY4br+kLG0v7
YkT9PY2tKNfcbjQ51jW2ASq3rgvmxd4z2jS6nOenCcrliNrrSr1dhS6oY6l6
cze6oDiPfTZKxGII982bK4SM9nhMIo0uobkv6ILgtUC1F2R1U5qzS9/6XA9p
HjnK/FuxI585UUzoSLML+nmhsxvxPJ/rc0Y3+F7n64K1+bey5Dnmx9LnhOD2
SFJ7oNgbd05TtCrXXrS53XisponHNtxdy1/nKdQGe3T2KM7d8ejpuX6fP3+h
R2/pYwS++t/XzD7vU3o+0RtDei9+TcYnYbrgk0t5v+rHndHpv3jswS6N/0ju
9/LHZ/TkO55wRtYin7/IGSCV1QV5HBhNvEppzBLUuXmcZa0vvrpPkXftDKm5
PrdHbOyVXxsuAs+1rFsX5n4nLfENLOzm+xNFO1efz5WaO3Gxf/AOalFuI963
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
iRPgP8Mdk6ZV9cHb0AWZlhsdU4pvPdeouT2rNK48GpHjuHHb5S3aJf/f4u8x
LpnbTersmzQ4HZI9Ee2W5sGxHEuhJqNqgqrPsLRWnzIvcM87ynvoUm+/V7F0
qbXBn0e6XZl9uJiPaOJVDfc71NppUy+ciyber4g1Uaf6ZoMafqmLPMNHFezg
VtA+ZLXHko/W0ZBG56O4nJrF/Yh5zAUpNoRenxNxXJuKht84qG4nuDiqnDfh
LmPWAlAE4Ve3iNmQGPuFv00y1g7Y/o7r6X+7VPN7xXjOlEZjm6bXGd9zxXM4
l3bUfouYs9MwRsUk/XrkY/v7XPjtzmKf1LExP+fEDrYvsu3S+Yj/cunVdOLf
+y9BmU6vyPurRCPjP7tXLyb+fr/Sy8klTV9c5cTVvvGf4Tg418vfMkZkpY/L
+PM62Ce4p8mEXv2Z82T8ZyC2f/ni18D32NPlIKmQjzgTVueKUj7vSNx3VLHL
X5obh2zxXabFcAm3CZ7DlNTPMvjN//v0ajXrphKeG1ybXeDYog0Q7Yu4lkTb
cStAFwQA3AUus21X/JpE/uFVzNMinSSec3qX83wktfWatHZaK+xXdYe6oPBn
9ue9ja0mtbbb1N7tSLFnsmLt6Yjm4CX3qwJff0zENmPrl4n4eszuL4xzrftN
0tUknUaTS+02dMGZHMtIPNOsHl32Qcj26QyR9JyoDut0PsOvI20yT0T+5wI+
CgWK3P9rtMiNTqbPQlFfw6nGhiGRK68oK9IF09sIcUyH2kxrifVpl8wtvTaY
VbqVfUfnmoxqt6j1D53JMa20dXVV2piupOa8XTy5a7HmUySe5S3ovspxlypp
umBkX6fR0Vg7klUXeFuQsPnRrPNIsQjCb7qI3b2ER/1t/xtYn2uvTb8fqhv5
9wsA+HuSlV8erBAp59Q9XcOknC7I1/wrj/HAvQBdEABw63BdRWs75dHwsEN1
rb9EuWIwfSktjle3cKxWbq9XVV8rqAvm5D9Jxq/NgOW6u/W1OneYmXtL0qoS
dkJcw2gn6oXF5seRj+bNKBojaW32JA2vRv3jQUquaaX49S+8D917siM/vvxY
LFMW36tzWnB+zsd+rH4Kf6DWrknW2Yic67x6y3XBZpDDeJRSLBb7L9H/h/af
Gy2yLvKvX5d3JP0+XRrszZ9l8zjH9z/zOKvSBdPaCE+KmafGjRK4l0Myd1sF
2y0jt96kX1s9oQs2stY2/G8y+gbSYq5e29TdqhW47oLt7nqdOofD1WlHt6gL
hs8myPWX5muvKaLu9nLst90ofm5KzNnoWOmXaKXFTfPbs4EuRztvgzc6FWN4
Kr5TSlnqWwUAvHHE+eWb1A/j+gh/n1swsfpbw/rC5n5/HjtJPOuz2x3be1ej
4H2K8w32m6nrUirTMH9HMG66m/jmYAlce/6eg7hc/cjvALogAOA2Eb5QRpG1
o5lH7rVLzpUT+01cCFvq0aLYNBW+Dil6x5TbNc0cf97eCWLVd/f8/+52U2Or
pDE67Pr7d6h7UEKXkxD2V3PdICuGs9husF0P/OMam3ER/y4z33YveFyK5u37
fvl9Sm97Pj6saefv8/uvbTZjH0GGtV2jmrB/Oxom4tbRZOA/gw6NrpS7vx5S
YyMlf9os9E03UuOcaWF2ja2UOfDwoFc4v7O126B2ybm0+EbMnFyyOUcI6pCx
Xkv1+Y24GlDN8J/9elNvz1ii3sx9Ww1KyyGuv9QlxxyeHenopWPMcXRtxDg+
XuDD6c97cjU9oS8Jn+FrZ952TaZBCfITX5bz2YnOHfnuhHXd/5a26tTJifsU
4L/fuogd9Lr6frL3a2hjCFXEbx9a66Le1yvZ1InvS9iW1rb6t2Y/501GQTxD
sV5hHppkHpg08OeAWb6D9rFJ/SVzfjtnZmCn3g2+Bd5n3lVSewDA64IcGzEu
nZXnn/2bk2oz0L1FG26PerpzamKASHux/IMiNnhWjmPwMPAuutrvePV5pAEA
ANwtLE/KWjMZZ/s2mWXbwACwasL4o+DNJI4ve99XAgAAgONORlHev6icwF5w
5cxcGqnPWZTz27Xhnp4nzznMWyMSvkobBjV2B5mxdsADQlu/hpQVmhEAAMDr
gEfWnojdP0IsKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AO6YX3/9FQUFBQUFBQUFBQUFBQUFBQUFBeUNKdAFUVBQUFBQUFBQUFBQUFBQ
UFBQ/n4FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwAqZFdjmxiHHcaVtvSuL2tstam33aFrkGInz
umQdmdQ/HJB9XWH/FeBcTsm7n1PfCfZJn8zDPlkX7n1fyt8Uj6z9DrV32tTZ
t+6kro0Ou9Te87+rI4vsB/zanfGIhmdDGo6d+76UdGYO9bbb1N03i31DzogG
R/73dh7fk3t9Dy2M55Iz8du2Ku1yFYK+oB0U66rE/V6PqLPVpMZWt3gf4p+r
udkMijVZ7bO1T0zq7LSosdmm4QOulgAAAAAAAACwGjyydmq0tmaQOc6e8w53
1vztRKmTvZiK2fv16G+jKtMzz6ba2vy4xt4o8fP0fDjXDcqU0yFNC2oh7lln
cf01Ms8fsIBSGY/M9cV7M3pJTcqfk5v7PTIPzMKlt98nRzN/n55ZZJ2WLCcW
DS9X8Nxnt1SWxqPBtrGoY4t6vj24VW3QG/fY+QwaLvt4bxyyxzbZF+XKyC/Z
mpRHPSOjbj4QvIv4eTaP84Uie7+2uCeT3BubWot7bB7aq7+4mZD/hP7nP2//
ezL3u9TaalDNiOtb/eAWzqvBuzCjc/Yuir/N6HmV6EO8y2rnKsJorxZ/P5v9
5Q94Mw36pNL9WE6xzkbk3pXmC8Bt4XnkXPnt15lovzrU2h3QmzgSA0DCr/fu
1TSu9zvmG9ee22d9avvjkfpGg5rbXRqueA0PAADAanGOGpJm0T5OmUPOptQM
t1vvReM2+6BBqlZYiplNjXD+uq+cm2mGZUt3XOBivBHV2T69cB//vMJ+pRXY
QRYvza02De/J5jEdj8yNxT1umAnthWsexUtNM39nGk/JYuwtp1twPWK1paLW
HeGSuZly7C3zduY+rlyni+hYecS6TfV6IrQr103Uvrhurifr5kPB2mG6rtGg
9o763ct2blGbKL63mUMd9l10c9YexDxhOpmSfbnQVgN7SqGfD6h/aFJvr0Pt
7SY1NupkFP7eamTfwXyjsFan6O6xDud/bzdUSKuXNMhwPWtler5L3fX4+fWv
ljtatTa2ajtcHczhwN3C2n9ejC50wSXwrmwano9oxMt4et+XpeXVz9/Tk6ff
0jPzWxr/9pq1NzOPbPU5+2WaOwdIqfdrLe16u4pzkTznqIK/hXs5pMGJpbeh
CP24TiqOza9H1FyMT+q7Jpm7of3ICtapwZ2gbUfO89b6AQBvAqODptQ/NQ6S
dnuxXZ3/+2E8xrhVXdD/rV5xztTL1QU96nPNZsuKf1liHldIj7xTsrUXPpev
bbaos9MO/F0TZbdNzfVQH9G9a2aXWLoYVFuvFSj++Y1m4tz8HlZbKtZpwY1N
bUm3adFwbEV1ff4+OtV87zPO2VTvwfCfm2GQkVPW1pLPNaS6LmjMdYtZrO/L
etFroAsqawdp9YTrM1GbGN7TzYi99xpZqfOG6tq6+tzrm03q7Jk0OB2RfaUf
iDunpv9td6izm1Xa1D1K9gfaqy+gC97etyoX/fldMrcb/rNpUCOjNLfl/lB8
Q1nbh6W+3qC+Rkt7kO0TB3M4cF94Hnk37sJnZVEH78i++U0lrb/ulrGr/tOl
V79d0csXv9Kr32+vEbA//5T+8X/toHzx02vW2Phjg5q2XS7g+3Aj1kkdad3Y
2C3Sz3rU1Z2ztL+FS53FvjV13iXdWzGtUsKxoufSPZvrldPD2P6kzBxpetQK
+l/DaJC1kD7tw/BvNeq9kT5eq8af6275z8ufPxkb3cX7DP8mnmNTa89i7xma
ur3atUgAwMPFOe1I37+sDSbXt2qRnsD7JlVvEH9vZM9dsnTBBVyTrIW+xqpt
yA2fvy/sTjKI9czk9mIeZ4h+uoCeImsrBpmXD63RLK4LmpPsIzmHORpwaP/D
fctdkt8Vs2drn4kfXeqV0hN1NnwejUQMxaM+9Zcsg+O+VI+qzLu9y4EyXmyR
HdYvNmaal0a5WGyp57Qqa+jpz3WBP351rhbFcWl62o7bif0hOdfsd6UEh2Tf
+OumC/LxrKSb77bl9iZLFyTVprVN+tX9NDuCuH2trdcDXau57V/LbnceN/R0
GPhsi3fjlXiIxfXeYmPBQrrgrdnOKXNg3dzDq77OVLTo7ps/FzFP8m48f07o
siK0ESduB9f9sbu/jSdtMy+e/4KHe3H7urQuuMI5HABVsVisjbxxCMgm6n/8
+b55PAhi3fb9fmJUwJfl5U/P6eN/tiOtjpePHz0je8U2fXbvs+j4X/38mmk8
bFzT2DX9seNgPo4sYWM3ZL4IRdtaES88OI9/PnNvsYal8QXK5NoK5jhiX8ke
PpxPTcy4j5kpv2XB/MpqTOd0x4vjGe1SfZZ9UE/0rXwModU0gQIfV8Zj1TgG
mN6Oxr2wFnMqvw057Czqy4rWIgEArwXueU8/x5n0l5gr5cwp2VwtTRcM1rYi
OxojWjdiB5HW3WqaOIUcVQPt5cRVfL0prgs2D0eBliP8GNXiOA71t+K+Jatv
yLQh1WhE1l6L6kwbrG+3JT9N4bdprMXnvu31KueoWeg+dYzEWiav/+vd5Hrr
9Ui2G/RLJ81/PxePhgeqfVODuvs96u5108u+Sd0truuXiO3G4hcWiu32uuqC
ko6kankedcM2SRmTT5kfMScch6W/a/48evN6s7I4l5qzXWSvf5SuG0X8iK/t
YI4a6/ADVg8N6vi/DfL0+2M2HxJls0vW8SD+PW0OzOphURvAMqW+Xs+1F0z/
XrLjPXCWttGPnsdq53AAVIJ/l1Xsk4rijuj/Z+/sVtu42r5/MN65T+E5iCHk
BLoRQbkR7mY3FEr3rFKMSsGIFCNSjNriihZ3nELkgKuGumNuaGUwHRWXMRgU
YpgE550ElwkIrndmpJm51po1n5IcO/7/eC7up/F8a2Z9/Nf1oe9cTd2vq8AZ
ee3gQTI+2Erpf7KZ0NHDjlIPlO3hk38Wdg/XTRccP/6O/nOnTXfvfEfWvzkb
s/dWP61yNpva0Xuf4z+RRqjflRw/xWPceFxjzdaD6usd6m7EmlHLGy+2VmtT
7TLHP8/crC1uzYpE/41IF2T9afqcEcSIumBUG0DxbFOJ3nXoggDcNpyj7mxO
EMY4ij4sjY0u9WbaQs/Pcb8az+lam/HfQuts6olxnqzLKU2aG4m1FNos/tIV
YlD8eMis2Ez53K2965l3ZR4Kxa2Fz7dSjFtxXTChJ6RoRONoXVDtSxX7sCxx
3jCjyrzbtU1qS36Ptc2MOYg3J+/KvmH3u6VqB/vreU0p7lRbL5672livsWsd
Fj6v4A+a45cbcEN1QUOqF9M7MClKkXjO1kru9cg6n+UEPLOoH7VHNTJOZ/8e
5Av08/kMaZxam7i4NnQVROvJ9/wYJX/tRVP4hM8siEfh2vQ0N4CvO+bVW4m/
7UbxPIhnxf2cI7hv+hXGKpbWBXO+hUXpgouewwFQBe7/o60b+TtUO8vs+2ql
+GrfMMI1K8XzUvmr5/H6tx9F/e+Dr+mHx7/T4W9P6dHD7+hDSRt8tKDco9dN
F4yvp0OjErpgpdpX5wM29qtW3yrqW0qNn+K+Jl4PyolVKNJvMh9EbaP4eDIL
pb8gz30EXbAABXTBPF9V6IIA3Grs4yHZs2/f3mf+T/eSOSyqzOkKxa8p8mUI
83StTaY3B9cFn6eawpdwxsQlY0ussdLci/uU8YFO+uH70ccUitULn6+kCwZz
ecW8P5zjl9UFVf6CoQ8WH0vFum9K7sLQHzRt/DOxSQ9iPDs0nDMut9S827Vp
sNVMPN/69pCcWe4kORYwiAe8nMYO9teTv01rZ5ip7TlnJnXuJ3N/dPbNwK+z
SF5gk8UQ+HOl4nkOXRb3XScjiC1WxBDbbIx/A3VBh8VKy9bc6lGrci7NaTul
fq+umS4o1E+pXgMqb+wufG8VdMHCc7ICOSvE7QteSw5CroaMPBP8t89iIbrg
EuZwAFSB1//uHC1HGwq/mVqhHG7XnbifUPlvldcFHfrhg1jz++ibo+QmE4eO
et3g75/0RvPeQHyt10wXHD386sp0wfFePG6sWh+uki54aabke/ZrmhjUUYxt
6hu6N9/K/n2EXAALyqdks3FYHEesL729eN+Ia+ep4ohr+XmEoQsCAGYMmG6h
auszfcNSsI/7QZxjb1snfasdz09W26Tv6N6/e3/bVY3fHOqlrmn5edrSz8nX
nXxr8/gLZxhrXtdMn6iEbVJva/Z8d7rUCP14tDp1pedbuIYoFZ+PirkbtaBe
SORTxH4DQRcU8hzKB49ruqbGiLOYz7w48jwK3eelTcZOUjvSVusp72eOdrIq
63x+TOWQ5BK+gzXF/vfaNDwxSd+I/fgGJ+kd/Zhr/X5cfpl6q5dpubYl47r+
TdMFbUN4Txtb3jeznvK7rraoWVoj1FLaSv48OmT5+qoipr+yyfVH/No43rfZ
3lf5TLO6TIEu6AS6e3p9ki611/gzakz9xb199MPsOQ9vL7TVojG78feycF3Q
Hs5qLGWPl13br9dnJb7RxHaCf8OQ7HNFnoZzk83HGt4cLCWfg7fvYAF+fsuY
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
PSR8X1aCtXbF3bCxdbyuXVUXjMfK1XTBhB6fQhyfJdVAYGsRPN6Q3w/XC2Of
u2LxWPPGSadbyTH6tZvDgfcR3jYqa30K+b2SsZJ8LbiVEkfJfQFVYxRBi1fk
4VrEOYRteR6JFXUujeR6p0aNdW98vGeQlVMTlOdBTPNjirZdtC44Y/QNq+Xx
wePpsd+Kfn1P/jym0Z9HqXb0vz9o/Cpu5LN0warH5brg3c9+L3GHy9cFBc1c
6leCv/PY9wJ5HgrrgqxvV9XJqIrN/OuuRV4KRxzDNOXxaEZ+XcF3RJWvlKQ1
AJU+z/vYRB0jMa+MP54TZUmWt1D+PedsP+YGuiAAt5M8beWS+3LVUmLIRF0w
rEXA/fdsb+4daYVsXbeMnsNzMRXD1yg7NLTj/35fdUG6MKm3M6DxxfTKonG6
4lqj8TFfm+Tvgf+7Kf0F009ftB6xnjaWssW+vZ6ouaVgWbrgWZ/qq23qH1nq
PG1XqAtG8ymtTq0tnYajcaS390t/DzFjVR2hgjgH3FdC4Ss4u+6bogsaUi7F
zp763ePxJrUU/z8Zv95RqNWp8tLEuhXT09mzy6t7K1D6exDrpnBT+sSx3Ojh
nDn//XXI2NWpv9ePbb9PnfvxM2/v9MW/K21A+iabJ2/qNOB/985hjJLXrKyX
Nb1ylte0E7eDrL+L5jxcpy0Yj8VzBwxO/Nylcg0n/9+syH995Z43J/Xzmyrq
Pdm2LdQrLPO9Xrs5HHj/ENYx1D6pRpgvQ5vG24naOp87q2N3Zf9bXV4DJlH3
S+Zom/8cfg1vEbn9lOIBLniOhrK+urymV1pd5Zhl6YLu3z8rdEFe4+M7elHy
mOm6YPXjuqdPmB9hRm7CBMvXBYU1b4VezccfqeNjRlFdMPbPVdX9rk7uGsAV
Yx+02TeYHI9yXU/W+nleR1V8sJ/Tha9nqNbABX9AWVuUYqFkTZj3zw15HWKu
9mMBQBcE4HaSNZe8tKjFfETk9VClLsiOl7Ymy3PZL1cXTJz4/dUFBbKuNSXX
fZHYxZTcgj6Z/oLs2J0Di6zjAXW3+uSkxVL4WoGqj5ZZki4o+Ayl+D7EccTS
3/PiiMvqgsH5lFc51/tYuY6BVIdCVc9xes03RxcM/YrrGzpZtkNOxvhruNcn
U/YRVNyEHbzjg6mG5I5J3+wpnnOKNlX1vS65nxAb7M1X7DNec089DjW3W0KN
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
NVEzTVPN/zVp3+T7wP0LVfWnpSei7tO8PnSat8FrT89tso50sS5hoc6n7BwO
gDnx3tvxLOdIYuwX/u0sy/8/3t92XPXfTsXxB8e1x2SOLBpfZLztFc/h50kO
W2l/HDQO86ycpV+PeGxvnxPTGyNN98mqbRWd88wKti+y7dz1iN869Hp85t37
P4GNx+fkvi2xUOk9u9fPz7z9ntGLs1MaPz/PyQ986T3DUXCuFy8zxhSlj8v4
9yLYJ7inszN6/W/Ok/Gegb/9i+fPgthjV1WDpEI94kzYO1eUPF0wjqlfbA1b
HqufWm9OtV+Uuygrlmt5+N+R5c1Nsr7T6TZe22En7yv8W5HvsCxO8I2P8/Oj
VGg/5ga6IAC3BLF2gBBH5tcfnltnYMbySbin0xz9fv54rjXUFHFsaq5QF/Tj
me/XqbHWpJav8Wx2hNwzqvzBWVhhHYKS+5XCndaO1vz8/IJWNn1W3N+daxTW
broffZppWyU1VZ5r7sxN+sbPYo1keL7/NG2Q529ZrOX42Pg1VbwxRJE5QWZ+
wcosUxdUHbtRPs+f357c06i2OtVAm2sN6dvP8YG4iu9mRl6emrguXUeqKcd8
yhL557g/LfMZFPxhFTUIl6QLhm1/fSsr510Kjklt/zdcb1F7o0OdrS511rlf
Z/q77ZwMqLWa4mdzWD6+1c8JptIHu8yP1WT5TsP4Xzkf7kKMv5sXYp7w/Bol
6j4t+zrlmoYpR644hwMA3DyiMUaFnCKgBHwse5q/+VI4y9YFozXHBa8HxTG7
xfqgKXY8PipQxwxcI6ALAnA7YL5O6jzqLg13O1TPq/1YwDSWV0uZ/8WfyxXO
U8b99arqBAV1wZz6J9m55CVYrbvC8blVmFjKXI9a4MPEfQWTOfN8P57BToea
q7VCv2unrM8Yu7beqcvWD1dSNcEpPB9iPRmLOcPa74pa6FymUX2tE8URLIJq
tX/z4HHE0xyggi9vhvnr7XGtF7Wew7Xb+uagXL2H6BIz8o+uZMSH+1zVdxMg
5rBT+b3Fv2GyrhHX3A3pHeX+Y9F9XJrR3CJRo85H+JZr1N8fpNRol2w3rvu9
yHybAWdyriDJtPQ4/mTbX6feviJmuCRjwY9uhQbsfTK3498rajfcMembU02z
uxDzjrXD+gLv+OE7m+8rGOwQ1DsNah1y39nU/qdGg4I5SKvN4QAAN5Gof9Ka
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
n7Ln8Uvy75V0Qa8VOPd9b6XxjWMH/sXSJ+aNx61gW3OXzelmOc2j70+rC3lY
0uInuH5V22A+f+cDcRzN/Kmn5x8LPjsr/pzVjWN266s14dr8fZ3jsN3RhGtL
e06l2yny/Se9uc25+H35/nz+8yqSi7wwlzZZp97vc6wzHWMaUxiP4zWq32Pz
0pz6MdAFAXCCMZu/Ntre6tHgyKTBOhtHpeWHuhTnnGlWhEXGzk2tVm5Nwhs/
WiPLa8uG1OLtpK9PuXGspNDGCvGDxZD96SJ/aq9tM4/NwO9RbRaZbN+a1zab
J1b8d29fewk5eQoj1B/2ro+1wWm6oNx+ZsbkXoEuWKXuSJVaF7mWF0cVUkQX
mmf7StiJuOKptqaIfcgh1tEUcyohjtidzcumNSad40Hg15hKri7I/TK9eapK
AmMadvuQb1BeF3QXsCZQ1CqtHSjXjdrvRz1PAMCS4ZpgLfKlCXGOWjntCs9N
4u0vbSCs4aw0FfEoYl4RZXs+1zl4DhBpvhn2NQptzmFz7XCtPcZmPvBNsf9j
c/6suspXF0d8QY8+7tC3vypyzfkxoZLfGSdNFwzibv8v1pVGb9Kv6z8fPxE1
Q5+zp7Ef2n+fCPdfPY64+n3KuqAf/5u45smpcIzD59KLzHzr7n76+0KeB9ff
PlEU+3t9ekQjOT737EnmPlPEesSff/EjPXzg2cOf6NsH3yfisO9+/Jhe89sV
nkUn8fsH98xq4jz4TbGYUFEXrAKf1zX3x94YdBo/U9+arhnbrA5jd5R85wT/
gkSNTrH9au4l/QLG7Pidg+Gsva1Pc3ZdMF1xtU9OOJ7zxuT+lXCfHNVzqtxO
XTV8nLo2CHJTBP+92pvOPc7ZM87JbQNdEAAZrvFc0fzPz49g28EabtLsoJZq
vCbirzertou3t+2q+YS5JuCN/9yw3WvM6iSMhZr1Zc4y3hc1QVX7ngnXM65b
/tuJ6D/lMN/uVF1Qvodl+Av6vvh+veAC1oi0zHesC8q5/SqfN9at1fEGspXU
0vn1OGMabLcV+pEW5yIsCc8t0Ns3aBjFxw7JYHHL/H3g46NG2jeSowsON8Vn
Vd8ZJtY34zrFmjTPvc66oJaY7xbBZv7N9fusPvO79k8GAFx7jI14jVCVn4Jr
bip/b4u16WFsGMfm9azW5Dk1SXXQOsrx7HznEOftrX1pncgfP8pxa3wOq/BH
53NxIT7P/9tx3PeJvurSPb2ruiMSvKax7Lun0gXdvx8LmtHTsbxG/A99kqMZ
Bf6Gn6njWJdVjzjrPkVd8DtlLiX6dxT7BCpr8zKt7c6PsU/iHM/jxZNYf/2I
+etlUaxWjKgL5tmXCq119DD2S/z8yZn01wv64YP4fpT5C69QF+Q1O/X9qd9a
PdLQxJzriXxD7DpXtE5yTin5XCTXNRyWK1qjehDbG6+/8PqWjS19GtMTzV3F
PNP9xGOu3k5dNbyNbu30qe23u6t69DzHzKcz1ddpBnRBAERMNi/uXaO5X5Ha
JHPDfLZ9nzw9GNPW45ohTLsq7NdFfp6JZJx06Xx0ReslvCOGG/61zXKtpfr+
xWNo//n6ue6C3JAnFg33mD/kljH7mxX4RVrHcf6/61p3pHNgzV07JrACQ9Wi
uuD0Poo+j5Kx966fh11X5oiajiNmOTjlONmCPsVFcwsI74NUL72ryuWS8R2J
NZPFZxPXWmZrB4lxXMU4Yj/e188tfdyLtpnmZ4xrKfvbmdvx2kiwFlw4ptit
GLvhMF+fJlmX7N5LtH8AgNtHHK+2EvhwqLB2MtYaeL2rlPaG9xOi7/bsGg7Z
uEKVV2oB5zC3akJ/wfPqW/s90gUfIWkuLrk68Zi9wFdeigMRdNaMXGXvUhd0
31zQ+O9jOvrtFyH+VdaRBI3JD87591jY/ltFrj4ax/Gjd79I5g8MiTWv5emC
Re+Tn/PLX5+pD8Z1QcnHcYoUmxve0zzPg/n++fbhZ4/Jep79TKrogh993KXP
P43tk/+yXIVhLPF/fxJrjDz/Pd7mg5/F5/GS5SWUfCcjrkoX5LqeSkOT/Xul
cRjPNa+cEwo1BRV+OuG6B4tz4+NefvywTeE1gmvRvyfHsvO0U1eLK+R3jcar
LK4532c8BrogADGC3qBae51uRcb2tFZSET+s1nqTugcpH+LEISOo/dAnK6eL
Lpq3Pz6mTobCZzvzHLtJLYLnRIz9hOR14RT8WnRrat2kdF91zXVBPwdHmH8j
PSZ4Xs2urC5Yp85WWL8k22J9693UHSlDfN4a9Q6GNDwaBr50w2ODrS0qdEGt
RcbxNO48sBNTqGWS/V1RUKPcr4nWEuLp5zW1n2IlXZCkuah37KHcBKR9R96/
19hxm1s9akp53hvbBllsPFRLxFXMV3ck/l21IL9VkDcq9IO+dGgY+Uz74zDX
uxYj+O0zza8/clZt/iPEz836A+6TeZXvPADgBiH4uaT4Kk/GbJtGol0U/Gxk
X5bENoq2nsR5sWqdexHnSOZa0GbxJUncEeufuH5waVN/k+UJu9dOzrWFZ1qP
6g+ouGpd0H35Dz15+B19KOTaEy1LF/zk4S/0reBj9hVZbxXnkfwJP/xvR6rT
G9frVV37vLpglfvk55RjjCPecr+/r5P3zmOVmT/hfM/DpcMHyXoid//7HT35
baRcSyyvC6rzC9Jbh6zfHgt1kEVdU9QWeVz1+HFcczm1LskV6YJhvEf8/Yvx
tC4bjyb8e3nNDGUeaxJ8UVT1Mvi6R7ANH5N67WuQF5/lfO8xzZD7EsrHnqud
umpC7ZWN14WxqaR/5s3coQsCMIPX3tBmdYMnLo1PhtTb8N/58N9MYf5cxGpp
34obz8VrW8V8e3P1ixLHlHaczenjNrQp+Btz3xk5fjDlmre4fqJRb0+P1n7e
O12QkakLFqpXk27qvOQknuMd5BdcdqyC+rxJ39nYX16hCyqeR3J7EXO3S00W
P7p4U5+XxxEn5j+ulfkdmdt83CLF+2d8R6GvdBzj79JwJ82HUPUuLkoXzDNv
7HnB15GzLVk/swiihh89Z77+nZO/GQBwO+FzzjRfwbheh2JefGHEf0vzTea+
fqq2KJwXB5bUHRdyjuhe5H6ipc51yP1a1nQaHkg+91qd9LTcG+f9/OudcXW6
4CUdPugo9bFPPvtRqFORpgtGvl+S1qbyf+O6VFH74e94AFFdF6x+n8XOyWN9
/RyCT+Kce5MLevQp0/5YXeF5n4d/XuvJTym1lr+iR3+Kg5zyumBGPWKfM177
RIwJ5vkP43M59CjSOLtK7Xh6W1ejC059hfnag/j78rw0sn+vsGaRco18G1Xu
lunfw2000R9xpilG7ZcU6yseW/RpnqudumJC7TW6T2m9nvdFSp9xCeiCAFCw
DtkT/Lia1FmXtYCZX4/gN61R436D6qt1hcXtYeq3UkLrKu4vWFE/C9cUojUH
SU9whnG7o3UL5RZ0R2FcYJifcI6+6r3QBT0ux2TsD8mZ6c5hrKPF8j8Efesc
sZDz6YLq2oEqroUuKJ02+Z3wvOjJOULedyXHSEXf9FozXh/Q2jTkdXByzDox
qcdqP2brgln1iNOeuyPEQAi5BrO+o0uL+vvJb8s9N5SxIskzL04X1DRNMF7L
J3hHnTF17om+yHFb7P0vu//UdZkM4rZrJaGtCn7Tab7gAIBbC/fDU+Yi5evQ
K8ka50ViM/i8VpVzWVhnUfjjLOIcwrZSbtpEvsSJai3HG0Ovt0nfM8g6zx5V
8niWRk5+6qvSBeWaGp8/fErWS7Yti1XN8hdMs6xaJX7t39HfxzT68yjVjv53
LNS0qKoLznOfhc/5Vqor7J/n066k2Yla2LzPI2JySeM/f6cHH6t+A0d5vqK6
oDL/X8q2goYo1B+Z1Xl+9UfkY3j3i5QY4mDfq9AFHVZ3QzUmtIV4HGF9Oye+
eLo7r0WsGgePhTa0LY3F5Jgbg796su+xkNtmvnbqqhFzgifrn+T5jMtAFwTA
G8PlxXZqNWptG9O5Ia8FmlaOStruJuiCwvr2SjJGjtecSsYPpl3LmLobrBar
e8t1wYu4trOc+9ViudMK17/wjufHi/f3+sx0Fv9Zp57wtxTb71Pnfrzm1tkR
/+7HuQe58ore55yM99peH9yj4Yl6rnKVumA0f9Pq1NrSaTgaR/Hi/Qr6a3SP
Of6Z8+mCJOWbZ759Vb8j7luykua3uihdUK1Nj3eS30g0/5b9R/i7WTpPrFiT
Oas+eNV6JgCA9xShfVDHuxob4dhy6u+SVr8pLXZX9q3Wz5JtHNf9ZN1xEefw
8wmLiOtRCX9+rw+p5TyXdMRYi6I5spaqC74dCXn1uH4UXXWGjpTUBbvB83KZ
n1ikB4Uw/e3up08Xf08q5rzPwuf895+ELij4T378E1lyXZE5n4cKd3xEX3Lf
TZbv8Ep1QRLrjzwaT7x34/tiz/IqdEHuS+znfpG/yXNeC1j8DsUaxKr5pOSz
p1qH5vnuE9qimB8wUYM3y/d4rnbqqhHHqol1akH/VPiMK4AuCIAUzzFr4+pr
bdL3hzSW9ZCi7a17s3RBIT+rorZSXHNqjrxa8/RV74UuKObhae2F98HH6G31
2pnqPFdWy1Udi7ksXTDOxa4pNdLMOOJF64I+yt8j+7j597hkXZB8LX8W28Vz
oLB9k3PFNMQxWnodyMX5C7a9ttfkuSBHJunrtcQxuF9frP/x7yllLToDoX51
SgygmNemcc3HjgCAK0PSBeX2zj7sxm2pv4aXqN/kUFeL25ZEe8nGltPxRFMR
s8uPwXTHiervFc5xPm2rE/2zNMbh+anF8UpeXIJLNvfLEXJksfoDKce4El3w
eYH6D4V1wa9YDjmpbgXfT9Lonj4v17lV0gXnvM+i5zz6Iryvr+nw7Bm9CGqa
/E5Hfx7Ti5dpeQnnex6pvOJ1Px6rdcFeso7wlBK6IH+2qryKrP7IR9/8Tk+/
CPMhfifWKZG5Al1QyB2gmDOKNXBn/r2za+Z+KCo/ZGtP9PVr7iXHqrxmU8JX
RWgvknmvuC9h5Hs8u7a52qmrhmuvqrosZwqf8ZxPBLogAB6OFfhEDUcW2Rc5
bWhRn7eb5C8o5chOrPsI41zVGLQg70IXDONwr5AsvUyoZbAyi/Hkzzct/27O
eVL1vHu1aSxm2t+1GtW8bWpaSl3djL57+bqgen2L1x3Rj62gnnNgpxb1I01n
gbqgkuuvC/rXaB2Z4rUJ/s7Frtrc4jkVstYcryq/ID8Gj2WZjot4ruuy4xQe
z6/M7cgQ1lK0dvV2EQDw/iD7C7L2Tu7/4zZqGhMXzH+FGDs5xs2mDvOD0aI5
ub92o8WxdFyf07pBHzCdi9embeec55geS51nmue3FfoYyYe9c5gyn/bG4+3g
/N2o71LlyBpu+vemznl45bqgqobu8z9YHGhOPWLZ94zXo/0/XndiQke8Vsad
H2ms1J1cev08+eOINUAKPpk577OYLugwLe3HEr/ZHM/Du69PPv6RrDeKjvvN
H/E9s3rAQp2Tz9LieAvUHfGPdSY+N//ZZh8rtg8fHKWce8bSdUFXrFmUeJfE
/Mx+DK9z2ArGj/44ifsyy7589gGLXdNmup7/2nhtp6Z1Zuu82fWChfi3RC5S
fm3TY099g6bXNk87NRd+PrO16fxFu9+lcYGD8jp4Sn2V6Z8t/z5mcT/9lBpT
fB/oggBk45yZZPr+80Xb25ukC/I1BUU+Z2EsG4wPpzpiXo6XrGu7Cl1wzPoX
7b5e2m+oKnl6mXOc7ucnxxfPeSU03GmSttpNvXf7WKf2RpeMlJjdzKMvRRfM
19uK6UcFdcEq8dsFrzOLMrqg6Q9nea5JNm4p/dzZ+mKRfa09MZ989zhrbZTp
gjvz6IIaNTc61NkUrRnlExTXcMUazNyydT2Z8b5Y2659mPdNSHFz0ZgVAHBr
ccX8VPUtgxzXIXN31r6s94N+OWpTD4azmm5hrQ4xNmy6v0v2SZjntU6t+7W4
nTqwaLhdI57TgPu8+G2xO6v9Gc/B5ztH2G+qxmJmlO9K9rVxqCO0zxrpx6yN
9Z7RMHxGK00yWVdjCVqjQ+O96fPrHqXk/XsHccSfPHxK4+fP6MXzUzr85ruE
llNKF/QYfcPqfDBtit4cC+f1fQ1/+PWYXr9xyH31jKz//UKfz2pTPDkTO0B+
Tx99+iN9+/CnFPuRHvb+WMh9Fq3f8ojVDP78wRManf5DY8+s0M5OvXOekyv7
1FV6Hs/oAdvnQe93Gr+88I59Sa/Pjugh0+KEPH7jp8K9Pnjsncc7x+jXX+ho
fBnfC9v/W/0pHT55Sk89O/z1KT3q/USffNBOPLfDl+rBw2shrjzUdHMGNsvW
BYU2rpX0U+M5+rQ2GYf6rB2ZbmkL8RZ1Ms683+rSJmNrpi+tt4T83daZMT1e
GKvCtbuEv7W4ZtuWdT1p3aa30xaubZ52ah7kuMX8enmi9prMrSDmitCPjGlO
pNR4nynQBQFIYeKNkU5N6m+3qRb6o2jeGGMyLpZfkMaldMHIzzrtaEXrQlTQ
z7g/tiqPvrDmsGfMYgqLx7uqrm35umCy9m9pHbMiRfQy96SvrGutZ6zjlMHx
xvdNnhNY9XvxWjJhH7lvTmuiFGApuiD3XU2pOVhZFwyO53pjjza1N7vU3Wyy
+y+We4NdRaX6LiHF8wtmW9nnXuY3kzXBetG8oqpjFVnXYPkFVV+qzdZGfT9R
hx1HiP2dWXOvxLhGutdEPpo0vP6gxc/rj2GXlM4HAHAz4HlXBPP6Cn8aOU60
73Vhfmmsp/dr/nb2XrJ/6LE1G2UfeV/sT6ufQ5yPtlmtKn+dMRzXyHUAfOQ8
1nG7Gc/jtfXkGq6qP2xk1EG5mrojvq9aej68qf8a8/EqqQv6dSd4vr3Pn8QT
DvfsaUoNXdHuPjxOvadcuxNqkfPdp9WL9c2sOGKV/pVmnzx4Sq/5syz7PCbP
6FuFNpe0Do2EnIYO/ZCy393Ih0/t45duftx0Vq7AU9GvUM45qdxnubogX4vV
NobJDQTtTTF+lPJVJ7Zj8+y47Yzrv3FdMTEfFMZkivV+xbU1dtJr+JZpp+Yh
kc8sr+3isdIKbVRup+VnmAZ0QQCmuJcOjU9MGuz2hHVSsU0QdcH6epd62z2F
6dTbqKe3WyFC+9SgwaFBg/1B0g4G1F2L60J0dwdkqLbb9/bf60ZaR7Fv1Jmt
VU+PbSgajeSYrF5tjeQd64JX1WYV1V7Gu3LN6+mzDbS5il25a5vsXQmtJq53
hVxapG+o9afWjpGrD3KfhMI6Sg58vJFW/5DnFxz6cf+u6/2fG2j58VxnVj88
od/ZQg2zeM40KHml7Lhak/T9lG9XZcL3fLW6YOhnkb2v9xw3xXeztpm9xpiH
meGX6be9jvfCjw/jsZifX3DotYf9XZ26mx1qrTXi9RnFuMk5aiWeTSfTt5Hd
65Z0rznrqQkuLemdqpNxDnEQgFtLok3w5p5bRtRe8bXYFa2VHE95cz55/5o/
D50dwNquCe1N/0Q6wFlfatMGyTlm1XNEY2C5Tjwbbxyl+1rbhz1lXhNttU2G
fB8zxpJGybVIFYvWBR9lxL8ePlBpbb7P2qmg6Tz49Zl0U7GW9VFPXcPi9Z8/
petBb/6hR591UrSmDn37+Mibr6TfU66GJsTJVr/PF09in8Inivo4Iar6zHfv
ZFyjXI+39PNwyfrtsdJ3L9A3P/2JrFeqGOMRPVDtE8VY5+uCdz/o0Odf/ERP
//dPoffz6DOuux7n77BkXZDnDkyrt859ptuKNVoxZ4vUbnj719jf6ht9Qc/i
4+NETCz3JVTlh5aurbWrnrtUaafmwmuPW3zOmtd2sTi/unL+Jc6Ba+v9XE3Q
B7oguPUo1g5kq91vkX4w02oKbC9bMV1w8VboG52w8eu9tFwtbAzr1zCo2iTO
01exfDiF44iluMDrogs65752V8v//dY6NDiyAs0kD+d0qDxmbaPAmtbEIXO/
q/Bf1KizZ6b3TVIejtr9dopOXsw666I+o6e9Iyy/oKwx2Yc6tdbb1NkOdU0x
3tfH3G5SbbVBjfsNqnv/29oaVFj3U6zFVbJ8XbC5J9XgONSLxxGz+3LDWIzZ
eVVx086p7GeaXEstj5Tjnj9r11T6zRYxX79zvXd3sKnS12fbrPVS2ytfQ28n
1g4Ua99FuLREv8EV9VgYAHBLmLg0nuW+deSwv/BvZxm5Ctj+tjwGCP92aie0
nxDXHpM5smiclTO74jnsUyuaY7qOQ+PTWY7fs/TrEY89XYc3Z/skno8C+8wK
ti+y7SJ0wVK8OY9iXseKvH5L5a1DL4IY22feNXj/+3KJdRCWdZ8veQ7Dn+nF
G4dev/F+6H8v6PXL88BenB3Toy+Y7nfnR8FnMKLC83BfefcV7HPmvY9n9Prf
vLdmQq637Xj8jF6Mve1fLbPw2IQOmS74pEjiuauoR5yD3/4E7UrGowm3CdoN
1d+K5Pyvcm0X07bRzns1KrRT82JuzeZxKfFSpbi0g2eYqJ+aAXRBcOtRaXNa
jZobPTKkWDXV9lrgVyyZVOfhWuuChZ5RgTFsoeMU7KvODWqu1qm51qLWRps6
m21q8HWPUvflUn+1yn7VEXRBPx+vOybjYED6dofqss9T0P53yTr3ttlO+jxx
ja5+v0WdLd9HtR/pWNZ+V33Me60gZ0fJKyfroKfQaepR3iJ5+8VoYyrrJHOW
8DNfON54oZg/2Dx5AAsddy5L0QW3We0VeZ7F1ju7Gd8Rj2VLrHsqxhw8h3H0
/mb4faQ9l/56jbR7de99bXjfcFN8P+XfIKUN9NvV2qwN6Gx2Sd/vM9+WBg3P
bRrudhL31do1aLiXjAGprzN98HKs9JPtHMyZZ2BiU1d+J3xfoCueJgIAwG0m
0gUr5PgAVw+PNT58lbXlBT28E/sAZtb6fV949Qd9GGmhP6m1UBmhvtyyLxAs
jAsjmn+pajBfBeE8oIx+UGUfAK4zfr6xzs60HnGub5Yb+zd3VP7Tiu1S84ey
3K1RHOZkTnPM5DGvC0zPyNIFxTrxSeuk5JpWch63s6n+ZwuGX3/P75OdlFwa
Wp30Qzk3hkPmgU7N1az6wHEuiYQv/r0WDUbz6rcODXe4RtlKr7Xq+2ttNVPr
HZc1vz5yczOOZZofOb/gEo6rTeu6uLN45jzzv9OsuFof56gb64LKJIvxsdIw
0nJcrdRooIrn4fkmVzsV/YKT8fvcmvtJ7c29sMm58PNOZ99PrFs2yTwTfVX9
WG6D35PvC7gq3vMwvB9H3rdFw4W9cC4Nt9k3qVXIwwoAAKAykS7o9Qv9Q4OM
A8/2jeqxLmCp8PjmwzcZG/LayLwWy3uLQ08+jX0Fv5Rj0dNgumBzu09G+A0c
Qbe5rojxPM3sOgILxh4ZNPDfD+89CWsi52l8VfYB4L1kYtNgp0f6ziBbuwi2
073tdDLTck35dcnXm9TyrKvI0Vz1+vxjNtfbC5zrLggWs5ysa89wLW9OXwv8
jRqR1QN/Of2ouE+PddCN5+f3+1c3hrgYJvTP4cZU5/PjVzteP20W8eW7dMg6
Nkjf6lDTu39tlvNW1nuNDe/5bOjFjlkGx6LOaj37t7r2MJ1KU8fJVz3uYN37
Te7VvHFX+djT8V472Fe711panQr3zAzyGfb3+qTvTtsiPy49K87L2tepr8pF
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
nC7ItNCF6oLecaO1Fl9f5jHncxjGSgCAa0y8rub1y3OuJd12oj7Tm0/r+wMa
+ONVb8xrKvph9+wXuutrcx98Vcru/t9X9Oi0eiCLe/o40gU/uiJdcPz4O/rP
na+C+53n2kExyryHi8I5MYJc6f0973y7ndmcdM45QyrSnHl2Dh7j0hth5JVP
tedoHcRzcX1rtp6+uuD4HQBuM+dxfjBtM1vbEOf9cbyxtRvHwmrrxfJdXbUu
uFDYMyurC9rHeqyjhvqJLPtNHMlvcIXqc+Te8eu3iOfUqL3Vo+5WN8N61Ntq
CtdQ+F5Z/sJimkx1XXA8GpIR1CXJsGOTjJ043re5Y5B5nLNPsJ/Cd9b7bQy5
Twp0og4NDgaxfnzA78OmNlvD7O0bZBykmTeuOTCvcR8nvZtaV8g7YG7x+N9a
5RovVmp8fXlbmC7I8xHkxfqWOSzzt61tTuuZmLtd6qi+y+0eddbjZ1xb61Bv
W/X9dqi7k92eAwDAO0PIX7OcHNUBjp+r1rjGfWo5nJE39jhIjk2iPtObI+fh
/h3rc2Xt27+qL2y+C13Q6nWic/7w941flL163v5DX95p04eefa7/k7t5mfdw
KUTtytXoguE5+Jh1oTnM31sW8BxDf49F5/UB4BYTr9fGccDu6YA6cm1iqb7A
QMilJuasq23lz0dvsi5YKSZ1YlNfiBueaknptYddMrbkHGsNMsrUDr6wqHtf
8q/XWmQWPIS93xb0n6JndkexztEttG5WVReM44+XYip/K9cS4mWL7MufRzFb
VvzDnLiyn2tT+ZvIserdw/K5ZWRdUCv1/JakC7J57OJi3lzWdhbLxWDvhXp0
nUzkzwEA3ED4ekjR9eQKZ5mNLVr5ebNvAuHalOJ5RX1mkTny+Hf6/OMuffnZ
d4J98kGs/32Y+Lv33188oRdz9DnvRhf8GrrgPLwd0UclfrNS7+EyuA66IPwF
CzD/c4zm4tAFAVgMdhzvGdcR5fPU2rQuprcd10JaqvxojilsU9vMHue9C11w
uNOh9kab9KP5RojldEGXrP1uUtfw42sv/Rw7blBvI2H+3yYumbtSrWL/2a7r
NM4a3jhj6m8m/a18n8OxH7tboAGVtaxBVk0NCe4H3j0ak2OrY4jjy6iuCyrz
ly/KVH3NRF1rI33fKtd4hb6vBfHXCmrCNTYy9OWkv2tto5y/a/y717Jr82aQ
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
QVb0YY/GeVIlnlvUWUv3WWwp8tfMgvugquu1mmHcZJTP0tvzC9QFm9QKa/pk
yzcyry5obKm0qqh2xfh5/PPGrO+V5dAT9kuJO8903c4z11VpjdN76GpeQb5N
z2yK4rMXNdsWjk2KdYrZ2FF8fPBvVZVnNdOhdKU/caouKMesy0ZXIH4HAABc
nLloMxwvloX8EeOn4ntAnbuY625l6rK1na40x27zNRc37uXMErZxx6/u36wT
+d2X8xzk5muJaj/xd3vvYTA/T4j15flMtNU2RUu+PLaA7etct23pQr6J1sgM
8qVI68UXpAsev2Y61/UGPW6/of3Dt6T/vkv3r3Pd6H90LO2brAtKetV1388u
+viQvhf87Z7Q7p9vvbjc/e0XqVpVXl1wkXbyc3L/wsftbfr5wf9oO7gO/aeG
8PnuX+/I/nRGx3/tiprfd79Q/9WvtD9d7M97P4xfRU3z1ZCO/zmh48MhvXww
vZYnZHxy2v/7Nq2vv6BH9xriPj+9oMePnL8/eEZ9ReHEeZ9D80B35lW6oI35
Y2s7/H1qK2L+pdR6hhegCzo/QM//2JQeJ9ObI8afsSLbOGZzZz4ul3NIVZi2
Zx6MSZ+Mqclyndf7Fpuzlah8U762KKbFzWMVXZt6/d9lwHyJatxf0R5H84pb
7LmY8z7KQBcEoCgsb8zmro3WN1rUHY6pu8r6E1UuLJczcX6dZFkoMk5w2q+l
13BdTo2KTPWIs+oXebfPSVd5P6o0yCV3+BpyONZXHWMSaXP1Pt/gM9UFFTVp
jc3get3YqCCe3NOPnP/uPm+n6rjz6oL2kRu7b9J4k+l/N9visbSykBdPFc8q
012Nxgfa3RbpM17P81y36ztYY/PF6Zooz2u6bMtWI1tCuZZSz1XjUpyzdqOx
YlFxxBgjAQAuDa4JlmI11q1hbUYfarO4A2d/aQNh/dEZr8TjUcSxnnIsstA5
+Bihpe6zFX2wxTTB6Vp7BM//UhU1RT6nTqmrfHFxxCf08rsGPf5NkWvu01u6
L/mdcZJ0QS/uNtzvR9r/mHxd//fdtqgZukx2I9++b7aF9uePI87fTlkXdON/
Y9d8figco/9eepDfvwnbdOPOm0Lux+nvz8L9brcPY806PRzS/nvp6Zlsp+4j
k/c57LFxZ+fIonEQ/9AM5god5tdx2f6CeVm0jTrzBWj05U5LHC92FHmLuG9M
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
if5sM+q5crL7C2Y55hXQBeVrU1x3ah68Ge20+Lo01xNWqlRh75z2cEz6/pjG
WexApx6rH6jMzXemU0dRr9Y+6il92eJH+Dx1wdR6xAnPmL3P8+iJ85Y8+pq/
Vsf9I8T3r7DOl6PGdBaWqQvK2leJ1Uzz7p9lUEP42zXWPzn/ch/NHDk5he/r
ZkuI/+brv/lzpmTXBRd6bgEAYIlwPzxl3tVzsQ67XM9d6E8Tar1zX0CVD7Ww
pqTI41fEOYRtpbzKsXyJ56p1K2cMvVqn9laP9Bk1N3kexCQ/oXDbC9IF5Zoa
9x/tkv6BbctiVdP8BZMsrVaJW/t3/+8R7f85TLTh76NIX8vYpqLbmfmcn6S6
wu557jQlza4p+BIuej9Czs/I+PMNrX+n+g4s5fmWogtaou9tVc5Pd5JNp4/a
dQV1wQXaKMQXJ8T0CWsUqvUDvr4Qq7Mkz6OqYp4jk+UtlL5T5Rq+VqLaWpM6
e2MyreV+AdAFASiOziw9xf1tP+35/QObn6bmZsuiz31puqBz7vpKhVpbAzKV
4QIXpwu6+GNzd9zZ9OpMm0F96Gg9KEeuxknWmh0K+Pr8NZWvoEsRumAQI+vp
2HGzmL7j5QtS5Z/z9rUivVzpj7CYLugi1GhhfhW8rem1tafwNcZrCs111hpi
MSxPF1TnUTGel2P3KZyTymMi/nuaO3eqWGM77feYt55JVl2wtNYh48gg/VBX
mnGkX9K6BwDgP4/QF6rfNb216djSj2dLqj2W5BMkz0Hbk3gvx3U/WXcs4hyW
KR/TEnIHxsZXzvinlPsdLNasU9dVjrgQXfDTvpBX76XCDyhNR4rrgk3vftms
Tq6rdR3znZj+duPObvFtUrFgOzOf89+3MV1Q8J/87gXpcl2RBe+HCtsY0vfc
d5PlO1y2Lsjr5qly3XDNK0s+lauoCy7SRp6PVRUf7MbL8fUWVd0PwR9Q1hbt
9DgmXnOvIl2b4CMurZtfBNAFASgOIZ4jmNeW79apvTMgw0ye/6bqQvZ/Uxec
9qnqOMW0OOLidcEkFtFustfyje0pxNAkx7EuoAsGx4+tv+VuQ3TM0kPF9Rag
C3K9qb6lx/dVxiOpDsPXILX4vIHXJ1tiTs1l+gvWnf5IyLG5P6b2ail2Pu7X
F+l/Ct14DoRaMQlxcTzHfVqt6ZTWZswvmO4r4mJuIb8gAOASkHRB+T1g9pvR
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
B8O5Ip0=
     "], {{0, 400.}, {643., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFAHpJaBSSexoCCHBcjKzSspCnJ3UoiIjFJgf8DAyMDKIMBgyaCemFxc4BgQ
4ANSDaNRwbdrDCADGS7rgsxq/2L94Z+FyFaF9NX+8+S4vDDVowCulNTiZCD9
B4jzkwuKShgYGHOAbOXykgIQewKQLVIEdBSQvQTEToewd4DYSRD2GbCakCBn
IPsBkK2QnJGYAvQbyHydJCTxdCQ21F4QEA1KTdZT8AwJ1Q1ScArRMzIwMtA1
JOBukkFJakUJiHbOL6gsykzPKFFwBIZWqoJnXrKejoKRgaEZAwMo7CGqPweC
w5RR7AxCbE0mA4N7/v///xsRYlpAsTWPGRjY1yLEFJgZGLjXMjCc/leQWJQI
FgKKMDBZPGFgeAH0uzhQHYgtsqc4zdgILM/I48TAwHrv///PakCzJjMw/J3w
///vRf///10M1HyHgeFAHgC5OnSC
       "], "RGB", "XYZ"], Interleaving -> True, 
     MetaInformation -> Association["XMP" -> Association[]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643., 400.},
   PlotRange->{{0, 643.}, {0, 400.}}]], "Input",ExpressionUUID->
  "fd76265d-6baa-4700-a8fd-87be87056a4a"]
}], "Text",
 CellChangeTimes->{{3.793004961102743*^9, 3.793004982230443*^9}, {
   3.793005036223667*^9, 3.7930050795675163`*^9}, 3.793342214929387*^9, {
   3.793342468080917*^9, 3.793342468080917*^9}, {3.7933437167338724`*^9, 
   3.793343791385006*^9}, {3.811856564291389*^9, 3.811856564722418*^9}, {
   3.811856685695951*^9, 
   3.8118566856966467`*^9}},ExpressionUUID->"189b5c2e-dff6-4db7-b59e-\
9c7f0594f133"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4c32e469-9de5-4eca-9c5e-c5019f00316a"],

Cell[CellGroupData[{

Cell["\:603b\:7ed3", "Section", "TentativeExample",
 CellChangeTimes->{
  3.811863493074971*^9},ExpressionUUID->"9503359a-3e82-46ce-b923-\
1055fbeadbed"],

Cell[CellGroupData[{

Cell["\:8ba8\:8bba\:4e86\:57fa\:672c\:5b9e\:4f53\:6846\:67b6\:548c\:67e5\:8be2\
\:5b9e\:4f53\:6570\:636e\:7684\:65b9\:6cd5.", "Item", "TentativeExample",
 CellChangeTimes->{
  3.811863511701371*^9},ExpressionUUID->"07a048b9-a133-4950-a0f1-\
6eb033acb4c7"],

Cell["EntityPrefetch \:53ef\:7528\:4e8e\:5c06\:5b9e\:4f53\:6570\:636e\:4e0b\
\:8f7d\:5230\:672c\:5730\:8ba1\:7b97\:673a\:ff0c\:4ee5\:52a0\:5feb\:68c0\:7d22\
\:901f\:5ea6.", "Item", "TentativeExample",
 CellChangeTimes->{{3.8118635140204153`*^9, 
  3.811863529796958*^9}},ExpressionUUID->"182bcf43-95de-4cd2-baff-\
7d14fee2a9ef"],

Cell["\:8ba8\:8bba\:4e86\:521b\:5efa\:5404\:79cd\:7c7b\:578b\:7684\:6570\:636e\
\:96c6\:7684\:8fc7\:7a0b.", "Item", "TentativeExample",
 CellChangeTimes->{
  3.811863516045648*^9},ExpressionUUID->"03141302-298b-4b6b-86d6-\
e68b5ba0b74d"],

Cell["\:4e3a\:4e86\:4e86\:89e3\:6570\:636e\:96c6\:67e5\:8be2\:ff0c\:4e86\:89e3\
\:5173\:8054\:7684\:64cd\:4f5c\:5f88\:91cd\:8981.", "Item", "TentativeExample",
 CellChangeTimes->{
  3.8118635181119013`*^9},ExpressionUUID->"9e574773-5a56-4991-bf37-\
d48481eebe9c"],

Cell["\:5404\:79cd\:6570\:636e\:96c6\:64cd\:4f5c\:ff0c\:4f8b\:5982\:8ba8\:8bba\
\:4e86\:8fc7\:6ee4\:3001\:5408\:5e76\:3001\:9009\:62e9.", "Item", \
"TentativeExample",
 CellChangeTimes->{
  3.811863520129211*^9, {3.811863562842355*^9, 
   3.811863569018098*^9}},ExpressionUUID->"4b362fc7-c739-4588-a9b1-\
e079df2df2ed"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"72f8a04e-2247-4d9c-9e6c-63a794d9c840"],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.7929930121608663`*^9, 3.792993017461726*^9}, {3.793083473728819*^9, 
   3.793083475870114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7930834795034676`*^9, 3.7930834897700925`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"0a559761-3f55-477b-ae32-43b99eb63142"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 6}, {Automatic, 0}},
WindowTitle->"Module 7",
TaggingRules->{"WolframUNotebook" -> True, "TryRealOnly" -> False},
Magnification:>1.25 Inherited,
ButtonBoxOptions->{BaseStyle->None},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) \
(2020\:5e747\:670815\:65e5)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo", StyleDefinitions -> StyleData["Title"]], 
          CellMargins -> {{120, 0}, {0, 130}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellFrameMargins -> {{0, 0}, {0, 0}}, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{120, 0}, {0, 40}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 81, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 81, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{120, 0}, {0, 12}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 12}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TitleGraphic"], CellMargins -> {{120, 0}, {0, 25}}, 
             CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> 
             False, GeneratedCell -> True, CellAutoOverwrite -> True, 
             ShowCellLabel -> False, DefaultFormatType -> 
             DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
             FormatType -> StandardForm, ShowStringCharacters -> False, 
             FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
             GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], 
             Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
             StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
             FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
             1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData["TitleGraphic", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 25}}, CellGroupingRules -> 
             "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> 
             True, CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             "NaturalLanguage", FormatType -> StandardForm, 
             ShowStringCharacters -> False, FrontFaceColor -> GrayLevel[0], 
             FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
             Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> 
             False, StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 
             10, FontWeight -> "Plain", FontColor -> GrayLevel[0], 
             FontOpacity -> 1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
              StyleData["TitelGraphic", "SlideShow"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
             ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 70, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0, 0}},
              ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}},
              LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", 
             FontSize -> 70, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 30, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             30, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Open]]}, 
        Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
      "\:8eab\:4f53\:5185\:5bb9\:6837\:5f0f", "Section", "TentativeExample"], 
      
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 22, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 15}}, LineSpacing -> {1, 3}, 
          TabSpacings -> {2.5}, FontFamily -> "Source Sans Pro", FontSize -> 
          22, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]], 
          CellMargins -> {{140, 0}, {0, 15}}], 
         Cell[
          StyleData["Item", "SlideShow"], CellMargins -> {{140, 0}, {0, 15}}, 
          CellFrameLabelMargins -> 10, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{140, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], 
            None], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{140, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{140, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
          CellMargins -> {{160, 0}, {0, 15}}], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, CellFrameLabelMargins -> 10, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{160, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            
            CurrentValue[{
             StyleHints, "ColorSet", 
              "Text1"}]], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{160, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{145, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 
          15, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{145, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{180, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{180, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          CellChangeTimes -> {{3.772393378081081*^9, 3.772393382879437*^9}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{180, Inherited}, {Inherited, Inherited}}]}, Open]], 
      Cell[
       StyleData["Graphics"], CellMargins -> {{120, Inherited}, {15, 15}}, 
       CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
       False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
       FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
       AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
       LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
       ShowStringCharacters -> False, NumberMarks -> False, CounterIncrements -> 
       "Graphics", ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
       Arrowheads -> 0.04, Dashing -> None, CapForm -> "Square", 
       JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
       1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
       Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
       EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
       FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
       Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
       FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
       1, $CellContext`BackFaceColor -> 
       GrayLevel[0], $CellContext`StripStyleOnPaste -> 
       False, $CellContext`BackFaceOpacity -> 1], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Sequence[
                 Cell[
                  BoxData[
                   RotationBox[
                   "Experimental", BoxRotation -> 1.5707963267948966`]], 
                  "Text", LineColor -> 
                  RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                  FrontFaceColor -> 
                  RGBColor[
                   1., 0.592156862745098, 
                    0.10196078431372549`], $CellContext`BackFaceColor -> 
                  RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                  GraphicsColor -> 
                  RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                  FontSize -> 10, FontColor -> 
                  RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                 Cell[
                  TextTranslation[
                   BoxData[
                    RotationBox[
                    "Experimental", BoxRotation -> 1.5707963267948966`]], 
                   Entity["Language", "Chinese"], Method -> "Google"], "Text",
                   "TentativeExample"]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]]], 
             None}, {None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{120, 10}, {5, 10}}, 
          FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{120, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{120, 10}, {5, 10}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{120, 10}, {5, 10}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Open]], 
      Cell[
       StyleData["Separator"], CellFrame -> {{False, False}, {1.5, False}}, 
       CellMargins -> {{120, 0}, {0, 0}}, CellFrameColor -> GrayLevel[0.8], 
       MenuSortingValue -> 10000]}, Open]]}, Visible -> False, 
  FrontEndVersion -> 
  "12.1 for Mac OS X x86 (64-bit) (2020\:5e747\:670815\:65e5)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"16c1e841-8922-4be9-94b1-589176a37cd0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[602, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"23bbb299-39e9-450e-961f-ac8f280393af",
   CellTags->"SlideShowHeader"],
  Cell[373525, 6157, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8e42fb48-26f5-492e-a1f1-374a7df010bf",
   CellTags->"SlideShowHeader"],
  Cell[375555, 6217, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e987da67-27a8-472a-a5ae-092021e656f2",
   CellTags->"SlideShowHeader"],
  Cell[375775, 6229, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d7ed9e27-4dfc-41d2-87bf-66d5d0adddea",
   CellTags->"SlideShowHeader"],
  Cell[420022, 7144, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4c7dc298-f762-4d03-893b-fc7396342962",
   CellTags->"SlideShowHeader"],
  Cell[453111, 7963, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ba665b35-c74c-4e56-9ea8-161fe87ccfbc",
   CellTags->"SlideShowHeader"],
  Cell[554228, 9789, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"52dfc0b4-42a8-47d3-ac12-ffdebd9b26b7",
   CellTags->"SlideShowHeader"],
  Cell[567340, 10146, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"9a74d70c-08a5-414c-a531-2d86b25b1fb0",
   CellTags->"SlideShowHeader"],
  Cell[690352, 12306, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c010b910-f30f-4071-8af8-29d4d25ec069",
   CellTags->"SlideShowHeader"],
  Cell[690972, 12327, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4c58210b-1f0b-462a-a13d-f1839dfd0387",
   CellTags->"SlideShowHeader"],
  Cell[1316682, 25089, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"03a68547-a48f-47a3-9d23-49a0cfaac420",
   CellTags->"SlideShowHeader"],
  Cell[1467968, 28040, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"74b77ee9-c2ca-495c-bbef-50008d7d828f",
   CellTags->"SlideShowHeader"],
  Cell[1952961, 37181, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c8f64293-6a13-4b7a-863b-baf9b7032bcb",
   CellTags->"SlideShowHeader"],
  Cell[2307292, 45021, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"10e8f9d7-41d1-476a-9107-ec4a3bf9f65c",
   CellTags->"SlideShowHeader"],
  Cell[2323325, 45509, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"13d05aae-8c7a-4418-acba-f3d659d98373",
   CellTags->"SlideShowHeader"],
  Cell[2641360, 51416, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b929761a-792d-4f0c-a7fd-5b2ffdfb2c07",
   CellTags->"SlideShowHeader"],
  Cell[2754964, 53612, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"92734af5-9b5b-4d3d-a5a2-bf1bc59bea44",
   CellTags->"SlideShowHeader"],
  Cell[3479460, 68442, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4c32e469-9de5-4eca-9c5e-c5019f00316a",
   CellTags->"SlideShowHeader"],
  Cell[3481260, 68493, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"72f8a04e-2247-4d9c-9e6c-63a794d9c840",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 3515892, 69249}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[602, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"23bbb299-39e9-450e-961f-ac8f280393af",
 CellTags->"SlideShowHeader"],
Cell[741, 27, 15001, 251, 179, "Title",ExpressionUUID->"1bf734d0-ed13-4856-9f38-a48dd4b0652d"],
Cell[15745, 280, 507, 8, 309, "Title",ExpressionUUID->"7afe06b9-69a1-44f3-a4c1-3852548aaa7e"],
Cell[16255, 290, 255, 4, 79, "Subtitle",ExpressionUUID->"87d29050-f4c8-4e18-9c32-a006c95685b8"],
Cell[16513, 296, 356975, 5856, 477, "Text",ExpressionUUID->"08dff242-3937-4632-90e0-e6240a086d8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373525, 6157, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8e42fb48-26f5-492e-a1f1-374a7df010bf",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[373672, 6163, 63, 0, 174, "Section",ExpressionUUID->"75c36076-1ae3-4ed6-b6e2-7b13c07d3424"],
Cell[CellGroupData[{
Cell[373760, 6167, 109, 0, 114, "Subsection",ExpressionUUID->"25c20067-d5a5-4c03-883b-ff47fa3dc37e"],
Cell[CellGroupData[{
Cell[373894, 6171, 127, 0, 56, "Item",ExpressionUUID->"25878cda-6782-49ba-96f7-424aee14f9b7"],
Cell[374024, 6173, 127, 0, 56, "Item",ExpressionUUID->"64ad93a0-e0e8-4721-896a-ce3e712c54f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[374200, 6179, 616, 9, 114, "Subsection",ExpressionUUID->"1d270db9-4b91-4420-92b4-29d2f598296c"],
Cell[CellGroupData[{
Cell[374841, 6192, 471, 12, 56, "Item",ExpressionUUID->"bcc76229-e178-407b-bf53-b1678a017d95"],
Cell[375315, 6206, 167, 3, 56, "Item",ExpressionUUID->"b312a2e4-a663-4ff4-b33e-b6a71cf65922"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[375555, 6217, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e987da67-27a8-472a-a5ae-092021e656f2",
 CellTags->"SlideShowHeader"],
Cell[375680, 6221, 58, 3, 309, "Title",ExpressionUUID->"132ac071-4382-4957-a5fb-f194701b0599"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375775, 6229, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d7ed9e27-4dfc-41d2-87bf-66d5d0adddea",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[375922, 6235, 118, 0, 174, "Section",ExpressionUUID->"72815f90-ee3b-46dd-81fc-8b9d7ec2cbf1"],
Cell[376043, 6237, 318, 5, 55, "Text",ExpressionUUID->"b618bc2e-fc5e-485b-b71b-2a5c9d90f6b8"],
Cell[CellGroupData[{
Cell[376386, 6246, 837, 18, 76, "Input",ExpressionUUID->"b1f1e9f4-a310-42d4-b369-11885ed68713"],
Cell[377226, 6266, 257, 5, 52, "Output",ExpressionUUID->"b2e1ec54-75c0-4882-8d67-1caf0108a9bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377520, 6276, 943, 19, 76, "Input",ExpressionUUID->"1e266165-eced-488b-80c3-8bc116c1c984"],
Cell[378466, 6297, 227, 4, 55, "Output",ExpressionUUID->"4aa5c352-0b79-41eb-82ac-ea2b73322d3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378730, 6306, 925, 19, 76, "Input",ExpressionUUID->"eee3c74c-ac99-485d-b087-502cb3b12cec"],
Cell[379658, 6327, 1633, 35, 98, "Output",ExpressionUUID->"776db471-250a-44f9-a6e0-7cf9371f14e9"]
}, Open  ]],
Cell[381306, 6365, 151, 0, 55, "Text",ExpressionUUID->"4fda156f-20ed-44a1-b126-3258bcc70773"],
Cell[381460, 6367, 25562, 425, 570, "Text",ExpressionUUID->"30599e4e-99aa-4466-810c-762105610854"],
Cell[CellGroupData[{
Cell[407047, 6796, 519, 13, 55, "ItemNumbered",ExpressionUUID->"9c807d67-f6ce-4f03-8745-475048cf47c8"],
Cell[407569, 6811, 508, 14, 55, "ItemNumbered",ExpressionUUID->"861d5e31-43fa-4f8b-8b19-8c96689e831a"],
Cell[408080, 6827, 517, 13, 55, "ItemNumbered",ExpressionUUID->"20a5a19d-bc31-4bf0-b5eb-cb32bf8ae4d2"]
}, Open  ]],
Cell[408612, 6843, 271, 5, 55, "Text",ExpressionUUID->"2137eb34-a978-4570-b48b-4d7ec996022d"],
Cell[CellGroupData[{
Cell[408908, 6852, 582, 13, 68, "Input",ExpressionUUID->"e111147a-8f24-4c56-8735-35726855f467"],
Cell[409493, 6867, 330, 7, 59, "Output",ExpressionUUID->"5942219e-768a-4e5c-9f96-f3adb5c4a919"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409860, 6879, 255, 4, 64, "Input",ExpressionUUID->"81f8dc00-e60c-40c6-8bee-788746dfb486"],
Cell[410118, 6885, 234, 4, 52, "Output",ExpressionUUID->"c50c5fac-8196-4925-9f5b-368f14e3a796"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410389, 6894, 645, 13, 68, "Input",ExpressionUUID->"53e6b2f1-9334-4d5c-aae2-00678dfaaf12"],
Cell[411037, 6909, 360, 7, 59, "Output",ExpressionUUID->"faf1bbe0-7110-4706-b6d4-33e7172ea1cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411434, 6921, 643, 14, 76, "Input",ExpressionUUID->"d89e243b-362a-4b72-af98-b15d0ec29eb6"],
Cell[412080, 6937, 255, 5, 52, "Output",ExpressionUUID->"0ae82c43-e842-4f83-8dd4-6e87948f74e7"]
}, Open  ]],
Cell[412350, 6945, 935, 22, 76, "Input",ExpressionUUID->"b2f48a12-b3b5-4619-8452-3baaee33ce90"],
Cell[413288, 6969, 308, 5, 55, "Text",ExpressionUUID->"a1708a53-bdb9-44fa-8f82-7976807e5dc5"],
Cell[CellGroupData[{
Cell[413621, 6978, 305, 5, 64, "Input",ExpressionUUID->"dfeb0be0-1629-4b0a-873a-ce22e161dc32"],
Cell[413929, 6985, 336, 7, 59, "Output",ExpressionUUID->"b7dbbe93-cb20-41b9-a4e8-95bc8204ea23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414302, 6997, 268, 4, 64, "Input",ExpressionUUID->"fb829ddc-d854-4212-b297-9e152683c46b"],
Cell[414573, 7003, 358, 7, 59, "Output",ExpressionUUID->"de7dff2f-d284-4b67-8218-d33b5bdb4a64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414968, 7015, 701, 15, 76, "Input",ExpressionUUID->"aa9cdd13-1b12-4609-b0b1-af6c88e775f5"],
Cell[415672, 7032, 227, 4, 55, "Output",ExpressionUUID->"7db7f40f-2154-42d8-a6de-ad1ca5c11a31"]
}, Open  ]],
Cell[415914, 7039, 350, 6, 55, "Text",ExpressionUUID->"55f0c379-8ad3-4840-8922-257578b4524f"],
Cell[CellGroupData[{
Cell[416289, 7049, 258, 4, 64, "Input",ExpressionUUID->"d9957879-2052-47c8-b70e-257cb53952c5"],
Cell[416550, 7055, 343, 7, 59, "Output",ExpressionUUID->"79dc85e0-782a-4bc4-8a93-619ab270fb78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416930, 7067, 281, 5, 64, "Input",ExpressionUUID->"824c3228-4222-4b15-a135-76e370e79967"],
Cell[417214, 7074, 389, 7, 59, "Output",ExpressionUUID->"aa7fc956-9951-4dfb-8d50-a692f408a3f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417640, 7086, 688, 14, 76, "Input",ExpressionUUID->"8d496e9a-8b0b-4ffb-91b8-fd57c7f34d79"],
Cell[418331, 7102, 1630, 35, 98, "Output",ExpressionUUID->"a19415c3-4f9e-4779-bd83-41a4cb54105f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[420022, 7144, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4c7dc298-f762-4d03-893b-fc7396342962",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[420169, 7150, 136, 0, 174, "Section",ExpressionUUID->"ea35e031-86d0-45b5-ad42-60de315efb00"],
Cell[CellGroupData[{
Cell[420330, 7154, 124, 0, 98, "Subsubsection",ExpressionUUID->"4d4f2999-c2ca-49b0-9d27-74b78e455fe4"],
Cell[420457, 7156, 773, 16, 55, "Text",ExpressionUUID->"790ba03f-82f4-4fb1-b535-d3a558695285"],
Cell[421233, 7174, 604, 14, 55, "Text",ExpressionUUID->"3c764cdc-6281-4e07-9f88-f6b88166c11b"],
Cell[421840, 7190, 1776, 41, 55, "Text",ExpressionUUID->"1c1af029-1a9b-464b-bb79-e4a8ae6d120a"],
Cell[423619, 7233, 1595, 37, 55, "Text",ExpressionUUID->"eaaec0a5-7af7-4d23-b9de-3f3e3021adc7"],
Cell[425217, 7272, 1812, 44, 55, "Text",ExpressionUUID->"a2b4ed8d-5a53-4fe4-9c1a-f128485d491f"],
Cell[427032, 7318, 639, 14, 55, "Text",ExpressionUUID->"26941ef8-a4d7-4982-a92c-415c4d28d735"],
Cell[CellGroupData[{
Cell[427696, 7336, 257, 5, 64, "Input",ExpressionUUID->"0a09494e-3ac9-4470-b9ae-ce965562c4e4"],
Cell[427956, 7343, 2453, 57, 132, "Output",ExpressionUUID->"b2bdcf36-3c0e-490e-8aa2-6d6b41a6aa93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430446, 7405, 225, 3, 64, "Input",ExpressionUUID->"77ac99e6-19d4-4e94-882a-08326a4c7ace"],
Cell[430674, 7410, 1811, 44, 59, "Output",ExpressionUUID->"4541a70b-30ec-4d68-aebd-83d06111053a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432522, 7459, 308, 6, 64, "Input",ExpressionUUID->"aa726876-e945-40a7-aa41-70bd36115f33"],
Cell[432833, 7467, 2463, 57, 132, "Output",ExpressionUUID->"44470cfe-3b5c-44fb-b917-698af9d19130"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435333, 7529, 255, 5, 64, "Input",ExpressionUUID->"d8887b39-0ec7-4899-b9f5-5de1aa995fd5"],
Cell[435591, 7536, 2738, 62, 180, "Output",ExpressionUUID->"d6717d04-4c6e-43cb-ad9a-06396d572492"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[438378, 7604, 124, 0, 98, "Subsubsection",ExpressionUUID->"92bc9bd3-a363-43e2-8704-45bb75416ec6"],
Cell[438505, 7606, 643, 15, 55, "Text",ExpressionUUID->"a7031658-6fbe-478a-abd1-be593f899ca0"],
Cell[CellGroupData[{
Cell[439173, 7625, 261, 5, 64, "Input",ExpressionUUID->"9ca98ff6-6e12-4d15-9e29-597068a6315d"],
Cell[439437, 7632, 2613, 56, 180, "Output",ExpressionUUID->"42b8d60b-85cb-4ea7-9e5a-c6d12bcf1b8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442087, 7693, 260, 5, 64, "Input",ExpressionUUID->"3a69b27c-ef9c-4b24-8319-557185da5b88"],
Cell[442350, 7700, 2640, 57, 180, "Output",ExpressionUUID->"2be7e467-4abe-42ab-be5d-ba7afe2fb6db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445027, 7762, 261, 5, 64, "Input",ExpressionUUID->"04d78000-1142-4990-ab8f-58a995742fa3"],
Cell[445291, 7769, 2525, 56, 132, "Output",ExpressionUUID->"e3b5362c-3444-4068-bb48-00202cfdd612"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447853, 7830, 263, 5, 64, "Input",ExpressionUUID->"1465137e-99d5-4fcf-ae3c-7a102932b33c"],
Cell[448119, 7837, 2778, 60, 180, "Output",ExpressionUUID->"5ad6e829-4d80-421b-9411-52ce4a03da6a"]
}, Open  ]],
Cell[450912, 7900, 173, 2, 55, "Text",ExpressionUUID->"5937ba01-a11c-43d0-a56b-dd0f950dd363"],
Cell[CellGroupData[{
Cell[451110, 7906, 662, 14, 76, "Input",ExpressionUUID->"02ed52d2-2695-402d-b45e-292252042370"],
Cell[451775, 7922, 255, 5, 52, "Output",ExpressionUUID->"a78fbc0d-218d-4958-bc66-e8d0e5606704"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452067, 7932, 701, 15, 76, "Input",ExpressionUUID->"4d5f146b-b237-49aa-9bc9-a8d30ca24893"],
Cell[452771, 7949, 267, 6, 54, "Output",ExpressionUUID->"0c621d0e-4339-4750-8be8-4f7cd1625985"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[453111, 7963, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ba665b35-c74c-4e56-9ea8-161fe87ccfbc",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[453258, 7969, 136, 0, 174, "Section",ExpressionUUID->"7c507519-6b2c-44e9-8f1a-c829bfba74ba"],
Cell[CellGroupData[{
Cell[453419, 7973, 69, 0, 98, "Subsubsection",ExpressionUUID->"588ec10f-9195-401c-870a-1862102f1db4"],
Cell[453491, 7975, 350, 6, 55, "Text",ExpressionUUID->"2cc49d25-ca19-441f-95de-ccfa378bbe7d"],
Cell[453844, 7983, 249, 5, 64, "Input",ExpressionUUID->"fc3f5079-788e-4e1d-ab65-ebc203479abd"],
Cell[454096, 7990, 84317, 1403, 480, "Text",ExpressionUUID->"50a70e73-8809-429f-be5c-d8572ddd1e69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538450, 9398, 164, 2, 98, "Subsubsection",ExpressionUUID->"98697887-67c4-49e8-aae8-ab26c138531b"],
Cell[538617, 9402, 2413, 47, 59, "Text",ExpressionUUID->"7f752346-ae52-422d-b0df-fecbb7e4f5b3"],
Cell[541033, 9451, 4677, 89, 73, "Input",ExpressionUUID->"7c34bb30-4dcb-4667-bfc6-8ff8f6a3260b"],
Cell[545713, 9542, 166, 2, 55, "Text",ExpressionUUID->"631417e9-8454-43b4-9d29-e564eb87a1b9"],
Cell[CellGroupData[{
Cell[545904, 9548, 250, 4, 64, "Input",ExpressionUUID->"453e72b2-d3cc-4447-8033-8e9a4dcb6851"],
Cell[546157, 9554, 227, 4, 52, "Output",ExpressionUUID->"13ed565a-aa37-4012-a54c-03c124705aa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546421, 9563, 530, 12, 73, "Input",ExpressionUUID->"75a6f18c-9486-4697-8156-506edc4f0c01"],
Cell[546954, 9577, 481, 15, 77, "Output",ExpressionUUID->"cbfa0fce-7a9e-4a68-8145-f10462c25e66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547472, 9597, 485, 14, 64, "Input",ExpressionUUID->"5232b563-e56f-46a7-ade9-22239c7a10ce"],
Cell[547960, 9613, 469, 11, 59, "Output",ExpressionUUID->"b7c0db6b-bcb7-464d-aa08-b93230511d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548466, 9629, 466, 11, 73, "Input",ExpressionUUID->"207b27a1-f5e0-4462-9a67-ca8dc4002bb3"],
Cell[548935, 9642, 467, 11, 59, "Output",ExpressionUUID->"f06e4553-d6d1-479d-976e-2fc3f2524974"]
}, Open  ]],
Cell[549417, 9656, 275, 6, 73, "Input",ExpressionUUID->"e7153422-a3fc-484d-981c-5ee9310863af"],
Cell[CellGroupData[{
Cell[549717, 9666, 367, 10, 64, "Input",ExpressionUUID->"bd7ebf69-effb-4c50-8a7a-bd5405a4b46e"],
Cell[550087, 9678, 244, 5, 52, "Output",ExpressionUUID->"b8d6ab63-318f-4b91-b6f1-4709b9d36e26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550368, 9688, 458, 9, 73, "Input",ExpressionUUID->"cb7b1b98-387f-4e5b-b323-8f2cf2a78f27"],
Cell[550829, 9699, 394, 12, 77, "Output",ExpressionUUID->"bb316436-17c1-4c24-9617-43e417c0e549"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551260, 9716, 2154, 43, 73, "Input",ExpressionUUID->"ea126251-57e1-491c-8116-51797c2ccd32"],
Cell[553417, 9761, 397, 8, 59, "Output",ExpressionUUID->"90cafd33-d124-4de2-aa66-3411349a301b"]
}, Open  ]],
Cell[553829, 9772, 338, 10, 64, "Input",ExpressionUUID->"11a3a5e0-3753-433e-bf17-f45b83630adf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[554228, 9789, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"52dfc0b4-42a8-47d3-ac12-ffdebd9b26b7",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[554375, 9795, 148, 0, 174, "Section",ExpressionUUID->"f070cb82-46a5-4417-9988-d2cc36f502b7"],
Cell[CellGroupData[{
Cell[554548, 9799, 197, 3, 98, "Subsubsection",ExpressionUUID->"579d01c8-6bd1-4a9f-8b03-9407b632b552"],
Cell[554748, 9804, 139, 0, 55, "Text",ExpressionUUID->"3a95a2e1-f6b3-4244-b40f-16bdca7672bb"],
Cell[CellGroupData[{
Cell[554912, 9808, 698, 15, 76, "Input",ExpressionUUID->"890c6c35-2482-48a1-aba5-f5041ab93b47"],
Cell[555613, 9825, 255, 5, 52, "Output",ExpressionUUID->"fed9a369-386b-4fc2-95a7-68e5cba18bed"]
}, Open  ]],
Cell[555883, 9833, 217, 2, 55, "Text",ExpressionUUID->"26c4de56-f29c-439f-b4ea-26ab6a68a993"],
Cell[CellGroupData[{
Cell[556125, 9839, 651, 14, 76, "Input",ExpressionUUID->"3ae4a66b-525c-49cd-93c3-569863bea6e2"],
Cell[556779, 9855, 255, 5, 52, "Output",ExpressionUUID->"e9e7b655-03a9-4be3-a5a9-35569c984d5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557071, 9865, 630, 14, 76, "Input",ExpressionUUID->"60940f05-ee22-4579-9e44-4539be87152b"],
Cell[557704, 9881, 254, 5, 52, "Output",ExpressionUUID->"426f371e-e0ed-412e-9707-94875d0a88c8"]
}, Open  ]],
Cell[557973, 9889, 167, 2, 55, "Text",ExpressionUUID->"a64860c9-39b2-458b-aacd-157cffc5012e"],
Cell[CellGroupData[{
Cell[558165, 9895, 451, 9, 76, "Input",ExpressionUUID->"3628bdd5-0d99-4783-8c79-cbcaf6fe1de4"],
Cell[558619, 9906, 164, 2, 52, "Output",ExpressionUUID->"657b4b79-3532-4e51-b887-70e9ab9724b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558820, 9913, 469, 10, 76, "Input",ExpressionUUID->"208dd4b0-b714-46fb-a142-60842d509ac9"],
Cell[559292, 9925, 255, 5, 52, "Output",ExpressionUUID->"157caa9e-4099-469a-89c5-60712801c1bf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[559596, 9936, 124, 0, 98, "Subsubsection",ExpressionUUID->"e4bf24f5-4bd0-465c-a288-61159492be33"],
Cell[559723, 9938, 161, 2, 55, "Text",ExpressionUUID->"77d67edd-9f3e-453a-a208-e0cd12a65898"],
Cell[CellGroupData[{
Cell[559909, 9944, 1201, 27, 76, "Input",ExpressionUUID->"2c87b976-73ae-4ad6-b008-d7a3a4f96ea9"],
Cell[561113, 9973, 714, 18, 65, "Output",ExpressionUUID->"45a9eae9-5d4f-43dd-aeac-0d3b5ab2bb26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561864, 9996, 1147, 27, 76, "Input",ExpressionUUID->"919cb125-07c9-45c5-b272-d47e2020c57c"],
Cell[563014, 10025, 562, 16, 64, "Output",ExpressionUUID->"2ae1a614-d582-4cee-8b63-027c0c8252e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563613, 10046, 1649, 38, 130, "Input",ExpressionUUID->"7508944b-583e-43ae-a012-0a4ff9b46804"],
Cell[565265, 10086, 2002, 52, 175, "Output",ExpressionUUID->"c29089a6-458d-4954-ba19-ca11a5e6b1c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[567340, 10146, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"9a74d70c-08a5-414c-a531-2d86b25b1fb0",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[567487, 10152, 831, 12, 174, "Section",ExpressionUUID->"215fcccc-2ce2-4a78-b6d8-3954e90422ec"],
Cell[568321, 10166, 641, 14, 55, "Text",ExpressionUUID->"28cb8849-258a-46e3-89af-d48c47570f73"],
Cell[CellGroupData[{
Cell[568987, 10184, 581, 12, 76, "Input",ExpressionUUID->"e60d5a73-3963-43f9-b779-d96e52a747f3"],
Cell[569571, 10198, 285, 6, 56, "Output",ExpressionUUID->"d5f4d5c3-7931-48a8-8e38-36bd3f517067"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569893, 10209, 1257, 26, 76, "Input",ExpressionUUID->"f1791c91-6855-4682-b806-6a66cd288d51"],
Cell[571153, 10237, 800, 20, 59, "Output",ExpressionUUID->"38f0786b-74d0-4979-9193-ec70c4df91a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571990, 10262, 547, 12, 76, "Input",ExpressionUUID->"7b5ceb29-7eda-4837-ab1b-389bace67716"],
Cell[572540, 10276, 53863, 891, 115, "Output",ExpressionUUID->"b269ad3e-ae3e-42b8-befa-a492a64b46d2"]
}, Open  ]],
Cell[626418, 11170, 477, 11, 64, "Input",ExpressionUUID->"4b47e58c-aabc-4ed7-a3b9-b99dce6d54be"],
Cell[CellGroupData[{
Cell[626920, 11185, 160, 2, 64, "Input",ExpressionUUID->"547c33c9-e817-4bc8-bc3e-cd177d6f52e6"],
Cell[627083, 11189, 5737, 120, 75, "Output",ExpressionUUID->"15072e5f-6477-4ed3-84d9-f285808f5463"]
}, Open  ]],
Cell[632835, 11312, 60, 0, 55, "Text",ExpressionUUID->"4d36db2c-236e-432b-8ea2-e5a6518684bf"],
Cell[CellGroupData[{
Cell[632920, 11316, 581, 12, 76, "Input",ExpressionUUID->"f44f9e70-4250-459c-9aab-894b5a942d7a"],
Cell[633504, 11330, 283, 6, 56, "Output",ExpressionUUID->"5e8334cf-2ecf-4925-9755-fac0a615e0b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633824, 11341, 1162, 25, 76, "Input",ExpressionUUID->"1841db46-960b-44e1-bcc6-d6f552a7af8a"],
Cell[634989, 11368, 797, 20, 59, "Output",ExpressionUUID->"7973c37c-7239-4ede-a8c1-6436bca995ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635823, 11393, 601, 13, 76, "Input",ExpressionUUID->"b9226a62-880b-4838-8483-2428214210da"],
Cell[636427, 11408, 53864, 891, 115, "Output",ExpressionUUID->"7d26f0f4-b5d0-4f19-a695-b0085737742f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[690352, 12306, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c010b910-f30f-4071-8af8-29d4d25ec069",
 CellTags->"SlideShowHeader"],
Cell[690477, 12310, 172, 3, 185, "Input",ExpressionUUID->"03c4d874-b42e-4bdc-90a5-fce66f48ecf8"],
Cell[690652, 12315, 283, 7, 309, "Title",ExpressionUUID->"a51d526d-e569-4b52-8236-e605ae307d45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690972, 12327, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4c58210b-1f0b-462a-a13d-f1839dfd0387",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[691119, 12333, 639, 9, 174, "Section",ExpressionUUID->"1588cb6f-32ac-407c-ad8b-0854fc6ca737"],
Cell[691761, 12344, 401, 8, 55, "Text",ExpressionUUID->"3f8b3788-40e9-4338-ba65-635499ad95fe"],
Cell[CellGroupData[{
Cell[692187, 12356, 75, 0, 98, "Subsubsection",ExpressionUUID->"13d138bb-4db9-431e-a913-ff3dc68581cb"],
Cell[CellGroupData[{
Cell[692287, 12360, 280, 6, 64, "Input",ExpressionUUID->"fc43c143-b7af-4e64-b59d-70f8b1fe5ea0"],
Cell[692570, 12368, 84345, 1680, 743, "Output",ExpressionUUID->"c3c968f6-4229-4eda-bb35-546359d930d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776952, 14053, 620, 14, 64, "Input",ExpressionUUID->"4f984ba5-6d8f-43e3-899c-4e55de24f70e"],
Cell[777575, 14069, 37143, 705, 407, "Output",ExpressionUUID->"cab6b768-0d9f-4ba4-bae3-473eb139d891"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[814767, 14780, 69, 0, 98, "Subsubsection",ExpressionUUID->"4a8c4b4d-6639-48cb-ada0-fbd51c7d0bea"],
Cell[CellGroupData[{
Cell[814861, 14784, 369, 8, 64, "Input",ExpressionUUID->"182345d5-a5a2-4d4c-b7a6-e7da9bd6385d"],
Cell[815233, 14794, 149696, 2988, 657, "Output",ExpressionUUID->"f4febfa2-3aba-46e9-9b65-12ca62909578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[964966, 17787, 434, 9, 64, "Input",ExpressionUUID->"24976c7c-7bdd-4c4e-9b82-81a13da20827"],
Cell[965403, 17798, 38656, 723, 315, "Output",ExpressionUUID->"7ab188ce-9d37-471c-9a20-e27fa7a76cb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004096, 18526, 639, 13, 105, "Input",ExpressionUUID->"8490c5aa-2d58-45dc-a62f-56a3eb51a2be"],
Cell[1004738, 18541, 42802, 812, 345, "Output",ExpressionUUID->"e5486b44-6276-4e87-98cb-a3e9240d953e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047589, 19359, 87, 0, 98, "Subsubsection",ExpressionUUID->"84895e88-74ae-40c5-9a01-22d72965466e"],
Cell[CellGroupData[{
Cell[1047701, 19363, 318, 7, 64, "Input",ExpressionUUID->"39024095-469d-49d0-9921-7ab180616cc5"],
Cell[1048022, 19372, 217263, 4778, 743, "Output",ExpressionUUID->"a85ca028-1cf1-4ab9-9793-1776641ebf35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1265322, 24155, 457, 10, 64, "Input",ExpressionUUID->"d17a5749-c1bc-4c20-bc1c-92119eefcf79"],
Cell[1265782, 24167, 26161, 469, 159, "Output",ExpressionUUID->"c3073b49-d923-4f19-813b-ab74ff538f25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291980, 24641, 418, 8, 64, "Input",ExpressionUUID->"476172a2-f9a0-4bd9-a556-4ec269ad1bfd"],
Cell[1292401, 24651, 24208, 430, 129, "Output",ExpressionUUID->"013df7ce-cff2-40fc-84e3-bf90f5789c50"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1316682, 25089, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"03a68547-a48f-47a3-9d23-49a0cfaac420",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1316829, 25095, 124, 0, 174, "Section",ExpressionUUID->"0e8b2df0-6816-4cf8-a347-e50b1e12a819"],
Cell[1316956, 25097, 349, 5, 55, "Text",ExpressionUUID->"b06854ac-f7a6-4928-b864-16b45d749e05"],
Cell[CellGroupData[{
Cell[1317330, 25106, 276, 5, 98, "Subsubsection",ExpressionUUID->"26af3a1d-ad56-48d7-ace9-14ee02960bba"],
Cell[CellGroupData[{
Cell[1317631, 25115, 649, 17, 145, "Input",ExpressionUUID->"e9436716-87b6-43e8-b103-bedeae643d83"],
Cell[1318283, 25134, 653, 20, 138, "Output",ExpressionUUID->"b921ed6b-029c-417d-8b34-f4646306ac4c"],
Cell[1318939, 25156, 24242, 443, 159, "Output",ExpressionUUID->"938cdbd8-43d1-4778-ab83-3415ad46d456"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1343230, 25605, 249, 4, 98, "Subsubsection",ExpressionUUID->"3eb0a099-bd2c-49ff-a2f2-8d0aac5bfefc"],
Cell[1343482, 25611, 249, 3, 55, "Text",ExpressionUUID->"91e71f08-976d-471b-aa9a-8bb24b2f6c90"],
Cell[CellGroupData[{
Cell[1343756, 25618, 1055, 27, 145, "Input",ExpressionUUID->"eb2e0473-84cf-492c-aea3-0c016065c932"],
Cell[1344814, 25647, 29969, 552, 191, "Output",ExpressionUUID->"f390b2f3-2769-4ad9-a092-8b0f59203036"]
}, Open  ]],
Cell[1374798, 26202, 290, 5, 55, "Text",ExpressionUUID->"2f25c798-fd82-4148-b64c-4517ee4c113f"],
Cell[CellGroupData[{
Cell[1375113, 26211, 891, 21, 105, "Input",ExpressionUUID->"d081f097-06d9-421a-a5c6-436375a08ed0"],
Cell[1376007, 26234, 363, 9, 52, "Output",ExpressionUUID->"38283aa5-2bdc-42b5-acbf-34c8986ba294"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1376419, 26249, 183, 3, 98, "Subsubsection",ExpressionUUID->"99c7ab21-c101-4944-93b2-b8f7252f9074"],
Cell[1376605, 26254, 295, 5, 55, "Text",ExpressionUUID->"547acee7-f8f4-4107-abb9-8afc6bbae90a"],
Cell[CellGroupData[{
Cell[1376925, 26263, 1175, 29, 145, "Input",ExpressionUUID->"dd0e5d76-d441-4214-8ac7-68da938e4431"],
Cell[1378103, 26294, 36198, 679, 191, "Output",ExpressionUUID->"270ed834-9151-4ef9-9fac-3a4b6404e355"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414350, 26979, 285, 5, 98, "Subsubsection",ExpressionUUID->"535f79d0-0794-4e2f-9640-3fffddd779b9"],
Cell[CellGroupData[{
Cell[1414660, 26988, 3347, 79, 505, "Input",ExpressionUUID->"b3aeb954-5638-4940-a18d-f710ff7e8ace"],
Cell[1418010, 27069, 49885, 963, 227, "Output",ExpressionUUID->"23f5cd3c-7780-4796-9fb7-815ad6d85b12"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1467968, 28040, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"74b77ee9-c2ca-495c-bbef-50008d7d828f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1468115, 28046, 213, 2, 174, "Section",ExpressionUUID->"c1354bbd-ebd1-4a1c-bc2f-10e13a0fafc2"],
Cell[1468331, 28050, 295, 5, 55, "Text",ExpressionUUID->"5fa04e97-2de4-409d-91e7-948ac0ad43a5"],
Cell[1468629, 28057, 284, 5, 55, "Text",ExpressionUUID->"52a30fbf-b7dd-4287-8035-617754ca23a1"],
Cell[CellGroupData[{
Cell[1468938, 28066, 1231, 34, 185, "Input",ExpressionUUID->"d06fc2e5-a317-429b-acc3-2037e37f0911"],
Cell[1470172, 28102, 652, 20, 138, "Output",ExpressionUUID->"4a078872-31b0-466a-b5d9-f9786fb2e0ba"],
Cell[1470827, 28124, 29966, 552, 191, "Output",ExpressionUUID->"b3feca01-64b8-4aa7-9386-3909dfeec4d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1500830, 28681, 63, 0, 98, "Subsubsection",ExpressionUUID->"3ca79b53-0c00-479c-a3aa-c90b0e928444"],
Cell[1500896, 28683, 54, 0, 55, "Text",ExpressionUUID->"f3294b77-9068-47a4-912d-cafb588587e7"],
Cell[CellGroupData[{
Cell[1500975, 28687, 380, 7, 64, "Input",ExpressionUUID->"2eea3b3f-f872-476b-9b28-cca426833ddf"],
Cell[1501358, 28696, 208, 5, 52, "Output",ExpressionUUID->"cc307ea0-2f02-4957-b93a-5803bce0ea9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1501603, 28706, 306, 7, 64, "Input",ExpressionUUID->"372e674b-7df1-48bf-af59-09f79cc0e867"],
Cell[1501912, 28715, 318, 9, 52, "Output",ExpressionUUID->"e3061dc2-d832-47e9-949a-fbfbe548d766"]
}, Open  ]],
Cell[1502245, 28727, 260, 4, 55, "Text",ExpressionUUID->"5ef13d83-5f65-463c-9b7c-1f95ebaa05de"],
Cell[CellGroupData[{
Cell[1502530, 28735, 281, 6, 64, "Input",ExpressionUUID->"b710b58a-9ab2-4fec-9828-ee0b3157fa50"],
Cell[1502814, 28743, 28408, 518, 159, "Output",ExpressionUUID->"2f40e480-dcc7-417e-839a-56b4b7287d28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531259, 29266, 232, 5, 64, "Input",ExpressionUUID->"f6fa1a4c-821e-46a7-9b1d-fed93efcbff0"],
Cell[1531494, 29273, 28408, 518, 159, "Output",ExpressionUUID->"2fb4560a-a428-484f-bb7a-5b94dc742252"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1559951, 29797, 63, 0, 98, "Subsubsection",ExpressionUUID->"be9aba2a-b5d5-4708-a283-e324d1857cf5"],
Cell[CellGroupData[{
Cell[1560039, 29801, 214, 4, 64, "Input",ExpressionUUID->"591b74dd-7fa5-4c4b-8b4d-92358dd87820"],
Cell[1560256, 29807, 653, 20, 138, "Output",ExpressionUUID->"e5081b00-eeca-4b52-bfa7-e0d1338b411b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1560946, 29832, 181, 3, 64, "Input",ExpressionUUID->"ef7c25ce-29e2-4c74-a61b-574491f9dc01"],
Cell[1561130, 29837, 29967, 552, 191, "Output",ExpressionUUID->"bb3c95d0-92a0-472b-a79f-107dd601631e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1591134, 30394, 307, 7, 64, "Input",ExpressionUUID->"c56521f3-712e-4f47-b9d1-5155dbb11bcb"],
Cell[1591444, 30403, 208, 5, 52, "Output",ExpressionUUID->"2d2dc0c2-7d10-456a-838e-9a629df44cf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1591689, 30413, 305, 7, 64, "Input",ExpressionUUID->"6f3a514e-e29e-4ecc-a743-9d05dc3ac9aa"],
Cell[1591997, 30422, 207, 5, 52, "Output",ExpressionUUID->"9d9224ec-b6d6-47a4-9347-6e53ee7bed47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1592241, 30432, 380, 9, 64, "Input",ExpressionUUID->"5a902a13-516f-4eb8-a2f8-223bc825dbb4"],
Cell[1592624, 30443, 21292, 377, 159, "Output",ExpressionUUID->"6936728b-ef16-4cc1-87e5-f337c52e146c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1613953, 30825, 462, 9, 64, "Input",ExpressionUUID->"d8130e79-4eae-4e87-a490-b7afc87d3c12"],
Cell[1614418, 30836, 21292, 377, 159, "Output",ExpressionUUID->"b760901c-cb3a-4da3-97a2-9aae0d83e622"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1635747, 31218, 207, 5, 64, "Input",ExpressionUUID->"cfcdd078-03ec-436c-be8c-7ee62dc7933c"],
Cell[1635957, 31225, 21292, 377, 159, "Output",ExpressionUUID->"f2539bf0-f8c3-44b9-b7de-d63d730bf35a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1657286, 31607, 291, 6, 64, "Input",ExpressionUUID->"e6615683-30b6-40ae-b129-d272a650012d"],
Cell[1657580, 31615, 21292, 377, 159, "Output",ExpressionUUID->"149d2782-90bb-42ab-8fcf-a8cc5f33b144"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1678921, 31998, 69, 0, 98, "Subsubsection",ExpressionUUID->"4ed64831-6012-4fa2-9023-999d46dad02f"],
Cell[CellGroupData[{
Cell[1679015, 32002, 210, 4, 64, "Input",ExpressionUUID->"3423a777-7201-4a37-a187-ef14f5c99795"],
Cell[1679228, 32008, 653, 20, 138, "Output",ExpressionUUID->"2cae1a6e-a5a1-4f6b-b17d-c63f5d99260a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1679918, 32033, 177, 3, 64, "Input",ExpressionUUID->"be191c8c-1653-439f-828f-93a74d118c6d"],
Cell[1680098, 32038, 29967, 552, 191, "Output",ExpressionUUID->"ee6a2155-ec8d-47c3-8f97-2d1c8afb937c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1710102, 32595, 254, 6, 64, "Input",ExpressionUUID->"b6ba2d95-be1c-42e2-bf42-34ef516d9a6b"],
Cell[1710359, 32603, 153, 3, 52, "Output",ExpressionUUID->"7679f224-15b4-44e8-b4d8-948158863ed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1710549, 32611, 252, 6, 64, "Input",ExpressionUUID->"3a57d579-b9b0-4923-b835-cd1c994005dd"],
Cell[1710804, 32619, 155, 3, 52, "Output",ExpressionUUID->"5ccac0b3-9c13-4e1e-a78d-721ac7fafe99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1710996, 32627, 229, 5, 64, "Input",ExpressionUUID->"c7136f3e-b24f-42b5-a5f9-048a88ed0c61"],
Cell[1711228, 32634, 153, 3, 52, "Output",ExpressionUUID->"e3bb72ea-973a-4ac7-aa92-15b1d4b2c058"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1711418, 32642, 344, 7, 64, "Input",ExpressionUUID->"2e7a1428-90df-4f79-b281-f52ac6a4fbfd"],
Cell[1711765, 32651, 153, 3, 52, "Output",ExpressionUUID->"268e897c-7901-4756-a503-432005fb409b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1711955, 32659, 229, 5, 64, "Input",ExpressionUUID->"2e9bd0ba-b357-4005-8fa1-391614594752"],
Cell[1712187, 32666, 153, 3, 52, "Output",ExpressionUUID->"80032bbb-f675-4ea3-b45d-88633f9a69f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1712377, 32674, 293, 6, 64, "Input",ExpressionUUID->"e07f6b0b-664d-4a90-9494-a43c8889a3ce"],
Cell[1712673, 32682, 153, 3, 52, "Output",ExpressionUUID->"e78039a4-e44d-4860-b6e2-5aa656b06b5f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1712875, 32691, 99, 0, 98, "Subsubsection",ExpressionUUID->"3213564a-d1d9-4d72-9157-79c5a34087ca"],
Cell[CellGroupData[{
Cell[1712999, 32695, 179, 3, 64, "Input",ExpressionUUID->"bd09f317-b354-45fe-a00f-b1df41255d33"],
Cell[1713181, 32700, 49907, 963, 227, "Output",ExpressionUUID->"7fcd9dc2-2af8-4282-865e-15bbb1154550"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1763125, 33668, 220, 4, 64, "Input",ExpressionUUID->"7629ceae-2dc1-41fc-aa86-6ec4444199f2"],
Cell[1763348, 33674, 29201, 539, 163, "Output",ExpressionUUID->"6149509d-7af9-41f2-acfe-6a6e7e40199c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1792586, 34218, 242, 5, 64, "Input",ExpressionUUID->"20d6e2f6-67aa-4714-a1e2-c070036841f9"],
Cell[1792831, 34225, 24853, 449, 133, "Output",ExpressionUUID->"b66a84ab-9c3f-4c8d-995c-6e34c3438fea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1817721, 34679, 254, 5, 64, "Input",ExpressionUUID->"d7a0947a-f40b-426a-9644-9a483460707b"],
Cell[1817978, 34686, 31604, 588, 163, "Output",ExpressionUUID->"54e92e7f-b9ff-41b3-81c7-c8735d51f0a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1849619, 35279, 267, 6, 64, "Input",ExpressionUUID->"07f2e14c-2567-42c4-bba2-317c8228285b"],
Cell[1849889, 35287, 20873, 365, 129, "Output",ExpressionUUID->"5698c543-014d-4595-b519-a757213216c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1870799, 35657, 278, 6, 64, "Input",ExpressionUUID->"69c705c4-1319-4353-b983-2e66e3e82eec"],
Cell[1871080, 35665, 24656, 444, 131, "Output",ExpressionUUID->"dadec7db-aded-4716-96b1-b808eeb3bcae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1895773, 36114, 305, 7, 64, "Input",ExpressionUUID->"f361c212-3ac4-4a5e-a65a-0d0034512731"],
Cell[1896081, 36123, 257, 5, 59, "Output",ExpressionUUID->"4a3a2ee8-05cf-45ec-aae6-0df2610653ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1896375, 36133, 312, 8, 64, "Input",ExpressionUUID->"a06d21bd-b918-47ec-9b71-04795b6bb40a"],
Cell[1896690, 36143, 24839, 448, 133, "Output",ExpressionUUID->"421364a5-a405-4553-b4e6-5b2ccb09d794"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1921566, 36596, 279, 6, 64, "Input",ExpressionUUID->"14852e02-6dd2-4d55-b93a-c41d02899bcd"],
Cell[1921848, 36604, 31040, 569, 165, "Output",ExpressionUUID->"3306b7c3-65e2-4010-8fe8-98ac347ea69b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1952961, 37181, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c8f64293-6a13-4b7a-863b-baf9b7032bcb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1953108, 37187, 124, 0, 174, "Section",ExpressionUUID->"b3f7fc55-e4fe-4358-840b-eaff3a5805f4"],
Cell[CellGroupData[{
Cell[1953257, 37191, 112, 0, 98, "Subsubsection",ExpressionUUID->"04809d21-6afb-499d-8938-927fd95f66b7"],
Cell[1953372, 37193, 295, 5, 55, "Text",ExpressionUUID->"799458ad-bbff-4213-816f-ec38dbc7b2ec"],
Cell[CellGroupData[{
Cell[1953692, 37202, 571, 15, 64, "Input",ExpressionUUID->"7db55c19-e2d3-4fcd-8263-833c3792e2f0"],
Cell[1954266, 37219, 5633, 146, 52, "Output",ExpressionUUID->"1868139e-e433-44f5-b9e7-24faad70bc53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1959936, 37370, 237, 5, 64, "Input",ExpressionUUID->"4bead982-8fdb-401c-87ea-51f9a3625f2c"],
Cell[1960176, 37377, 5171, 136, 52, "Output",ExpressionUUID->"c5ce5b3e-35ca-42cf-b883-9214f10da86d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1965384, 37518, 259, 6, 64, "Input",ExpressionUUID->"e6168866-09da-4baf-be74-e8208f43abb8"],
Cell[1965646, 37526, 1645, 45, 52, "Output",ExpressionUUID->"7627a5b2-9820-455a-8742-b58455f37430"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1967328, 37576, 322, 7, 64, "Input",ExpressionUUID->"a0892135-0600-42fa-8370-c229494ff254"],
Cell[1967653, 37585, 1643, 45, 52, "Output",ExpressionUUID->"ca4f8cf0-3c10-4d09-9a4d-7f56d1273e89"]
}, Open  ]],
Cell[1969311, 37633, 135, 2, 55, "Text",ExpressionUUID->"4698d011-e42e-40d5-a80d-616f52d5e0c1"],
Cell[CellGroupData[{
Cell[1969471, 37639, 181, 3, 64, "Input",ExpressionUUID->"891fab79-de25-4c0f-b3ea-9ed2274793d8"],
Cell[1969655, 37644, 29967, 552, 191, "Output",ExpressionUUID->"3d527720-2715-4a22-a9e6-2acc795fa2d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1999659, 38201, 241, 5, 64, "Input",ExpressionUUID->"c015527b-cae3-4736-86f1-ef2749b46f5c"],
Cell[1999903, 38208, 862, 21, 52, "Output",ExpressionUUID->"9cbfc941-c7af-4fc9-aeaf-a63bf95ceed7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2000802, 38234, 206, 4, 64, "Input",ExpressionUUID->"fcb3efe0-4552-4e5e-851f-7f7a5f955a23"],
Cell[2001011, 38240, 916, 24, 52, "Output",ExpressionUUID->"f9c7e3e8-d43b-4aeb-ab64-9ebd416bd442"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2001964, 38269, 229, 5, 64, "Input",ExpressionUUID->"123244a5-3e3e-4e5f-8ac7-b474811846a2"],
Cell[2002196, 38276, 1029, 27, 93, "Output",ExpressionUUID->"1ef2494a-b34f-4c52-a6b8-ee7a4aae74fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2003262, 38308, 242, 5, 64, "Input",ExpressionUUID->"bf5e1ec7-475f-4d4f-89b8-f77d4b8e7834"],
Cell[2003507, 38315, 1341, 36, 93, "Output",ExpressionUUID->"d41f471f-2d64-4a0b-93a9-0c3036f5cea9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2004897, 38357, 211, 4, 98, "Subsubsection",ExpressionUUID->"8aeb5d29-e795-4f7d-9447-4c01b1159976"],
Cell[2005111, 38363, 197, 2, 55, "Text",ExpressionUUID->"02afa6cd-3f3e-4726-9ef8-cdb381750a06"],
Cell[2005311, 38367, 1204, 30, 55, "Text",ExpressionUUID->"58102514-9d1c-4544-ba8f-137c6e7c181e"],
Cell[2006518, 38399, 1196, 30, 55, "Text",ExpressionUUID->"3c9700a9-9db4-4a2b-8d07-ddc1a9d01f5d"],
Cell[2007717, 38431, 494, 7, 95, "Text",ExpressionUUID->"bdffb18a-7933-4e03-ab25-a1cf8e181fab"],
Cell[2008214, 38440, 664, 18, 56, "Text",ExpressionUUID->"8bf87754-bfca-491c-9b87-703ba9591f13"],
Cell[2008881, 38460, 358, 6, 55, "Text",ExpressionUUID->"80050d05-bf80-4787-a837-eae37eb8a85f"],
Cell[2009242, 38468, 390, 7, 55, "Text",ExpressionUUID->"ff3d0fbf-9dd7-4290-9fd9-d68fe4332aa8"],
Cell[CellGroupData[{
Cell[2009657, 38479, 428, 10, 64, "Input",ExpressionUUID->"8051bdd9-7412-4c8c-a25d-25e2f4e5dc41"],
Cell[2010088, 38491, 217267, 4779, 743, "Output",ExpressionUUID->"a8dc7f6c-dc1f-40fe-847a-392ba5f35ffe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2227392, 43275, 466, 9, 64, "Input",ExpressionUUID->"f5f1a4b0-b542-4895-a105-4e4c287d69f3"],
Cell[2227861, 43286, 79358, 1727, 325, "Output",ExpressionUUID->"063c6a0a-86af-4cc4-b976-e3433be428fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2307292, 45021, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"10e8f9d7-41d1-476a-9107-ec4a3bf9f65c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2307439, 45027, 142, 0, 174, "Section",ExpressionUUID->"817e1e4e-ca98-4039-83e0-8979d599e96d"],
Cell[CellGroupData[{
Cell[2307606, 45031, 201, 3, 98, "Subsubsection",ExpressionUUID->"06cb1281-e1b9-407c-8e85-150058a5d3ac"],
Cell[2307810, 45036, 272, 4, 55, "Text",ExpressionUUID->"b95a3719-2c0e-471e-b770-3f7b76f282d8"],
Cell[CellGroupData[{
Cell[2308107, 45044, 511, 12, 64, "Input",ExpressionUUID->"bb98a41d-2b4e-480f-a99c-4b42bd309aea"],
Cell[2308621, 45058, 208, 5, 52, "Output",ExpressionUUID->"d124e76c-8f15-48c7-9722-4ec364ff20ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2308866, 45068, 473, 12, 64, "Input",ExpressionUUID->"f072d35a-4ab0-4ed7-bd01-1ad3eb70ca4a"],
Cell[2309342, 45082, 208, 5, 52, "Output",ExpressionUUID->"e809af74-5178-4eab-b631-df66cd7bea27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2309587, 45092, 564, 14, 64, "Input",ExpressionUUID->"4b8f282d-fa1c-42be-9475-86fc5b7e191c"],
Cell[2310154, 45108, 210, 5, 52, "Output",ExpressionUUID->"683645a1-3ea6-42a9-a0fc-239786bb09b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2310401, 45118, 522, 14, 64, "Input",ExpressionUUID->"d0bc1254-08f1-41e0-84e5-d13a191e23d4"],
Cell[2310926, 45134, 210, 5, 52, "Output",ExpressionUUID->"f4990945-5738-408d-a228-0d97fbb8ac65"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2311185, 45145, 81, 0, 98, "Subsubsection",ExpressionUUID->"fd17dba4-1896-45f3-bf48-363e66ab4e12"],
Cell[2311269, 45147, 232, 4, 55, "Text",ExpressionUUID->"88b0889e-f56e-4b01-a061-a556d0143de4"],
Cell[CellGroupData[{
Cell[2311526, 45155, 207, 4, 64, "Input",ExpressionUUID->"6076641c-75c2-4596-8877-f3107c112204"],
Cell[2311736, 45161, 861, 21, 52, "Output",ExpressionUUID->"031141d3-01a3-4760-90ed-e243d8c3f673"]
}, Open  ]],
Cell[2312612, 45185, 343, 7, 55, "Text",ExpressionUUID->"8b5858d2-a373-4d7c-9751-70df9a6df2f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2312992, 45197, 197, 3, 98, "Subsubsection",ExpressionUUID->"1be924e0-7010-4368-acd2-1d989136a726"],
Cell[2313192, 45202, 104, 1, 55, "Text",ExpressionUUID->"ce7eccf1-457e-460b-8dff-0ff7eb751828"],
Cell[CellGroupData[{
Cell[2313321, 45207, 613, 16, 64, "Input",ExpressionUUID->"c22d737a-1d58-46cd-8063-3ccdf3aafbe7"],
Cell[2313937, 45225, 364, 9, 52, "Output",ExpressionUUID->"9cad98fb-dd90-44b9-ba1d-c5d068cd390f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2314338, 45239, 454, 11, 64, "Input",ExpressionUUID->"e1f87a29-139d-4022-8493-bfed8104253f"],
Cell[2314795, 45252, 155, 3, 52, "Output",ExpressionUUID->"7ccb8113-a9ec-4f38-a7a4-0be0510769a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2314987, 45260, 474, 11, 64, "Input",ExpressionUUID->"56fa4bec-4c7d-480a-88a8-6a86c70e58f5"],
Cell[2315464, 45273, 365, 9, 52, "Output",ExpressionUUID->"978aaae7-721a-4ef4-b69e-1ff5cd3c69c9"]
}, Open  ]],
Cell[2315844, 45285, 145, 0, 55, "Text",ExpressionUUID->"20278571-0f36-41dd-b37b-0ece7f0ead29"],
Cell[CellGroupData[{
Cell[2316014, 45289, 1093, 29, 105, "Input",ExpressionUUID->"5cb85162-a270-4e9e-88a9-cd961a03bd0e"],
Cell[2317110, 45320, 872, 22, 52, "Output",ExpressionUUID->"e20de94a-3ca1-494c-aa01-d994afefd739"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2318019, 45347, 995, 25, 105, "Input",ExpressionUUID->"b43de983-5687-4795-a90b-b4d532805f01"],
Cell[2319017, 45374, 365, 9, 52, "Output",ExpressionUUID->"89f95396-882f-46dd-9443-339a48fcc622"]
}, Open  ]],
Cell[2319397, 45386, 224, 4, 55, "Text",ExpressionUUID->"b1734bc0-d6aa-4b5f-9033-a92747eb66ed"],
Cell[CellGroupData[{
Cell[2319646, 45394, 488, 12, 64, "Input",ExpressionUUID->"0eb2cb24-651f-48b2-a763-c2f2298a59b3"],
Cell[2320137, 45408, 153, 3, 52, "Output",ExpressionUUID->"b97a8fcd-4386-40a0-8bd4-d8725dfc95ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2320327, 45416, 1010, 27, 105, "Input",ExpressionUUID->"d5863529-61c0-497a-9b04-5a00e520565e"],
Cell[2321340, 45445, 535, 14, 52, "Output",ExpressionUUID->"3ebbd3e2-a4e5-418b-82b7-69ae081d30b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2321912, 45464, 1021, 27, 105, "Input",ExpressionUUID->"1d6e4cf4-3fef-4b2a-88a6-ad959558317d"],
Cell[2322936, 45493, 316, 8, 52, "Output",ExpressionUUID->"e245e679-5d8e-40ba-8360-b31f3938e696"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2323325, 45509, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"13d05aae-8c7a-4418-acba-f3d659d98373",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2323472, 45515, 124, 0, 174, "Section",ExpressionUUID->"6c9b136a-a5e5-43df-a5e6-8a0f2223dd80"],
Cell[2323599, 45517, 350, 6, 55, "Text",ExpressionUUID->"4c32ec05-983e-4e4c-9e5a-d35e9b32d956"],
Cell[CellGroupData[{
Cell[2323974, 45527, 1637, 40, 225, "Input",ExpressionUUID->"60f8febe-76f7-4037-9876-9d377ca58dd9"],
Cell[2325614, 45569, 35461, 649, 221, "Output",ExpressionUUID->"56021f4f-8497-49bd-a4d6-e95fd4c4c50f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2361112, 46223, 58, 0, 98, "Subsubsection",ExpressionUUID->"0b454721-c75c-4206-bf6a-55a1568f2d2a"],
Cell[CellGroupData[{
Cell[2361195, 46227, 506, 11, 64, "Input",ExpressionUUID->"d8135d07-009f-4847-9c0c-684fa662456a"],
Cell[2361704, 46240, 30478, 551, 159, "Output",ExpressionUUID->"877fef1d-d243-44ef-972b-94a0a34b85f5"]
}, Open  ]],
Cell[2392197, 46794, 109, 0, 55, "Text",ExpressionUUID->"898db5a9-a3ee-46af-a4b9-08beff6469d6"],
Cell[CellGroupData[{
Cell[2392331, 46798, 243, 5, 64, "Input",ExpressionUUID->"6a868a42-bedf-4ce4-9429-36f4038afaf3"],
Cell[2392577, 46805, 1350, 34, 93, "Output",ExpressionUUID->"781e88a5-d2f1-4828-bba4-17087609350d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2393964, 46844, 343, 9, 64, "Input",ExpressionUUID->"f00df483-b111-4b3c-af0a-b1c57e18b4c4"],
Cell[2394310, 46855, 798, 21, 52, "Output",ExpressionUUID->"0aa4c8fb-86d6-49e0-abd8-5830aca487b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2395145, 46881, 209, 4, 64, "Input",ExpressionUUID->"8885e7c2-d4f3-4a34-8a65-2d906a4c1996"],
Cell[2395357, 46887, 30480, 551, 159, "Output",ExpressionUUID->"d6bb389a-3848-417b-8601-ceac596978e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2425886, 47444, 58, 0, 98, "Subsubsection",ExpressionUUID->"0789a348-12a3-4f26-ad5c-57289d22882f"],
Cell[CellGroupData[{
Cell[2425969, 47448, 314, 7, 64, "Input",ExpressionUUID->"67bd4abb-918d-4d5c-b9d7-93b28ca3c749"],
Cell[2426286, 47457, 24274, 429, 191, "Output",ExpressionUUID->"810d5dd2-7136-4ad7-9ed3-fa373f28e694"]
}, Open  ]],
Cell[2450575, 47889, 309, 5, 55, "Text",ExpressionUUID->"542815ea-f3db-4f84-8647-e696ef0c7dd3"],
Cell[CellGroupData[{
Cell[2450909, 47898, 323, 8, 64, "Input",ExpressionUUID->"d22b1bde-bbbb-49eb-b930-2eb2c9d8c81a"],
Cell[2451235, 47908, 1350, 34, 93, "Output",ExpressionUUID->"0cc3254d-b7e7-430d-8cf2-952d7115da57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2452622, 47947, 494, 12, 64, "Input",ExpressionUUID->"bf35a3f5-bc7c-45b0-9d9a-edd5165c97e9"],
Cell[2453119, 47961, 420, 12, 52, "Output",ExpressionUUID->"d080d429-446f-4c42-9322-edaa81272f78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2453576, 47978, 687, 19, 64, "Input",ExpressionUUID->"d6906bac-cbd4-4682-8720-221cf3b2b05d"],
Cell[2454266, 47999, 360, 11, 52, "Output",ExpressionUUID->"d2cb3a86-a44c-4b49-b302-6e01f3b699ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2454663, 48015, 213, 4, 64, "Input",ExpressionUUID->"56a7a910-98be-44d3-8def-55ab3f4002ee"],
Cell[2454879, 48021, 24273, 429, 191, "Output",ExpressionUUID->"5a9d8996-b2c1-49b6-bd88-b1929eb8deec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2479201, 48456, 93, 0, 98, "Subsubsection",ExpressionUUID->"dca70f20-a5b2-4101-9ead-ae5f6a1b2fae"],
Cell[CellGroupData[{
Cell[2479319, 48460, 406, 11, 65, "Input",ExpressionUUID->"5b99c4a7-7a6d-4e14-85e5-cd765aaa6d3d"],
Cell[2479728, 48473, 27759, 505, 221, "Output",ExpressionUUID->"ece5a03c-4832-4df6-bbee-9ca2bc7e080c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2507524, 48983, 240, 5, 64, "Input",ExpressionUUID->"55a44065-8c7e-41cc-b381-25e7d8afceb2"],
Cell[2507767, 48990, 1352, 34, 93, "Output",ExpressionUUID->"be78feae-6cb2-4220-8038-d596e7632d72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2509156, 49029, 371, 10, 65, "Input",ExpressionUUID->"b9525b19-ab7e-40b1-b327-cc6363f23191"],
Cell[2509530, 49041, 936, 25, 52, "Output",ExpressionUUID->"b7374d61-9d96-438b-8a7c-9df4802dc071"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2510503, 49071, 206, 4, 64, "Input",ExpressionUUID->"492d2aed-053a-48d2-84a8-3e8c0d41e6a0"],
Cell[2510712, 49077, 27757, 505, 221, "Output",ExpressionUUID->"a00bf907-43f0-425b-9fdc-dc306f4b1371"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2538506, 49587, 536, 14, 65, "Input",ExpressionUUID->"9d0bfd54-38ff-4ffd-97aa-768dcc539400"],
Cell[2539045, 49603, 25675, 461, 159, "Output",ExpressionUUID->"55f04c64-5f0c-409a-ab85-4252ed558521"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2564757, 50069, 284, 7, 64, "Input",ExpressionUUID->"11d4936b-f5cc-4a76-9ec3-3f9c7d31a7da"],
Cell[2565044, 50078, 798, 21, 52, "Output",ExpressionUUID->"1008e53a-122f-49e4-88a6-5ef2e79ff7cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2565879, 50104, 373, 10, 65, "Input",ExpressionUUID->"191ca93a-9ad9-4100-8662-8796753fb94a"],
Cell[2566255, 50116, 555, 15, 52, "Output",ExpressionUUID->"11087edc-991a-40a8-8782-072c240cf8b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2566847, 50136, 204, 4, 64, "Input",ExpressionUUID->"2782721a-b0e7-4471-9ce7-44b5710c4039"],
Cell[2567054, 50142, 25674, 461, 159, "Output",ExpressionUUID->"84cc42f7-d18f-4412-b8a5-4bd19b1b575d"]
}, Open  ]],
Cell[2592743, 50606, 48556, 803, 428, "Text",ExpressionUUID->"8043a1ba-32a1-4cc0-b91e-711cf59e5602"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2641360, 51416, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b929761a-792d-4f0c-a7fd-5b2ffdfb2c07",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2641507, 51422, 193, 3, 174, "Section",ExpressionUUID->"351d9736-40fe-4492-93ad-7c2533b546fa"],
Cell[CellGroupData[{
Cell[2641725, 51429, 1161, 29, 145, "Input",ExpressionUUID->"1931ec50-bed2-459f-8e56-303793e4512c"],
Cell[2642889, 51460, 36199, 679, 191, "Output",ExpressionUUID->"5c6e9d59-7e6c-488d-b198-5907c1b9a6a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2679125, 52144, 58, 0, 98, "Subsubsection",ExpressionUUID->"12e5e457-4f68-4032-930f-6d9823b51bb2"],
Cell[CellGroupData[{
Cell[2679208, 52148, 297, 7, 64, "Input",ExpressionUUID->"0a72eb7c-a4bb-4198-bfff-541a8f174dfa"],
Cell[2679508, 52157, 36214, 679, 191, "Output",ExpressionUUID->"2c8a58e8-3cd9-4a79-903f-baacf674116f"]
}, Open  ]],
Cell[2715737, 52839, 109, 0, 55, "Text",ExpressionUUID->"2302a4d0-11fc-4874-a830-b9afc4e3b925"],
Cell[CellGroupData[{
Cell[2715871, 52843, 175, 4, 64, "Input",ExpressionUUID->"0abd523e-3023-43f9-ae57-4da570d2f0a3"],
Cell[2716049, 52849, 1037, 26, 93, "Output",ExpressionUUID->"ed674c97-8b47-465b-89da-777819534d6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2717123, 52880, 255, 6, 64, "Input",ExpressionUUID->"3be3fa78-35f8-46bf-a9c4-dcf8302b15b6"],
Cell[2717381, 52888, 1045, 26, 93, "Output",ExpressionUUID->"536a645a-100c-458a-8b05-dcf0f88f8560"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2718463, 52919, 213, 4, 64, "Input",ExpressionUUID->"e08d85ab-dda1-4d51-8245-277be8d4ac22"],
Cell[2718679, 52925, 36212, 679, 191, "Output",ExpressionUUID->"0904d30e-b539-45fc-bb29-df31bb1dcef6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2754964, 53612, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"92734af5-9b5b-4d3d-a5a2-bf1bc59bea44",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2755111, 53618, 173, 3, 174, "Section",ExpressionUUID->"dd7eaffc-6b8e-466f-979b-a4629a6a56d2"],
Cell[CellGroupData[{
Cell[2755309, 53625, 1447, 37, 225, "Input",ExpressionUUID->"ce011945-9a51-47d4-9435-91899e796293"],
Cell[2756759, 53664, 35405, 649, 221, "Output",ExpressionUUID->"98e178f2-b0c0-4160-8be4-59562734b3d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2792201, 54318, 58, 0, 98, "Subsubsection",ExpressionUUID->"8c9d5eb2-abd2-4b19-b8ca-736c52d88879"],
Cell[CellGroupData[{
Cell[2792284, 54322, 309, 6, 64, "Input",ExpressionUUID->"e56dfd8a-b4d5-4a7d-9b85-23819321599d"],
Cell[2792596, 54330, 21812, 389, 191, "Output",ExpressionUUID->"25c52053-c88d-454d-b68c-adc810d1b887"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2814445, 54724, 293, 6, 64, "Input",ExpressionUUID->"e8f585cc-3516-4f71-a46e-37ffa569ffc1"],
Cell[2814741, 54732, 1340, 34, 93, "Output",ExpressionUUID->"ef3b1d84-f37f-4435-b35c-724a0ac89898"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2816118, 54771, 312, 7, 64, "Input",ExpressionUUID->"eea69263-d028-4894-b976-c9557f10d8fd"],
Cell[2816433, 54780, 1338, 34, 93, "Output",ExpressionUUID->"c8a8f8f0-583a-4b8c-9b6e-d0980be046c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2817808, 54819, 246, 6, 64, "Input",ExpressionUUID->"6a0a5c0a-6c40-40a4-a9c5-6fa4ac29c804"],
Cell[2818057, 54827, 420, 12, 52, "Output",ExpressionUUID->"50dba4e0-d111-4191-bd55-560dc25bc207"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2818514, 54844, 230, 5, 64, "Input",ExpressionUUID->"6e9b9bd8-b4f2-4bfb-af70-62b3a2aadf08"],
Cell[2818747, 54851, 222, 5, 52, "Output",ExpressionUUID->"07eee61a-3d2d-4765-8cfa-c11d92398e45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2819006, 54861, 213, 4, 64, "Input",ExpressionUUID->"dc16343a-407c-4b7a-bbb4-79f31b67aabd"],
Cell[2819222, 54867, 21812, 389, 191, "Output",ExpressionUUID->"ce0cc47c-e484-4138-8059-dbb7d6006fa0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2841083, 55262, 58, 0, 98, "Subsubsection",ExpressionUUID->"b1bce1d0-5b39-4a0a-b4da-e36d5ef71ac3"],
Cell[CellGroupData[{
Cell[2841166, 55266, 253, 5, 64, "Input",ExpressionUUID->"a2a40618-e898-4d1c-b3e3-b94386270d8d"],
Cell[2841422, 55273, 173, 4, 71, "Output",ExpressionUUID->"4125849d-4fb9-465e-bf85-c46144b6b217"]
}, Open  ]],
Cell[2841610, 55280, 981, 23, 55, "Text",ExpressionUUID->"a96bc01e-58e4-4500-8db0-f4a6734c068d"],
Cell[CellGroupData[{
Cell[2842616, 55307, 186, 3, 64, "Input",ExpressionUUID->"8944ee19-d7d5-4b60-bfa1-46dad05dd751"],
Cell[2842805, 55312, 1362, 34, 93, "Output",ExpressionUUID->"3912386d-54d3-4715-ae42-300d42a22dfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2844204, 55351, 214, 4, 64, "Input",ExpressionUUID->"bd5ee203-3754-4294-8738-f6c10cadc202"],
Cell[2844421, 55357, 2111, 34, 100, "Message",ExpressionUUID->"fdf961c2-8af2-4acf-9410-a624a9c622d4"],
Cell[2846535, 55393, 1398, 35, 93, "Output",ExpressionUUID->"ba28d2fd-bb11-4e9a-89ab-cb60a580cbd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2847970, 55433, 255, 6, 64, "Input",ExpressionUUID->"c81c352a-f33a-4099-8b70-8c69dd013438"],
Cell[2848228, 55441, 422, 12, 52, "Output",ExpressionUUID->"ce204ce9-88d3-40a5-b980-ad6fd1369e3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2848687, 55458, 232, 5, 64, "Input",ExpressionUUID->"7bedb15a-76fd-4955-a2dd-707b1d1a3228"],
Cell[2848922, 55465, 220, 5, 52, "Output",ExpressionUUID->"255cc49e-18f4-4d1c-9a35-0b24404cfdce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2849179, 55475, 230, 5, 64, "Input",ExpressionUUID->"067eccf1-d09d-4cf2-b0fc-d12a228d1a53"],
Cell[2849412, 55482, 174, 4, 71, "Output",ExpressionUUID->"5e85beba-66a3-4137-8e4c-ffad33e67525"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2849635, 55492, 58, 0, 98, "Subsubsection",ExpressionUUID->"c5d3c47e-83ee-4d5e-96e9-eaf0b0c3f5bf"],
Cell[CellGroupData[{
Cell[2849718, 55496, 184, 3, 64, "Input",ExpressionUUID->"916006cd-134b-4924-8dc5-a90131e66956"],
Cell[2849905, 55501, 217291, 4779, 743, "Output",ExpressionUUID->"daf2e9eb-9f69-4951-b38b-3b1ef766d2a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3067233, 60285, 289, 7, 64, "Input",ExpressionUUID->"385fd659-e42b-439b-b0ea-4f4e0f881706"],
Cell[3067525, 60294, 79201, 1724, 325, "Output",ExpressionUUID->"ffbd9cee-d481-49b9-88e9-d16d4652097f"]
}, Open  ]],
Cell[3146741, 62021, 109, 0, 55, "Text",ExpressionUUID->"45ff01ef-0d71-4223-82b1-65fb796ffa41"],
Cell[3146853, 62023, 684, 15, 55, "Text",ExpressionUUID->"c1a4ac41-1491-4a73-94b0-b6f1483805e6"],
Cell[3147540, 62040, 294, 7, 64, "Input",ExpressionUUID->"95edb94b-ba59-478f-bf4c-7b4691715108"],
Cell[CellGroupData[{
Cell[3147859, 62051, 301, 7, 64, "Input",ExpressionUUID->"27d683bb-57c2-4067-9f94-32f0d94d9a1e"],
Cell[3148163, 62060, 10573, 265, 264, "Output",ExpressionUUID->"8ae32e6b-c7ca-48dc-8e7c-fc2120d2df01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3158773, 62330, 246, 7, 64, "Input",ExpressionUUID->"126006e2-db46-4dad-a99e-42e8a1aedd2b"],
Cell[3159022, 62339, 24186, 420, 3533, "Output",ExpressionUUID->"eb55d117-2679-4198-ac8f-6d0fdc53b5e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3183245, 62764, 236, 5, 64, "Input",ExpressionUUID->"7232879f-045b-47c2-a6e7-b20e949389ea"],
Cell[3183484, 62771, 32572, 904, 166, "Output",ExpressionUUID->"2443a374-c5f0-4223-90ec-5d113465e87e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3216093, 63680, 211, 4, 64, "Input",ExpressionUUID->"822edc25-d813-4e2b-bd52-f6bcb35cc615"],
Cell[3216307, 63686, 79200, 1724, 325, "Output",ExpressionUUID->"f1576c41-e3ed-46d4-acdf-5ca1d90ed6e2"]
}, Open  ]],
Cell[3295522, 65413, 183877, 3022, 595, "Text",ExpressionUUID->"189b5c2e-dff6-4db7-b59e-9c7f0594f133"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3479460, 68442, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4c32e469-9de5-4eca-9c5e-c5019f00316a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3479607, 68448, 153, 3, 174, "Section",ExpressionUUID->"9503359a-3e82-46ce-b923-1055fbeadbed"],
Cell[CellGroupData[{
Cell[3479785, 68455, 255, 4, 56, "Item",ExpressionUUID->"07a048b9-a133-4950-a0f1-6eb033acb4c7"],
Cell[3480043, 68461, 328, 5, 56, "Item",ExpressionUUID->"182bcf43-95de-4cd2-baff-7d14fee2a9ef"],
Cell[3480374, 68468, 237, 4, 56, "Item",ExpressionUUID->"03141302-298b-4b6b-86d6-e68b5ba0b74d"],
Cell[3480614, 68474, 263, 4, 56, "Item",ExpressionUUID->"9e574773-5a56-4991-bf37-d48481eebe9c"],
Cell[3480880, 68480, 319, 6, 56, "Item",ExpressionUUID->"4b362fc7-c739-4588-a9b1-e079df2df2ed"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3481260, 68493, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"72f8a04e-2247-4d9c-9e6c-63a794d9c840",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3481407, 68499, 420, 6, 174, "Section",ExpressionUUID->"48de7189-1228-4b12-826d-7e82924f74da"],
Cell[3481830, 68507, 327, 7, 84, "Input",ExpressionUUID->"0a559761-3f55-477b-ae32-43b99eb63142",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

